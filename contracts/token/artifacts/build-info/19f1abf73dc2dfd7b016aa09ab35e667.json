{
	"id": "19f1abf73dc2dfd7b016aa09ab35e667",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/token/Token.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\n\ncontract TokenMint is ERC20, AccessControl, ReentrancyGuard, Pausable {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    uint8 private immutable _decimals = 18;\n    event Minted(address indexed sender, uint256 amount );\n\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        address admin\n    )\n        ERC20(name_, symbol_)\n    {\n        require(admin != address(0), \"Admin cannot be zero address\");\n        _grantRole(DEFAULT_ADMIN_ROLE, admin);\n        _grantRole(MINTER_ROLE, admin);\n    }\n\n    function mint(\n        address to,\n        uint256 amount\n    ) external onlyRole(MINTER_ROLE) nonReentrant {\n        _mint(to, amount);\n    }\n\n    function decimals() public pure override returns (uint8) {\n        return _decimals;\n    }\n\n    function pause() external onlyRole(PAUSER_ROLE) {\n        _pause();\n    }\n\n\n}"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 533,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 634,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 711,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 717,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 719,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 721,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 723,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/Token.sol": {
				"TokenMint": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Minted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PAUSER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/token/Token.sol\":291:1233  contract TokenMint is ERC20, AccessControl, ReentrancyGuard, Pausable {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/token/Token.sol\":539:541  18 */\n  0x12\n    /* \"contracts/token/Token.sol\":503:541  uint8 private immutable _decimals = 18 */\n  0xff\n  and\n  0x80\n  swap1\n  0xff\n  and\n  dup2\n  mstore\n  pop\n    /* \"contracts/token/Token.sol\":607:906  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/token/Token.sol\":722:727  name_ */\n  dup3\n    /* \"contracts/token/Token.sol\":729:736  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_11\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x07\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/token/Token.sol\":777:778  0 */\n  0x00\n    /* \"contracts/token/Token.sol\":760:779  admin != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/token/Token.sol\":760:765  admin */\n  dup2\n    /* \"contracts/token/Token.sol\":760:779  admin != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/token/Token.sol\":752:812  require(admin != address(0), \"Admin cannot be zero address\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"contracts/token/Token.sol\":822:859  _grantRole(DEFAULT_ADMIN_ROLE, admin) */\n  tag_18\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"contracts/token/Token.sol\":833:851  DEFAULT_ADMIN_ROLE */\n  0x00\n  shl\n    /* \"contracts/token/Token.sol\":853:858  admin */\n  dup3\n    /* \"contracts/token/Token.sol\":822:832  _grantRole */\n  shl(0x20, tag_19)\n    /* \"contracts/token/Token.sol\":822:859  _grantRole(DEFAULT_ADMIN_ROLE, admin) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n  pop\n    /* \"contracts/token/Token.sol\":869:899  _grantRole(MINTER_ROLE, admin) */\n  tag_20\n    /* \"contracts/token/Token.sol\":405:429  keccak256(\"MINTER_ROLE\") */\n  0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n    /* \"contracts/token/Token.sol\":893:898  admin */\n  dup3\n    /* \"contracts/token/Token.sol\":869:879  _grantRole */\n  shl(0x20, tag_19)\n    /* \"contracts/token/Token.sol\":869:899  _grantRole(MINTER_ROLE, admin) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n  pop\n    /* \"contracts/token/Token.sol\":607:906  constructor(... */\n  pop\n  pop\n  pop\n    /* \"contracts/token/Token.sol\":291:1233  contract TokenMint is ERC20, AccessControl, ReentrancyGuard, Pausable {... */\n  jump(tag_21)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_19:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_23\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_24)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_25\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_26\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_27)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_26:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_22)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_25:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_22:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_24:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_27:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_31:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_32:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_33:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_34:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_35:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  0x00\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_36:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_37:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_38:\n    /* \"#utility.yul\":957:984   */\n  tag_79\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_36\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_81\n  tag_37\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":1030:1118   */\ntag_80:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_39:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_83\n  tag_31\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_84\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_38\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_40:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_87\n  tag_37\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":1434:1490   */\ntag_86:\n    /* \"#utility.yul\":1508:1537   */\n  tag_88\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_36\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_41:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_42:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_91\n    /* \"#utility.yul\":1885:1934   */\n  tag_92\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_40\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":1869:1935   */\n  tag_39\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_94\n  tag_35\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":2010:2122   */\ntag_93:\n    /* \"#utility.yul\":2131:2183   */\n  tag_95\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_41\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_43:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_97\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_98\n  tag_34\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2292:2414   */\ntag_97:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_99\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_42\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2696   */\ntag_44:\n    /* \"#utility.yul\":2607:2614   */\n  0x00\n    /* \"#utility.yul\":2647:2689   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2640:2645   */\n  dup3\n    /* \"#utility.yul\":2636:2690   */\n  and\n    /* \"#utility.yul\":2625:2690   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2696   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2702:2798   */\ntag_45:\n    /* \"#utility.yul\":2739:2746   */\n  0x00\n    /* \"#utility.yul\":2768:2792   */\n  tag_102\n    /* \"#utility.yul\":2786:2791   */\n  dup3\n    /* \"#utility.yul\":2768:2792   */\n  tag_44\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2757:2792   */\n  swap1\n  pop\n    /* \"#utility.yul\":2702:2798   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2804:2926   */\ntag_46:\n    /* \"#utility.yul\":2877:2901   */\n  tag_104\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2877:2901   */\n  tag_45\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":2870:2875   */\n  dup2\n    /* \"#utility.yul\":2867:2902   */\n  eq\n    /* \"#utility.yul\":2857:2920   */\n  tag_105\n  jumpi\n    /* \"#utility.yul\":2916:2917   */\n  0x00\n    /* \"#utility.yul\":2913:2914   */\n  0x00\n    /* \"#utility.yul\":2906:2918   */\n  revert\n    /* \"#utility.yul\":2857:2920   */\ntag_105:\n    /* \"#utility.yul\":2804:2926   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2932:3075   */\ntag_47:\n    /* \"#utility.yul\":2989:2994   */\n  0x00\n    /* \"#utility.yul\":3020:3026   */\n  dup2\n    /* \"#utility.yul\":3014:3027   */\n  mload\n    /* \"#utility.yul\":3005:3027   */\n  swap1\n  pop\n    /* \"#utility.yul\":3036:3069   */\n  tag_107\n    /* \"#utility.yul\":3063:3068   */\n  dup2\n    /* \"#utility.yul\":3036:3069   */\n  tag_46\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":2932:3075   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3081:4090   */\ntag_3:\n    /* \"#utility.yul\":3189:3195   */\n  0x00\n    /* \"#utility.yul\":3197:3203   */\n  0x00\n    /* \"#utility.yul\":3205:3211   */\n  0x00\n    /* \"#utility.yul\":3254:3256   */\n  0x60\n    /* \"#utility.yul\":3242:3251   */\n  dup5\n    /* \"#utility.yul\":3233:3240   */\n  dup7\n    /* \"#utility.yul\":3229:3252   */\n  sub\n    /* \"#utility.yul\":3225:3257   */\n  slt\n    /* \"#utility.yul\":3222:3341   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":3260:3339   */\n  tag_110\n  tag_32\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":3222:3341   */\ntag_109:\n    /* \"#utility.yul\":3401:3402   */\n  0x00\n    /* \"#utility.yul\":3390:3399   */\n  dup5\n    /* \"#utility.yul\":3386:3403   */\n  add\n    /* \"#utility.yul\":3380:3404   */\n  mload\n    /* \"#utility.yul\":3431:3449   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3423:3429   */\n  dup2\n    /* \"#utility.yul\":3420:3450   */\n  gt\n    /* \"#utility.yul\":3417:3534   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":3453:3532   */\n  tag_112\n  tag_33\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":3417:3534   */\ntag_111:\n    /* \"#utility.yul\":3558:3632   */\n  tag_113\n    /* \"#utility.yul\":3624:3631   */\n  dup7\n    /* \"#utility.yul\":3615:3621   */\n  dup3\n    /* \"#utility.yul\":3604:3613   */\n  dup8\n    /* \"#utility.yul\":3600:3622   */\n  add\n    /* \"#utility.yul\":3558:3632   */\n  tag_43\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3548:3632   */\n  swap4\n  pop\n    /* \"#utility.yul\":3351:3642   */\n  pop\n    /* \"#utility.yul\":3702:3704   */\n  0x20\n    /* \"#utility.yul\":3691:3700   */\n  dup5\n    /* \"#utility.yul\":3687:3705   */\n  add\n    /* \"#utility.yul\":3681:3706   */\n  mload\n    /* \"#utility.yul\":3733:3751   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3725:3731   */\n  dup2\n    /* \"#utility.yul\":3722:3752   */\n  gt\n    /* \"#utility.yul\":3719:3836   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":3755:3834   */\n  tag_115\n  tag_33\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3719:3836   */\ntag_114:\n    /* \"#utility.yul\":3860:3934   */\n  tag_116\n    /* \"#utility.yul\":3926:3933   */\n  dup7\n    /* \"#utility.yul\":3917:3923   */\n  dup3\n    /* \"#utility.yul\":3906:3915   */\n  dup8\n    /* \"#utility.yul\":3902:3924   */\n  add\n    /* \"#utility.yul\":3860:3934   */\n  tag_43\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3850:3934   */\n  swap3\n  pop\n    /* \"#utility.yul\":3652:3944   */\n  pop\n    /* \"#utility.yul\":3983:3985   */\n  0x40\n    /* \"#utility.yul\":4009:4073   */\n  tag_117\n    /* \"#utility.yul\":4065:4072   */\n  dup7\n    /* \"#utility.yul\":4056:4062   */\n  dup3\n    /* \"#utility.yul\":4045:4054   */\n  dup8\n    /* \"#utility.yul\":4041:4063   */\n  add\n    /* \"#utility.yul\":4009:4073   */\n  tag_47\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":3999:4073   */\n  swap2\n  pop\n    /* \"#utility.yul\":3954:4083   */\n  pop\n    /* \"#utility.yul\":3081:4090   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":4096:4195   */\ntag_48:\n    /* \"#utility.yul\":4148:4154   */\n  0x00\n    /* \"#utility.yul\":4182:4187   */\n  dup2\n    /* \"#utility.yul\":4176:4188   */\n  mload\n    /* \"#utility.yul\":4166:4188   */\n  swap1\n  pop\n    /* \"#utility.yul\":4096:4195   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4201:4381   */\ntag_49:\n    /* \"#utility.yul\":4249:4326   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4246:4247   */\n  0x00\n    /* \"#utility.yul\":4239:4327   */\n  mstore\n    /* \"#utility.yul\":4346:4350   */\n  0x22\n    /* \"#utility.yul\":4343:4344   */\n  0x04\n    /* \"#utility.yul\":4336:4351   */\n  mstore\n    /* \"#utility.yul\":4370:4374   */\n  0x24\n    /* \"#utility.yul\":4367:4368   */\n  0x00\n    /* \"#utility.yul\":4360:4375   */\n  revert\n    /* \"#utility.yul\":4387:4707   */\ntag_50:\n    /* \"#utility.yul\":4431:4437   */\n  0x00\n    /* \"#utility.yul\":4468:4469   */\n  0x02\n    /* \"#utility.yul\":4462:4466   */\n  dup3\n    /* \"#utility.yul\":4458:4470   */\n  div\n    /* \"#utility.yul\":4448:4470   */\n  swap1\n  pop\n    /* \"#utility.yul\":4515:4516   */\n  0x01\n    /* \"#utility.yul\":4509:4513   */\n  dup3\n    /* \"#utility.yul\":4505:4517   */\n  and\n    /* \"#utility.yul\":4536:4554   */\n  dup1\n    /* \"#utility.yul\":4526:4607   */\n  tag_121\n  jumpi\n    /* \"#utility.yul\":4592:4596   */\n  0x7f\n    /* \"#utility.yul\":4584:4590   */\n  dup3\n    /* \"#utility.yul\":4580:4597   */\n  and\n    /* \"#utility.yul\":4570:4597   */\n  swap2\n  pop\n    /* \"#utility.yul\":4526:4607   */\ntag_121:\n    /* \"#utility.yul\":4654:4656   */\n  0x20\n    /* \"#utility.yul\":4646:4652   */\n  dup3\n    /* \"#utility.yul\":4643:4657   */\n  lt\n    /* \"#utility.yul\":4623:4641   */\n  dup2\n    /* \"#utility.yul\":4620:4658   */\n  sub\n    /* \"#utility.yul\":4617:4701   */\n  tag_122\n  jumpi\n    /* \"#utility.yul\":4673:4691   */\n  tag_123\n  tag_49\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":4617:4701   */\ntag_122:\n    /* \"#utility.yul\":4438:4707   */\n  pop\n    /* \"#utility.yul\":4387:4707   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4713:4854   */\ntag_51:\n    /* \"#utility.yul\":4762:4766   */\n  0x00\n    /* \"#utility.yul\":4785:4788   */\n  dup2\n    /* \"#utility.yul\":4777:4788   */\n  swap1\n  pop\n    /* \"#utility.yul\":4808:4811   */\n  dup2\n    /* \"#utility.yul\":4805:4806   */\n  0x00\n    /* \"#utility.yul\":4798:4812   */\n  mstore\n    /* \"#utility.yul\":4842:4846   */\n  0x20\n    /* \"#utility.yul\":4839:4840   */\n  0x00\n    /* \"#utility.yul\":4829:4847   */\n  keccak256\n    /* \"#utility.yul\":4821:4847   */\n  swap1\n  pop\n    /* \"#utility.yul\":4713:4854   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4860:4953   */\ntag_52:\n    /* \"#utility.yul\":4897:4903   */\n  0x00\n    /* \"#utility.yul\":4944:4946   */\n  0x20\n    /* \"#utility.yul\":4939:4941   */\n  0x1f\n    /* \"#utility.yul\":4932:4937   */\n  dup4\n    /* \"#utility.yul\":4928:4942   */\n  add\n    /* \"#utility.yul\":4924:4947   */\n  div\n    /* \"#utility.yul\":4914:4947   */\n  swap1\n  pop\n    /* \"#utility.yul\":4860:4953   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4959:5066   */\ntag_53:\n    /* \"#utility.yul\":5003:5011   */\n  0x00\n    /* \"#utility.yul\":5053:5058   */\n  dup3\n    /* \"#utility.yul\":5047:5051   */\n  dup3\n    /* \"#utility.yul\":5043:5059   */\n  shl\n    /* \"#utility.yul\":5022:5059   */\n  swap1\n  pop\n    /* \"#utility.yul\":4959:5066   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5072:5465   */\ntag_54:\n    /* \"#utility.yul\":5141:5147   */\n  0x00\n    /* \"#utility.yul\":5191:5192   */\n  0x08\n    /* \"#utility.yul\":5179:5189   */\n  dup4\n    /* \"#utility.yul\":5175:5193   */\n  mul\n    /* \"#utility.yul\":5214:5311   */\n  tag_128\n    /* \"#utility.yul\":5244:5310   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5233:5242   */\n  dup3\n    /* \"#utility.yul\":5214:5311   */\n  tag_53\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":5332:5371   */\n  tag_129\n    /* \"#utility.yul\":5362:5370   */\n  dup7\n    /* \"#utility.yul\":5351:5360   */\n  dup4\n    /* \"#utility.yul\":5332:5371   */\n  tag_53\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":5320:5371   */\n  swap6\n  pop\n    /* \"#utility.yul\":5404:5408   */\n  dup1\n    /* \"#utility.yul\":5400:5409   */\n  not\n    /* \"#utility.yul\":5393:5398   */\n  dup5\n    /* \"#utility.yul\":5389:5410   */\n  and\n    /* \"#utility.yul\":5380:5410   */\n  swap4\n  pop\n    /* \"#utility.yul\":5453:5457   */\n  dup1\n    /* \"#utility.yul\":5443:5451   */\n  dup7\n    /* \"#utility.yul\":5439:5458   */\n  and\n    /* \"#utility.yul\":5432:5437   */\n  dup5\n    /* \"#utility.yul\":5429:5459   */\n  or\n    /* \"#utility.yul\":5419:5459   */\n  swap3\n  pop\n    /* \"#utility.yul\":5148:5465   */\n  pop\n  pop\n    /* \"#utility.yul\":5072:5465   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5471:5548   */\ntag_55:\n    /* \"#utility.yul\":5508:5515   */\n  0x00\n    /* \"#utility.yul\":5537:5542   */\n  dup2\n    /* \"#utility.yul\":5526:5542   */\n  swap1\n  pop\n    /* \"#utility.yul\":5471:5548   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5554:5614   */\ntag_56:\n    /* \"#utility.yul\":5582:5585   */\n  0x00\n    /* \"#utility.yul\":5603:5608   */\n  dup2\n    /* \"#utility.yul\":5596:5608   */\n  swap1\n  pop\n    /* \"#utility.yul\":5554:5614   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5620:5762   */\ntag_57:\n    /* \"#utility.yul\":5670:5679   */\n  0x00\n    /* \"#utility.yul\":5703:5756   */\n  tag_133\n    /* \"#utility.yul\":5721:5755   */\n  tag_134\n    /* \"#utility.yul\":5730:5754   */\n  tag_135\n    /* \"#utility.yul\":5748:5753   */\n  dup5\n    /* \"#utility.yul\":5730:5754   */\n  tag_55\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5721:5755   */\n  tag_56\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":5703:5756   */\n  tag_55\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":5690:5756   */\n  swap1\n  pop\n    /* \"#utility.yul\":5620:5762   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5768:5843   */\ntag_58:\n    /* \"#utility.yul\":5811:5814   */\n  0x00\n    /* \"#utility.yul\":5832:5837   */\n  dup2\n    /* \"#utility.yul\":5825:5837   */\n  swap1\n  pop\n    /* \"#utility.yul\":5768:5843   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5849:6118   */\ntag_59:\n    /* \"#utility.yul\":5959:5998   */\n  tag_138\n    /* \"#utility.yul\":5990:5997   */\n  dup4\n    /* \"#utility.yul\":5959:5998   */\n  tag_57\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":6020:6111   */\n  tag_139\n    /* \"#utility.yul\":6069:6110   */\n  tag_140\n    /* \"#utility.yul\":6093:6109   */\n  dup3\n    /* \"#utility.yul\":6069:6110   */\n  tag_58\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":6061:6067   */\n  dup5\n    /* \"#utility.yul\":6054:6058   */\n  dup5\n    /* \"#utility.yul\":6048:6059   */\n  sload\n    /* \"#utility.yul\":6020:6111   */\n  tag_54\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":6014:6018   */\n  dup3\n    /* \"#utility.yul\":6007:6112   */\n  sstore\n    /* \"#utility.yul\":5925:6118   */\n  pop\n    /* \"#utility.yul\":5849:6118   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6124:6197   */\ntag_60:\n    /* \"#utility.yul\":6169:6172   */\n  0x00\n    /* \"#utility.yul\":6190:6191   */\n  0x00\n    /* \"#utility.yul\":6183:6191   */\n  swap1\n  pop\n    /* \"#utility.yul\":6124:6197   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6203:6392   */\ntag_61:\n    /* \"#utility.yul\":6280:6312   */\n  tag_143\n  tag_60\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":6321:6386   */\n  tag_144\n    /* \"#utility.yul\":6379:6385   */\n  dup2\n    /* \"#utility.yul\":6371:6377   */\n  dup5\n    /* \"#utility.yul\":6365:6369   */\n  dup5\n    /* \"#utility.yul\":6321:6386   */\n  tag_59\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":6256:6392   */\n  pop\n    /* \"#utility.yul\":6203:6392   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6398:6584   */\ntag_62:\n    /* \"#utility.yul\":6458:6578   */\ntag_146:\n    /* \"#utility.yul\":6475:6478   */\n  dup2\n    /* \"#utility.yul\":6468:6473   */\n  dup2\n    /* \"#utility.yul\":6465:6479   */\n  lt\n    /* \"#utility.yul\":6458:6578   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":6529:6568   */\n  tag_149\n    /* \"#utility.yul\":6566:6567   */\n  0x00\n    /* \"#utility.yul\":6559:6564   */\n  dup3\n    /* \"#utility.yul\":6529:6568   */\n  tag_61\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":6502:6503   */\n  0x01\n    /* \"#utility.yul\":6495:6500   */\n  dup2\n    /* \"#utility.yul\":6491:6504   */\n  add\n    /* \"#utility.yul\":6482:6504   */\n  swap1\n  pop\n    /* \"#utility.yul\":6458:6578   */\n  jump(tag_146)\ntag_148:\n    /* \"#utility.yul\":6398:6584   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6590:7133   */\ntag_63:\n    /* \"#utility.yul\":6691:6693   */\n  0x1f\n    /* \"#utility.yul\":6686:6689   */\n  dup3\n    /* \"#utility.yul\":6683:6694   */\n  gt\n    /* \"#utility.yul\":6680:7126   */\n  iszero\n  tag_151\n  jumpi\n    /* \"#utility.yul\":6725:6763   */\n  tag_152\n    /* \"#utility.yul\":6757:6762   */\n  dup2\n    /* \"#utility.yul\":6725:6763   */\n  tag_51\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":6809:6838   */\n  tag_153\n    /* \"#utility.yul\":6827:6837   */\n  dup5\n    /* \"#utility.yul\":6809:6838   */\n  tag_52\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":6799:6807   */\n  dup2\n    /* \"#utility.yul\":6795:6839   */\n  add\n    /* \"#utility.yul\":6992:6994   */\n  0x20\n    /* \"#utility.yul\":6980:6990   */\n  dup6\n    /* \"#utility.yul\":6977:6995   */\n  lt\n    /* \"#utility.yul\":6974:7023   */\n  iszero\n  tag_154\n  jumpi\n    /* \"#utility.yul\":7013:7021   */\n  dup2\n    /* \"#utility.yul\":6998:7021   */\n  swap1\n  pop\n    /* \"#utility.yul\":6974:7023   */\ntag_154:\n    /* \"#utility.yul\":7036:7116   */\n  tag_155\n    /* \"#utility.yul\":7092:7114   */\n  tag_156\n    /* \"#utility.yul\":7110:7113   */\n  dup6\n    /* \"#utility.yul\":7092:7114   */\n  tag_52\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":7082:7090   */\n  dup4\n    /* \"#utility.yul\":7078:7115   */\n  add\n    /* \"#utility.yul\":7065:7076   */\n  dup3\n    /* \"#utility.yul\":7036:7116   */\n  tag_62\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":6695:7126   */\n  pop\n  pop\n    /* \"#utility.yul\":6680:7126   */\ntag_151:\n    /* \"#utility.yul\":6590:7133   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7139:7256   */\ntag_64:\n    /* \"#utility.yul\":7193:7201   */\n  0x00\n    /* \"#utility.yul\":7243:7248   */\n  dup3\n    /* \"#utility.yul\":7237:7241   */\n  dup3\n    /* \"#utility.yul\":7233:7249   */\n  shr\n    /* \"#utility.yul\":7212:7249   */\n  swap1\n  pop\n    /* \"#utility.yul\":7139:7256   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7262:7431   */\ntag_65:\n    /* \"#utility.yul\":7306:7312   */\n  0x00\n    /* \"#utility.yul\":7339:7390   */\n  tag_159\n    /* \"#utility.yul\":7387:7388   */\n  0x00\n    /* \"#utility.yul\":7383:7389   */\n  not\n    /* \"#utility.yul\":7375:7380   */\n  dup5\n    /* \"#utility.yul\":7372:7373   */\n  0x08\n    /* \"#utility.yul\":7368:7381   */\n  mul\n    /* \"#utility.yul\":7339:7390   */\n  tag_64\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":7335:7391   */\n  not\n    /* \"#utility.yul\":7420:7424   */\n  dup1\n    /* \"#utility.yul\":7414:7418   */\n  dup4\n    /* \"#utility.yul\":7410:7425   */\n  and\n    /* \"#utility.yul\":7400:7425   */\n  swap2\n  pop\n    /* \"#utility.yul\":7313:7431   */\n  pop\n    /* \"#utility.yul\":7262:7431   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7436:7731   */\ntag_66:\n    /* \"#utility.yul\":7512:7516   */\n  0x00\n    /* \"#utility.yul\":7658:7687   */\n  tag_161\n    /* \"#utility.yul\":7683:7686   */\n  dup4\n    /* \"#utility.yul\":7677:7681   */\n  dup4\n    /* \"#utility.yul\":7658:7687   */\n  tag_65\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":7650:7687   */\n  swap2\n  pop\n    /* \"#utility.yul\":7720:7723   */\n  dup3\n    /* \"#utility.yul\":7717:7718   */\n  0x02\n    /* \"#utility.yul\":7713:7724   */\n  mul\n    /* \"#utility.yul\":7707:7711   */\n  dup3\n    /* \"#utility.yul\":7704:7725   */\n  or\n    /* \"#utility.yul\":7696:7725   */\n  swap1\n  pop\n    /* \"#utility.yul\":7436:7731   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7736:9131   */\ntag_10:\n    /* \"#utility.yul\":7853:7890   */\n  tag_163\n    /* \"#utility.yul\":7886:7889   */\n  dup3\n    /* \"#utility.yul\":7853:7890   */\n  tag_48\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":7955:7973   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7947:7953   */\n  dup2\n    /* \"#utility.yul\":7944:7974   */\n  gt\n    /* \"#utility.yul\":7941:7997   */\n  iszero\n  tag_164\n  jumpi\n    /* \"#utility.yul\":7977:7995   */\n  tag_165\n  tag_37\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":7941:7997   */\ntag_164:\n    /* \"#utility.yul\":8021:8059   */\n  tag_166\n    /* \"#utility.yul\":8053:8057   */\n  dup3\n    /* \"#utility.yul\":8047:8058   */\n  sload\n    /* \"#utility.yul\":8021:8059   */\n  tag_50\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":8106:8173   */\n  tag_167\n    /* \"#utility.yul\":8166:8172   */\n  dup3\n    /* \"#utility.yul\":8158:8164   */\n  dup3\n    /* \"#utility.yul\":8152:8156   */\n  dup6\n    /* \"#utility.yul\":8106:8173   */\n  tag_63\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":8200:8201   */\n  0x00\n    /* \"#utility.yul\":8224:8228   */\n  0x20\n    /* \"#utility.yul\":8211:8228   */\n  swap1\n  pop\n    /* \"#utility.yul\":8256:8258   */\n  0x1f\n    /* \"#utility.yul\":8248:8254   */\n  dup4\n    /* \"#utility.yul\":8245:8259   */\n  gt\n    /* \"#utility.yul\":8273:8274   */\n  0x01\n    /* \"#utility.yul\":8268:8886   */\n  dup2\n  eq\n  tag_169\n  jumpi\n    /* \"#utility.yul\":8930:8931   */\n  0x00\n    /* \"#utility.yul\":8947:8953   */\n  dup5\n    /* \"#utility.yul\":8944:9021   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":8996:9005   */\n  dup3\n    /* \"#utility.yul\":8991:8994   */\n  dup8\n    /* \"#utility.yul\":8987:9006   */\n  add\n    /* \"#utility.yul\":8981:9007   */\n  mload\n    /* \"#utility.yul\":8972:9007   */\n  swap1\n  pop\n    /* \"#utility.yul\":8944:9021   */\ntag_170:\n    /* \"#utility.yul\":9047:9114   */\n  tag_171\n    /* \"#utility.yul\":9107:9113   */\n  dup6\n    /* \"#utility.yul\":9100:9105   */\n  dup3\n    /* \"#utility.yul\":9047:9114   */\n  tag_66\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":9041:9045   */\n  dup7\n    /* \"#utility.yul\":9034:9115   */\n  sstore\n    /* \"#utility.yul\":8903:9125   */\n  pop\n    /* \"#utility.yul\":8238:9125   */\n  jump(tag_168)\n    /* \"#utility.yul\":8268:8886   */\ntag_169:\n    /* \"#utility.yul\":8320:8324   */\n  0x1f\n    /* \"#utility.yul\":8316:8325   */\n  not\n    /* \"#utility.yul\":8308:8314   */\n  dup5\n    /* \"#utility.yul\":8304:8326   */\n  and\n    /* \"#utility.yul\":8354:8391   */\n  tag_172\n    /* \"#utility.yul\":8386:8390   */\n  dup7\n    /* \"#utility.yul\":8354:8391   */\n  tag_51\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":8413:8414   */\n  0x00\n    /* \"#utility.yul\":8427:8635   */\ntag_173:\n    /* \"#utility.yul\":8441:8448   */\n  dup3\n    /* \"#utility.yul\":8438:8439   */\n  dup2\n    /* \"#utility.yul\":8435:8449   */\n  lt\n    /* \"#utility.yul\":8427:8635   */\n  iszero\n  tag_175\n  jumpi\n    /* \"#utility.yul\":8520:8529   */\n  dup5\n    /* \"#utility.yul\":8515:8518   */\n  dup10\n    /* \"#utility.yul\":8511:8530   */\n  add\n    /* \"#utility.yul\":8505:8531   */\n  mload\n    /* \"#utility.yul\":8497:8503   */\n  dup3\n    /* \"#utility.yul\":8490:8532   */\n  sstore\n    /* \"#utility.yul\":8571:8572   */\n  0x01\n    /* \"#utility.yul\":8563:8569   */\n  dup3\n    /* \"#utility.yul\":8559:8573   */\n  add\n    /* \"#utility.yul\":8549:8573   */\n  swap2\n  pop\n    /* \"#utility.yul\":8618:8620   */\n  0x20\n    /* \"#utility.yul\":8607:8616   */\n  dup6\n    /* \"#utility.yul\":8603:8621   */\n  add\n    /* \"#utility.yul\":8590:8621   */\n  swap5\n  pop\n    /* \"#utility.yul\":8464:8468   */\n  0x20\n    /* \"#utility.yul\":8461:8462   */\n  dup2\n    /* \"#utility.yul\":8457:8469   */\n  add\n    /* \"#utility.yul\":8452:8469   */\n  swap1\n  pop\n    /* \"#utility.yul\":8427:8635   */\n  jump(tag_173)\ntag_175:\n    /* \"#utility.yul\":8663:8669   */\n  dup7\n    /* \"#utility.yul\":8654:8661   */\n  dup4\n    /* \"#utility.yul\":8651:8670   */\n  lt\n    /* \"#utility.yul\":8648:8827   */\n  iszero\n  tag_176\n  jumpi\n    /* \"#utility.yul\":8721:8730   */\n  dup5\n    /* \"#utility.yul\":8716:8719   */\n  dup10\n    /* \"#utility.yul\":8712:8731   */\n  add\n    /* \"#utility.yul\":8706:8732   */\n  mload\n    /* \"#utility.yul\":8764:8812   */\n  tag_177\n    /* \"#utility.yul\":8806:8810   */\n  0x1f\n    /* \"#utility.yul\":8798:8804   */\n  dup10\n    /* \"#utility.yul\":8794:8811   */\n  and\n    /* \"#utility.yul\":8783:8792   */\n  dup3\n    /* \"#utility.yul\":8764:8812   */\n  tag_65\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":8756:8762   */\n  dup4\n    /* \"#utility.yul\":8749:8813   */\n  sstore\n    /* \"#utility.yul\":8671:8827   */\n  pop\n    /* \"#utility.yul\":8648:8827   */\ntag_176:\n    /* \"#utility.yul\":8873:8874   */\n  0x01\n    /* \"#utility.yul\":8869:8870   */\n  0x02\n    /* \"#utility.yul\":8861:8867   */\n  dup9\n    /* \"#utility.yul\":8857:8871   */\n  mul\n    /* \"#utility.yul\":8853:8875   */\n  add\n    /* \"#utility.yul\":8847:8851   */\n  dup9\n    /* \"#utility.yul\":8840:8876   */\n  sstore\n    /* \"#utility.yul\":8275:8886   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8238:9125   */\ntag_168:\n  pop\n    /* \"#utility.yul\":7828:9131   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7736:9131   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9137:9306   */\ntag_67:\n    /* \"#utility.yul\":9221:9232   */\n  0x00\n    /* \"#utility.yul\":9255:9261   */\n  dup3\n    /* \"#utility.yul\":9250:9253   */\n  dup3\n    /* \"#utility.yul\":9243:9262   */\n  mstore\n    /* \"#utility.yul\":9295:9299   */\n  0x20\n    /* \"#utility.yul\":9290:9293   */\n  dup3\n    /* \"#utility.yul\":9286:9300   */\n  add\n    /* \"#utility.yul\":9271:9300   */\n  swap1\n  pop\n    /* \"#utility.yul\":9137:9306   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9312:9490   */\ntag_68:\n    /* \"#utility.yul\":9452:9482   */\n  0x41646d696e2063616e6e6f74206265207a65726f206164647265737300000000\n    /* \"#utility.yul\":9448:9449   */\n  0x00\n    /* \"#utility.yul\":9440:9446   */\n  dup3\n    /* \"#utility.yul\":9436:9450   */\n  add\n    /* \"#utility.yul\":9429:9483   */\n  mstore\n    /* \"#utility.yul\":9312:9490   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9496:9862   */\ntag_69:\n    /* \"#utility.yul\":9638:9641   */\n  0x00\n    /* \"#utility.yul\":9659:9726   */\n  tag_181\n    /* \"#utility.yul\":9723:9725   */\n  0x1c\n    /* \"#utility.yul\":9718:9721   */\n  dup4\n    /* \"#utility.yul\":9659:9726   */\n  tag_67\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":9652:9726   */\n  swap2\n  pop\n    /* \"#utility.yul\":9735:9828   */\n  tag_182\n    /* \"#utility.yul\":9824:9827   */\n  dup3\n    /* \"#utility.yul\":9735:9828   */\n  tag_68\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":9853:9855   */\n  0x20\n    /* \"#utility.yul\":9848:9851   */\n  dup3\n    /* \"#utility.yul\":9844:9856   */\n  add\n    /* \"#utility.yul\":9837:9856   */\n  swap1\n  pop\n    /* \"#utility.yul\":9496:9862   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9868:10287   */\ntag_17:\n    /* \"#utility.yul\":10034:10038   */\n  0x00\n    /* \"#utility.yul\":10072:10074   */\n  0x20\n    /* \"#utility.yul\":10061:10070   */\n  dup3\n    /* \"#utility.yul\":10057:10075   */\n  add\n    /* \"#utility.yul\":10049:10075   */\n  swap1\n  pop\n    /* \"#utility.yul\":10121:10130   */\n  dup2\n    /* \"#utility.yul\":10115:10119   */\n  dup2\n    /* \"#utility.yul\":10111:10131   */\n  sub\n    /* \"#utility.yul\":10107:10108   */\n  0x00\n    /* \"#utility.yul\":10096:10105   */\n  dup4\n    /* \"#utility.yul\":10092:10109   */\n  add\n    /* \"#utility.yul\":10085:10132   */\n  mstore\n    /* \"#utility.yul\":10149:10280   */\n  tag_184\n    /* \"#utility.yul\":10275:10279   */\n  dup2\n    /* \"#utility.yul\":10149:10280   */\n  tag_69\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":10141:10280   */\n  swap1\n  pop\n    /* \"#utility.yul\":9868:10287   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/token/Token.sol\":291:1233  contract TokenMint is ERC20, AccessControl, ReentrancyGuard, Pausable {... */\ntag_21:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x7fac02d34be0cf003870fc1ca20de764e3d24f4510f938a3d8c85c13150f33d3\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/token/Token.sol\":291:1233  contract TokenMint is ERC20, AccessControl, ReentrancyGuard, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5c975abb\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe63ab1e9\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x5c975abb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x248a9ca3\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_8:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_9:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/token/Token.sol\":1060:1150  function decimals() public pure override returns (uint8) {... */\n    tag_10:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_11:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      stop\n        /* \"contracts/token/Token.sol\":912:1054  function mint(... */\n    tag_12:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      stop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_13:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/Token.sol\":1156:1229  function pause() external onlyRole(PAUSER_ROLE) {... */\n    tag_15:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_16:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_17:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_18:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_19:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/Token.sol\":367:429  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_20:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_21:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_22:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/Token.sol\":435:497  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_23:\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_110\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_111\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_112\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_110:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_116\n      swap1\n      tag_115\n      jump\t// in\n    tag_116:\n      dup1\n      iszero\n      tag_117\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_118\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_117)\n    tag_118:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_119:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_119\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_117:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_133\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_54\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_135\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_136\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_138\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_139\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_138:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/Token.sol\":1060:1150  function decimals() public pure override returns (uint8) {... */\n    tag_62:\n        /* \"contracts/token/Token.sol\":1110:1115  uint8 */\n      0x00\n        /* \"contracts/token/Token.sol\":1134:1143  _decimals */\n      immutable(\"0x7fac02d34be0cf003870fc1ca20de764e3d24f4510f938a3d8c85c13150f33d3\")\n        /* \"contracts/token/Token.sol\":1127:1143  return _decimals */\n      swap1\n      pop\n        /* \"contracts/token/Token.sol\":1060:1150  function decimals() public pure override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_142\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_122\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_143\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_144\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_145\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_144:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/Token.sol\":912:1054  function mint(... */\n    tag_70:\n        /* \"contracts/token/Token.sol\":405:429  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_147\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_136\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_149\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_150\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_149:\n        /* \"contracts/token/Token.sol\":1030:1047  _mint(to, amount) */\n      tag_152\n        /* \"contracts/token/Token.sol\":1036:1038  to */\n      dup4\n        /* \"contracts/token/Token.sol\":1040:1046  amount */\n      dup4\n        /* \"contracts/token/Token.sol\":1030:1035  _mint */\n      tag_153\n        /* \"contracts/token/Token.sol\":1030:1047  _mint(to, amount) */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_154\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_155\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_154:\n        /* \"contracts/token/Token.sol\":912:1054  function mint(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/token/Token.sol\":1156:1229  function pause() external onlyRole(PAUSER_ROLE) {... */\n    tag_80:\n        /* \"contracts/token/Token.sol\":473:497  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_159\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_136\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_159:\n        /* \"contracts/token/Token.sol\":1214:1222  _pause() */\n      tag_161\n        /* \"contracts/token/Token.sol\":1214:1220  _pause */\n      tag_162\n        /* \"contracts/token/Token.sol\":1214:1222  _pause() */\n      jump\t// in\n    tag_161:\n        /* \"contracts/token/Token.sol\":1156:1229  function pause() external onlyRole(PAUSER_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_165\n      swap1\n      tag_115\n      jump\t// in\n    tag_165:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_166\n      swap1\n      tag_115\n      jump\t// in\n    tag_166:\n      dup1\n      iszero\n      tag_167\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_168\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_167)\n    tag_168:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_169:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_169\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_167:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/Token.sol\":367:429  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_96:\n        /* \"contracts/token/Token.sol\":405:429  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/token/Token.sol\":367:429  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_173\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_54\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_175\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_136\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_177\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_145\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_177:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/Token.sol\":435:497  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_107:\n        /* \"contracts/token/Token.sol\":473:497  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"contracts/token/Token.sol\":435:497  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":839:843  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:873  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":855:902  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_186\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_192\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_200\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_201\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_122\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_202\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_200:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_204\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_83\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_205\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_206\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_122\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_203)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_203:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_209\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_83\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_210\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_211\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_122\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_208)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_208:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_214:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_220\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_223\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_224\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x07\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_226\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2291  _msgSender */\n      tag_122\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      mload(0x40)\n      tag_227\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_233\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_234\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_236\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_237\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_239)\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_240\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_242\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_243)\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_244\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_246\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_83\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_247\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap3\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_224:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_251\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_72\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_252\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_253\n      swap1\n      tag_254\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_252:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_256:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_258:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_259:\n        /* \"#utility.yul\":561:584   */\n      tag_295\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_258\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_296\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      0x00\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_296:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_260:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_298\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_259\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_29:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_301\n      tag_256\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":833:952   */\n    tag_300:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_302\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_260\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_261:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_262:\n        /* \"#utility.yul\":1268:1289   */\n      tag_305\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_261\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_32:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_307\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_262\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_263:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_264:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_265:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_266:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_267:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_313\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_263\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":2222:2293   */\n      tag_314\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_264\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_315\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_265\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":2392:2421   */\n      tag_316\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_266\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_36:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_318\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_267\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2879   */\n    tag_268:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2830:2872   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2823:2828   */\n      dup3\n        /* \"#utility.yul\":2819:2873   */\n      and\n        /* \"#utility.yul\":2808:2873   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2885:2981   */\n    tag_269:\n        /* \"#utility.yul\":2922:2929   */\n      0x00\n        /* \"#utility.yul\":2951:2975   */\n      tag_321\n        /* \"#utility.yul\":2969:2974   */\n      dup3\n        /* \"#utility.yul\":2951:2975   */\n      tag_268\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":2940:2975   */\n      swap1\n      pop\n        /* \"#utility.yul\":2885:2981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2987:3109   */\n    tag_270:\n        /* \"#utility.yul\":3060:3084   */\n      tag_323\n        /* \"#utility.yul\":3078:3083   */\n      dup2\n        /* \"#utility.yul\":3060:3084   */\n      tag_269\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":3053:3058   */\n      dup2\n        /* \"#utility.yul\":3050:3085   */\n      eq\n        /* \"#utility.yul\":3040:3103   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":3099:3100   */\n      0x00\n        /* \"#utility.yul\":3096:3097   */\n      0x00\n        /* \"#utility.yul\":3089:3101   */\n      revert\n        /* \"#utility.yul\":3040:3103   */\n    tag_324:\n        /* \"#utility.yul\":2987:3109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3254   */\n    tag_271:\n        /* \"#utility.yul\":3161:3166   */\n      0x00\n        /* \"#utility.yul\":3199:3205   */\n      dup2\n        /* \"#utility.yul\":3186:3206   */\n      calldataload\n        /* \"#utility.yul\":3177:3206   */\n      swap1\n      pop\n        /* \"#utility.yul\":3215:3248   */\n      tag_326\n        /* \"#utility.yul\":3242:3247   */\n      dup2\n        /* \"#utility.yul\":3215:3248   */\n      tag_270\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":3115:3254   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3260:3337   */\n    tag_272:\n        /* \"#utility.yul\":3297:3304   */\n      0x00\n        /* \"#utility.yul\":3326:3331   */\n      dup2\n        /* \"#utility.yul\":3315:3331   */\n      swap1\n      pop\n        /* \"#utility.yul\":3260:3337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3465   */\n    tag_273:\n        /* \"#utility.yul\":3416:3440   */\n      tag_329\n        /* \"#utility.yul\":3434:3439   */\n      dup2\n        /* \"#utility.yul\":3416:3440   */\n      tag_272\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":3409:3414   */\n      dup2\n        /* \"#utility.yul\":3406:3441   */\n      eq\n        /* \"#utility.yul\":3396:3459   */\n      tag_330\n      jumpi\n        /* \"#utility.yul\":3455:3456   */\n      0x00\n        /* \"#utility.yul\":3452:3453   */\n      0x00\n        /* \"#utility.yul\":3445:3457   */\n      revert\n        /* \"#utility.yul\":3396:3459   */\n    tag_330:\n        /* \"#utility.yul\":3343:3465   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3471:3610   */\n    tag_274:\n        /* \"#utility.yul\":3517:3522   */\n      0x00\n        /* \"#utility.yul\":3555:3561   */\n      dup2\n        /* \"#utility.yul\":3542:3562   */\n      calldataload\n        /* \"#utility.yul\":3533:3562   */\n      swap1\n      pop\n        /* \"#utility.yul\":3571:3604   */\n      tag_332\n        /* \"#utility.yul\":3598:3603   */\n      dup2\n        /* \"#utility.yul\":3571:3604   */\n      tag_273\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":3471:3610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3616:4090   */\n    tag_39:\n        /* \"#utility.yul\":3684:3690   */\n      0x00\n        /* \"#utility.yul\":3692:3698   */\n      0x00\n        /* \"#utility.yul\":3741:3743   */\n      0x40\n        /* \"#utility.yul\":3729:3738   */\n      dup4\n        /* \"#utility.yul\":3720:3727   */\n      dup6\n        /* \"#utility.yul\":3716:3739   */\n      sub\n        /* \"#utility.yul\":3712:3744   */\n      slt\n        /* \"#utility.yul\":3709:3828   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":3747:3826   */\n      tag_335\n      tag_256\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":3709:3828   */\n    tag_334:\n        /* \"#utility.yul\":3867:3868   */\n      0x00\n        /* \"#utility.yul\":3892:3945   */\n      tag_336\n        /* \"#utility.yul\":3937:3944   */\n      dup6\n        /* \"#utility.yul\":3928:3934   */\n      dup3\n        /* \"#utility.yul\":3917:3926   */\n      dup7\n        /* \"#utility.yul\":3913:3935   */\n      add\n        /* \"#utility.yul\":3892:3945   */\n      tag_271\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":3882:3945   */\n      swap3\n      pop\n        /* \"#utility.yul\":3838:3955   */\n      pop\n        /* \"#utility.yul\":3994:3996   */\n      0x20\n        /* \"#utility.yul\":4020:4073   */\n      tag_337\n        /* \"#utility.yul\":4065:4072   */\n      dup6\n        /* \"#utility.yul\":4056:4062   */\n      dup3\n        /* \"#utility.yul\":4045:4054   */\n      dup7\n        /* \"#utility.yul\":4041:4063   */\n      add\n        /* \"#utility.yul\":4020:4073   */\n      tag_274\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":4010:4073   */\n      swap2\n      pop\n        /* \"#utility.yul\":3965:4083   */\n      pop\n        /* \"#utility.yul\":3616:4090   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4096:4214   */\n    tag_275:\n        /* \"#utility.yul\":4183:4207   */\n      tag_339\n        /* \"#utility.yul\":4201:4206   */\n      dup2\n        /* \"#utility.yul\":4183:4207   */\n      tag_272\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":4178:4181   */\n      dup3\n        /* \"#utility.yul\":4171:4208   */\n      mstore\n        /* \"#utility.yul\":4096:4214   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4220:4442   */\n    tag_45:\n        /* \"#utility.yul\":4313:4317   */\n      0x00\n        /* \"#utility.yul\":4351:4353   */\n      0x20\n        /* \"#utility.yul\":4340:4349   */\n      dup3\n        /* \"#utility.yul\":4336:4354   */\n      add\n        /* \"#utility.yul\":4328:4354   */\n      swap1\n      pop\n        /* \"#utility.yul\":4364:4435   */\n      tag_341\n        /* \"#utility.yul\":4432:4433   */\n      0x00\n        /* \"#utility.yul\":4421:4430   */\n      dup4\n        /* \"#utility.yul\":4417:4434   */\n      add\n        /* \"#utility.yul\":4408:4414   */\n      dup5\n        /* \"#utility.yul\":4364:4435   */\n      tag_275\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":4220:4442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4448:5067   */\n    tag_48:\n        /* \"#utility.yul\":4525:4531   */\n      0x00\n        /* \"#utility.yul\":4533:4539   */\n      0x00\n        /* \"#utility.yul\":4541:4547   */\n      0x00\n        /* \"#utility.yul\":4590:4592   */\n      0x60\n        /* \"#utility.yul\":4578:4587   */\n      dup5\n        /* \"#utility.yul\":4569:4576   */\n      dup7\n        /* \"#utility.yul\":4565:4588   */\n      sub\n        /* \"#utility.yul\":4561:4593   */\n      slt\n        /* \"#utility.yul\":4558:4677   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":4596:4675   */\n      tag_344\n      tag_256\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":4558:4677   */\n    tag_343:\n        /* \"#utility.yul\":4716:4717   */\n      0x00\n        /* \"#utility.yul\":4741:4794   */\n      tag_345\n        /* \"#utility.yul\":4786:4793   */\n      dup7\n        /* \"#utility.yul\":4777:4783   */\n      dup3\n        /* \"#utility.yul\":4766:4775   */\n      dup8\n        /* \"#utility.yul\":4762:4784   */\n      add\n        /* \"#utility.yul\":4741:4794   */\n      tag_271\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":4731:4794   */\n      swap4\n      pop\n        /* \"#utility.yul\":4687:4804   */\n      pop\n        /* \"#utility.yul\":4843:4845   */\n      0x20\n        /* \"#utility.yul\":4869:4922   */\n      tag_346\n        /* \"#utility.yul\":4914:4921   */\n      dup7\n        /* \"#utility.yul\":4905:4911   */\n      dup3\n        /* \"#utility.yul\":4894:4903   */\n      dup8\n        /* \"#utility.yul\":4890:4912   */\n      add\n        /* \"#utility.yul\":4869:4922   */\n      tag_271\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":4859:4922   */\n      swap3\n      pop\n        /* \"#utility.yul\":4814:4932   */\n      pop\n        /* \"#utility.yul\":4971:4973   */\n      0x40\n        /* \"#utility.yul\":4997:5050   */\n      tag_347\n        /* \"#utility.yul\":5042:5049   */\n      dup7\n        /* \"#utility.yul\":5033:5039   */\n      dup3\n        /* \"#utility.yul\":5022:5031   */\n      dup8\n        /* \"#utility.yul\":5018:5040   */\n      add\n        /* \"#utility.yul\":4997:5050   */\n      tag_274\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":4987:5050   */\n      swap2\n      pop\n        /* \"#utility.yul\":4942:5060   */\n      pop\n        /* \"#utility.yul\":4448:5067   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5073:5150   */\n    tag_276:\n        /* \"#utility.yul\":5110:5117   */\n      0x00\n        /* \"#utility.yul\":5139:5144   */\n      dup2\n        /* \"#utility.yul\":5128:5144   */\n      swap1\n      pop\n        /* \"#utility.yul\":5073:5150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5156:5278   */\n    tag_277:\n        /* \"#utility.yul\":5229:5253   */\n      tag_350\n        /* \"#utility.yul\":5247:5252   */\n      dup2\n        /* \"#utility.yul\":5229:5253   */\n      tag_276\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":5222:5227   */\n      dup2\n        /* \"#utility.yul\":5219:5254   */\n      eq\n        /* \"#utility.yul\":5209:5272   */\n      tag_351\n      jumpi\n        /* \"#utility.yul\":5268:5269   */\n      0x00\n        /* \"#utility.yul\":5265:5266   */\n      0x00\n        /* \"#utility.yul\":5258:5270   */\n      revert\n        /* \"#utility.yul\":5209:5272   */\n    tag_351:\n        /* \"#utility.yul\":5156:5278   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5284:5423   */\n    tag_278:\n        /* \"#utility.yul\":5330:5335   */\n      0x00\n        /* \"#utility.yul\":5368:5374   */\n      dup2\n        /* \"#utility.yul\":5355:5375   */\n      calldataload\n        /* \"#utility.yul\":5346:5375   */\n      swap1\n      pop\n        /* \"#utility.yul\":5384:5417   */\n      tag_353\n        /* \"#utility.yul\":5411:5416   */\n      dup2\n        /* \"#utility.yul\":5384:5417   */\n      tag_277\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":5284:5423   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5429:5758   */\n    tag_53:\n        /* \"#utility.yul\":5488:5494   */\n      0x00\n        /* \"#utility.yul\":5537:5539   */\n      0x20\n        /* \"#utility.yul\":5525:5534   */\n      dup3\n        /* \"#utility.yul\":5516:5523   */\n      dup5\n        /* \"#utility.yul\":5512:5535   */\n      sub\n        /* \"#utility.yul\":5508:5540   */\n      slt\n        /* \"#utility.yul\":5505:5624   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":5543:5622   */\n      tag_356\n      tag_256\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":5505:5624   */\n    tag_355:\n        /* \"#utility.yul\":5663:5664   */\n      0x00\n        /* \"#utility.yul\":5688:5741   */\n      tag_357\n        /* \"#utility.yul\":5733:5740   */\n      dup5\n        /* \"#utility.yul\":5724:5730   */\n      dup3\n        /* \"#utility.yul\":5713:5722   */\n      dup6\n        /* \"#utility.yul\":5709:5731   */\n      add\n        /* \"#utility.yul\":5688:5741   */\n      tag_278\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":5678:5741   */\n      swap2\n      pop\n        /* \"#utility.yul\":5634:5751   */\n      pop\n        /* \"#utility.yul\":5429:5758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5764:5882   */\n    tag_279:\n        /* \"#utility.yul\":5851:5875   */\n      tag_359\n        /* \"#utility.yul\":5869:5874   */\n      dup2\n        /* \"#utility.yul\":5851:5875   */\n      tag_276\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":5846:5849   */\n      dup3\n        /* \"#utility.yul\":5839:5876   */\n      mstore\n        /* \"#utility.yul\":5764:5882   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5888:6110   */\n    tag_56:\n        /* \"#utility.yul\":5981:5985   */\n      0x00\n        /* \"#utility.yul\":6019:6021   */\n      0x20\n        /* \"#utility.yul\":6008:6017   */\n      dup3\n        /* \"#utility.yul\":6004:6022   */\n      add\n        /* \"#utility.yul\":5996:6022   */\n      swap1\n      pop\n        /* \"#utility.yul\":6032:6103   */\n      tag_361\n        /* \"#utility.yul\":6100:6101   */\n      0x00\n        /* \"#utility.yul\":6089:6098   */\n      dup4\n        /* \"#utility.yul\":6085:6102   */\n      add\n        /* \"#utility.yul\":6076:6082   */\n      dup5\n        /* \"#utility.yul\":6032:6103   */\n      tag_279\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":5888:6110   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6116:6590   */\n    tag_59:\n        /* \"#utility.yul\":6184:6190   */\n      0x00\n        /* \"#utility.yul\":6192:6198   */\n      0x00\n        /* \"#utility.yul\":6241:6243   */\n      0x40\n        /* \"#utility.yul\":6229:6238   */\n      dup4\n        /* \"#utility.yul\":6220:6227   */\n      dup6\n        /* \"#utility.yul\":6216:6239   */\n      sub\n        /* \"#utility.yul\":6212:6244   */\n      slt\n        /* \"#utility.yul\":6209:6328   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":6247:6326   */\n      tag_364\n      tag_256\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":6209:6328   */\n    tag_363:\n        /* \"#utility.yul\":6367:6368   */\n      0x00\n        /* \"#utility.yul\":6392:6445   */\n      tag_365\n        /* \"#utility.yul\":6437:6444   */\n      dup6\n        /* \"#utility.yul\":6428:6434   */\n      dup3\n        /* \"#utility.yul\":6417:6426   */\n      dup7\n        /* \"#utility.yul\":6413:6435   */\n      add\n        /* \"#utility.yul\":6392:6445   */\n      tag_278\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":6382:6445   */\n      swap3\n      pop\n        /* \"#utility.yul\":6338:6455   */\n      pop\n        /* \"#utility.yul\":6494:6496   */\n      0x20\n        /* \"#utility.yul\":6520:6573   */\n      tag_366\n        /* \"#utility.yul\":6565:6572   */\n      dup6\n        /* \"#utility.yul\":6556:6562   */\n      dup3\n        /* \"#utility.yul\":6545:6554   */\n      dup7\n        /* \"#utility.yul\":6541:6563   */\n      add\n        /* \"#utility.yul\":6520:6573   */\n      tag_271\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":6510:6573   */\n      swap2\n      pop\n        /* \"#utility.yul\":6465:6583   */\n      pop\n        /* \"#utility.yul\":6116:6590   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6596:6682   */\n    tag_280:\n        /* \"#utility.yul\":6631:6638   */\n      0x00\n        /* \"#utility.yul\":6671:6675   */\n      0xff\n        /* \"#utility.yul\":6664:6669   */\n      dup3\n        /* \"#utility.yul\":6660:6676   */\n      and\n        /* \"#utility.yul\":6649:6676   */\n      swap1\n      pop\n        /* \"#utility.yul\":6596:6682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6688:6800   */\n    tag_281:\n        /* \"#utility.yul\":6771:6793   */\n      tag_369\n        /* \"#utility.yul\":6787:6792   */\n      dup2\n        /* \"#utility.yul\":6771:6793   */\n      tag_280\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":6766:6769   */\n      dup3\n        /* \"#utility.yul\":6759:6794   */\n      mstore\n        /* \"#utility.yul\":6688:6800   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6806:7020   */\n    tag_64:\n        /* \"#utility.yul\":6895:6899   */\n      0x00\n        /* \"#utility.yul\":6933:6935   */\n      0x20\n        /* \"#utility.yul\":6922:6931   */\n      dup3\n        /* \"#utility.yul\":6918:6936   */\n      add\n        /* \"#utility.yul\":6910:6936   */\n      swap1\n      pop\n        /* \"#utility.yul\":6946:7013   */\n      tag_371\n        /* \"#utility.yul\":7010:7011   */\n      0x00\n        /* \"#utility.yul\":6999:7008   */\n      dup4\n        /* \"#utility.yul\":6995:7012   */\n      add\n        /* \"#utility.yul\":6986:6992   */\n      dup5\n        /* \"#utility.yul\":6946:7013   */\n      tag_281\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":6806:7020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7026:7355   */\n    tag_76:\n        /* \"#utility.yul\":7085:7091   */\n      0x00\n        /* \"#utility.yul\":7134:7136   */\n      0x20\n        /* \"#utility.yul\":7122:7131   */\n      dup3\n        /* \"#utility.yul\":7113:7120   */\n      dup5\n        /* \"#utility.yul\":7109:7132   */\n      sub\n        /* \"#utility.yul\":7105:7137   */\n      slt\n        /* \"#utility.yul\":7102:7221   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":7140:7219   */\n      tag_374\n      tag_256\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":7102:7221   */\n    tag_373:\n        /* \"#utility.yul\":7260:7261   */\n      0x00\n        /* \"#utility.yul\":7285:7338   */\n      tag_375\n        /* \"#utility.yul\":7330:7337   */\n      dup5\n        /* \"#utility.yul\":7321:7327   */\n      dup3\n        /* \"#utility.yul\":7310:7319   */\n      dup6\n        /* \"#utility.yul\":7306:7328   */\n      add\n        /* \"#utility.yul\":7285:7338   */\n      tag_271\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":7275:7338   */\n      swap2\n      pop\n        /* \"#utility.yul\":7231:7348   */\n      pop\n        /* \"#utility.yul\":7026:7355   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7361:7835   */\n    tag_103:\n        /* \"#utility.yul\":7429:7435   */\n      0x00\n        /* \"#utility.yul\":7437:7443   */\n      0x00\n        /* \"#utility.yul\":7486:7488   */\n      0x40\n        /* \"#utility.yul\":7474:7483   */\n      dup4\n        /* \"#utility.yul\":7465:7472   */\n      dup6\n        /* \"#utility.yul\":7461:7484   */\n      sub\n        /* \"#utility.yul\":7457:7489   */\n      slt\n        /* \"#utility.yul\":7454:7573   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":7492:7571   */\n      tag_378\n      tag_256\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":7454:7573   */\n    tag_377:\n        /* \"#utility.yul\":7612:7613   */\n      0x00\n        /* \"#utility.yul\":7637:7690   */\n      tag_379\n        /* \"#utility.yul\":7682:7689   */\n      dup6\n        /* \"#utility.yul\":7673:7679   */\n      dup3\n        /* \"#utility.yul\":7662:7671   */\n      dup7\n        /* \"#utility.yul\":7658:7680   */\n      add\n        /* \"#utility.yul\":7637:7690   */\n      tag_271\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":7627:7690   */\n      swap3\n      pop\n        /* \"#utility.yul\":7583:7700   */\n      pop\n        /* \"#utility.yul\":7739:7741   */\n      0x20\n        /* \"#utility.yul\":7765:7818   */\n      tag_380\n        /* \"#utility.yul\":7810:7817   */\n      dup6\n        /* \"#utility.yul\":7801:7807   */\n      dup3\n        /* \"#utility.yul\":7790:7799   */\n      dup7\n        /* \"#utility.yul\":7786:7808   */\n      add\n        /* \"#utility.yul\":7765:7818   */\n      tag_271\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":7755:7818   */\n      swap2\n      pop\n        /* \"#utility.yul\":7710:7828   */\n      pop\n        /* \"#utility.yul\":7361:7835   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7841:8021   */\n    tag_282:\n        /* \"#utility.yul\":7889:7966   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7886:7887   */\n      0x00\n        /* \"#utility.yul\":7879:7967   */\n      mstore\n        /* \"#utility.yul\":7986:7990   */\n      0x22\n        /* \"#utility.yul\":7983:7984   */\n      0x04\n        /* \"#utility.yul\":7976:7991   */\n      mstore\n        /* \"#utility.yul\":8010:8014   */\n      0x24\n        /* \"#utility.yul\":8007:8008   */\n      0x00\n        /* \"#utility.yul\":8000:8015   */\n      revert\n        /* \"#utility.yul\":8027:8347   */\n    tag_115:\n        /* \"#utility.yul\":8071:8077   */\n      0x00\n        /* \"#utility.yul\":8108:8109   */\n      0x02\n        /* \"#utility.yul\":8102:8106   */\n      dup3\n        /* \"#utility.yul\":8098:8110   */\n      div\n        /* \"#utility.yul\":8088:8110   */\n      swap1\n      pop\n        /* \"#utility.yul\":8155:8156   */\n      0x01\n        /* \"#utility.yul\":8149:8153   */\n      dup3\n        /* \"#utility.yul\":8145:8157   */\n      and\n        /* \"#utility.yul\":8176:8194   */\n      dup1\n        /* \"#utility.yul\":8166:8247   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":8232:8236   */\n      0x7f\n        /* \"#utility.yul\":8224:8230   */\n      dup3\n        /* \"#utility.yul\":8220:8237   */\n      and\n        /* \"#utility.yul\":8210:8237   */\n      swap2\n      pop\n        /* \"#utility.yul\":8166:8247   */\n    tag_383:\n        /* \"#utility.yul\":8294:8296   */\n      0x20\n        /* \"#utility.yul\":8286:8292   */\n      dup3\n        /* \"#utility.yul\":8283:8297   */\n      lt\n        /* \"#utility.yul\":8263:8281   */\n      dup2\n        /* \"#utility.yul\":8260:8298   */\n      sub\n        /* \"#utility.yul\":8257:8341   */\n      tag_384\n      jumpi\n        /* \"#utility.yul\":8313:8331   */\n      tag_385\n      tag_282\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":8257:8341   */\n    tag_384:\n        /* \"#utility.yul\":8078:8347   */\n      pop\n        /* \"#utility.yul\":8027:8347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8353:8471   */\n    tag_283:\n        /* \"#utility.yul\":8440:8464   */\n      tag_387\n        /* \"#utility.yul\":8458:8463   */\n      dup2\n        /* \"#utility.yul\":8440:8464   */\n      tag_269\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":8435:8438   */\n      dup3\n        /* \"#utility.yul\":8428:8465   */\n      mstore\n        /* \"#utility.yul\":8353:8471   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8477:8919   */\n    tag_189:\n        /* \"#utility.yul\":8626:8630   */\n      0x00\n        /* \"#utility.yul\":8664:8666   */\n      0x60\n        /* \"#utility.yul\":8653:8662   */\n      dup3\n        /* \"#utility.yul\":8649:8667   */\n      add\n        /* \"#utility.yul\":8641:8667   */\n      swap1\n      pop\n        /* \"#utility.yul\":8677:8748   */\n      tag_389\n        /* \"#utility.yul\":8745:8746   */\n      0x00\n        /* \"#utility.yul\":8734:8743   */\n      dup4\n        /* \"#utility.yul\":8730:8747   */\n      add\n        /* \"#utility.yul\":8721:8727   */\n      dup7\n        /* \"#utility.yul\":8677:8748   */\n      tag_283\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":8758:8830   */\n      tag_390\n        /* \"#utility.yul\":8826:8828   */\n      0x20\n        /* \"#utility.yul\":8815:8824   */\n      dup4\n        /* \"#utility.yul\":8811:8829   */\n      add\n        /* \"#utility.yul\":8802:8808   */\n      dup6\n        /* \"#utility.yul\":8758:8830   */\n      tag_275\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":8840:8912   */\n      tag_391\n        /* \"#utility.yul\":8908:8910   */\n      0x40\n        /* \"#utility.yul\":8897:8906   */\n      dup4\n        /* \"#utility.yul\":8893:8911   */\n      add\n        /* \"#utility.yul\":8884:8890   */\n      dup5\n        /* \"#utility.yul\":8840:8912   */\n      tag_275\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":8477:8919   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8925:9147   */\n    tag_194:\n        /* \"#utility.yul\":9018:9022   */\n      0x00\n        /* \"#utility.yul\":9056:9058   */\n      0x20\n        /* \"#utility.yul\":9045:9054   */\n      dup3\n        /* \"#utility.yul\":9041:9059   */\n      add\n        /* \"#utility.yul\":9033:9059   */\n      swap1\n      pop\n        /* \"#utility.yul\":9069:9140   */\n      tag_393\n        /* \"#utility.yul\":9137:9138   */\n      0x00\n        /* \"#utility.yul\":9126:9135   */\n      dup4\n        /* \"#utility.yul\":9122:9139   */\n      add\n        /* \"#utility.yul\":9113:9119   */\n      dup5\n        /* \"#utility.yul\":9069:9140   */\n      tag_283\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":8925:9147   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9153:9334   */\n    tag_284:\n        /* \"#utility.yul\":9293:9326   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":9289:9290   */\n      0x00\n        /* \"#utility.yul\":9281:9287   */\n      dup3\n        /* \"#utility.yul\":9277:9291   */\n      add\n        /* \"#utility.yul\":9270:9327   */\n      mstore\n        /* \"#utility.yul\":9153:9334   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9340:9706   */\n    tag_285:\n        /* \"#utility.yul\":9482:9485   */\n      0x00\n        /* \"#utility.yul\":9503:9570   */\n      tag_396\n        /* \"#utility.yul\":9567:9569   */\n      0x1f\n        /* \"#utility.yul\":9562:9565   */\n      dup4\n        /* \"#utility.yul\":9503:9570   */\n      tag_264\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":9496:9570   */\n      swap2\n      pop\n        /* \"#utility.yul\":9579:9672   */\n      tag_397\n        /* \"#utility.yul\":9668:9671   */\n      dup3\n        /* \"#utility.yul\":9579:9672   */\n      tag_284\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":9697:9699   */\n      0x20\n        /* \"#utility.yul\":9692:9695   */\n      dup3\n        /* \"#utility.yul\":9688:9700   */\n      add\n        /* \"#utility.yul\":9681:9700   */\n      swap1\n      pop\n        /* \"#utility.yul\":9340:9706   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9712:10131   */\n    tag_216:\n        /* \"#utility.yul\":9878:9882   */\n      0x00\n        /* \"#utility.yul\":9916:9918   */\n      0x20\n        /* \"#utility.yul\":9905:9914   */\n      dup3\n        /* \"#utility.yul\":9901:9919   */\n      add\n        /* \"#utility.yul\":9893:9919   */\n      swap1\n      pop\n        /* \"#utility.yul\":9965:9974   */\n      dup2\n        /* \"#utility.yul\":9959:9963   */\n      dup2\n        /* \"#utility.yul\":9955:9975   */\n      sub\n        /* \"#utility.yul\":9951:9952   */\n      0x00\n        /* \"#utility.yul\":9940:9949   */\n      dup4\n        /* \"#utility.yul\":9936:9953   */\n      add\n        /* \"#utility.yul\":9929:9976   */\n      mstore\n        /* \"#utility.yul\":9993:10124   */\n      tag_399\n        /* \"#utility.yul\":10119:10123   */\n      dup2\n        /* \"#utility.yul\":9993:10124   */\n      tag_285\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":9985:10124   */\n      swap1\n      pop\n        /* \"#utility.yul\":9712:10131   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10137:10317   */\n    tag_286:\n        /* \"#utility.yul\":10185:10262   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10182:10183   */\n      0x00\n        /* \"#utility.yul\":10175:10263   */\n      mstore\n        /* \"#utility.yul\":10282:10286   */\n      0x11\n        /* \"#utility.yul\":10279:10280   */\n      0x04\n        /* \"#utility.yul\":10272:10287   */\n      mstore\n        /* \"#utility.yul\":10306:10310   */\n      0x24\n        /* \"#utility.yul\":10303:10304   */\n      0x00\n        /* \"#utility.yul\":10296:10311   */\n      revert\n        /* \"#utility.yul\":10323:10514   */\n    tag_238:\n        /* \"#utility.yul\":10363:10366   */\n      0x00\n        /* \"#utility.yul\":10382:10402   */\n      tag_402\n        /* \"#utility.yul\":10400:10401   */\n      dup3\n        /* \"#utility.yul\":10382:10402   */\n      tag_272\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":10377:10402   */\n      swap2\n      pop\n        /* \"#utility.yul\":10416:10436   */\n      tag_403\n        /* \"#utility.yul\":10434:10435   */\n      dup4\n        /* \"#utility.yul\":10416:10436   */\n      tag_272\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":10411:10436   */\n      swap3\n      pop\n        /* \"#utility.yul\":10459:10460   */\n      dup3\n        /* \"#utility.yul\":10456:10457   */\n      dup3\n        /* \"#utility.yul\":10452:10461   */\n      add\n        /* \"#utility.yul\":10445:10461   */\n      swap1\n      pop\n        /* \"#utility.yul\":10480:10483   */\n      dup1\n        /* \"#utility.yul\":10477:10478   */\n      dup3\n        /* \"#utility.yul\":10474:10484   */\n      gt\n        /* \"#utility.yul\":10471:10507   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":10487:10505   */\n      tag_405\n      tag_286\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":10471:10507   */\n    tag_404:\n        /* \"#utility.yul\":10323:10514   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10520:10852   */\n    tag_249:\n        /* \"#utility.yul\":10641:10645   */\n      0x00\n        /* \"#utility.yul\":10679:10681   */\n      0x40\n        /* \"#utility.yul\":10668:10677   */\n      dup3\n        /* \"#utility.yul\":10664:10682   */\n      add\n        /* \"#utility.yul\":10656:10682   */\n      swap1\n      pop\n        /* \"#utility.yul\":10692:10763   */\n      tag_407\n        /* \"#utility.yul\":10760:10761   */\n      0x00\n        /* \"#utility.yul\":10749:10758   */\n      dup4\n        /* \"#utility.yul\":10745:10762   */\n      add\n        /* \"#utility.yul\":10736:10742   */\n      dup6\n        /* \"#utility.yul\":10692:10763   */\n      tag_283\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":10773:10845   */\n      tag_408\n        /* \"#utility.yul\":10841:10843   */\n      0x20\n        /* \"#utility.yul\":10830:10839   */\n      dup4\n        /* \"#utility.yul\":10826:10844   */\n      add\n        /* \"#utility.yul\":10817:10823   */\n      dup5\n        /* \"#utility.yul\":10773:10845   */\n      tag_279\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":10520:10852   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10858:11024   */\n    tag_287:\n        /* \"#utility.yul\":10998:11016   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":10994:10995   */\n      0x00\n        /* \"#utility.yul\":10986:10992   */\n      dup3\n        /* \"#utility.yul\":10982:10996   */\n      add\n        /* \"#utility.yul\":10975:11017   */\n      mstore\n        /* \"#utility.yul\":10858:11024   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11030:11396   */\n    tag_288:\n        /* \"#utility.yul\":11172:11175   */\n      0x00\n        /* \"#utility.yul\":11193:11260   */\n      tag_411\n        /* \"#utility.yul\":11257:11259   */\n      0x10\n        /* \"#utility.yul\":11252:11255   */\n      dup4\n        /* \"#utility.yul\":11193:11260   */\n      tag_264\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":11186:11260   */\n      swap2\n      pop\n        /* \"#utility.yul\":11269:11362   */\n      tag_412\n        /* \"#utility.yul\":11358:11361   */\n      dup3\n        /* \"#utility.yul\":11269:11362   */\n      tag_287\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":11387:11389   */\n      0x20\n        /* \"#utility.yul\":11382:11385   */\n      dup3\n        /* \"#utility.yul\":11378:11390   */\n      add\n        /* \"#utility.yul\":11371:11390   */\n      swap1\n      pop\n        /* \"#utility.yul\":11030:11396   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11402:11821   */\n    tag_254:\n        /* \"#utility.yul\":11568:11572   */\n      0x00\n        /* \"#utility.yul\":11606:11608   */\n      0x20\n        /* \"#utility.yul\":11595:11604   */\n      dup3\n        /* \"#utility.yul\":11591:11609   */\n      add\n        /* \"#utility.yul\":11583:11609   */\n      swap1\n      pop\n        /* \"#utility.yul\":11655:11664   */\n      dup2\n        /* \"#utility.yul\":11649:11653   */\n      dup2\n        /* \"#utility.yul\":11645:11665   */\n      sub\n        /* \"#utility.yul\":11641:11642   */\n      0x00\n        /* \"#utility.yul\":11630:11639   */\n      dup4\n        /* \"#utility.yul\":11626:11643   */\n      add\n        /* \"#utility.yul\":11619:11666   */\n      mstore\n        /* \"#utility.yul\":11683:11814   */\n      tag_414\n        /* \"#utility.yul\":11809:11813   */\n      dup2\n        /* \"#utility.yul\":11683:11814   */\n      tag_288\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":11675:11814   */\n      swap1\n      pop\n        /* \"#utility.yul\":11402:11821   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d1ca6985cec12698f635d4d371d59afa31a28d77cc1090f7cdec8497581f94e464736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1440": {
									"entryPoint": null,
									"id": 1440,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_542": {
									"entryPoint": null,
									"id": 542,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_642": {
									"entryPoint": null,
									"id": 642,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_740": {
									"entryPoint": null,
									"id": 740,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 318,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1319": {
									"entryPoint": 664,
									"id": 1319,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": 564,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 894,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory": {
									"entryPoint": 1094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_stringliteral_10657174ead1fc3dc6d1d3f881b335facfc9095796fd15a08f7c17697cf4bb24_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_10657174ead1fc3dc6d1d3f881b335facfc9095796fd15a08f7c17697cf4bb24__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 671,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1621,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 880,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1240,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 712,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 688,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 692,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 684,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 680,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_10657174ead1fc3dc6d1d3f881b335facfc9095796fd15a08f7c17697cf4bb24": {
									"entryPoint": 1981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1378,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1519,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1052,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1556,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10290:12",
										"nodeType": "YulBlock",
										"src": "0:10290:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "423:28:12",
													"nodeType": "YulBlock",
													"src": "423:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:12",
																		"nodeType": "YulLiteral",
																		"src": "440:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:12",
																		"nodeType": "YulLiteral",
																		"src": "443:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:12"
																},
																"nativeSrc": "433:12:12",
																"nodeType": "YulFunctionCall",
																"src": "433:12:12"
															},
															"nativeSrc": "433:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:12"
											},
											{
												"body": {
													"nativeSrc": "546:28:12",
													"nodeType": "YulBlock",
													"src": "546:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:12",
																		"nodeType": "YulLiteral",
																		"src": "563:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:12",
																		"nodeType": "YulLiteral",
																		"src": "566:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:12"
																},
																"nativeSrc": "556:12:12",
																"nodeType": "YulFunctionCall",
																"src": "556:12:12"
															},
															"nativeSrc": "556:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:12"
											},
											{
												"body": {
													"nativeSrc": "628:54:12",
													"nodeType": "YulBlock",
													"src": "628:54:12",
													"statements": [
														{
															"nativeSrc": "638:38:12",
															"nodeType": "YulAssignment",
															"src": "638:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:12",
																				"nodeType": "YulLiteral",
																				"src": "663:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:12"
																		},
																		"nativeSrc": "652:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:12",
																				"nodeType": "YulLiteral",
																				"src": "672:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:12"
																		},
																		"nativeSrc": "668:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:12"
																},
																"nativeSrc": "648:28:12",
																"nodeType": "YulFunctionCall",
																"src": "648:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:12",
														"nodeType": "YulTypedName",
														"src": "611:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:12",
														"nodeType": "YulTypedName",
														"src": "621:6:12",
														"type": ""
													}
												],
												"src": "580:102:12"
											},
											{
												"body": {
													"nativeSrc": "716:152:12",
													"nodeType": "YulBlock",
													"src": "716:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:12",
																		"nodeType": "YulLiteral",
																		"src": "733:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:12",
																		"nodeType": "YulLiteral",
																		"src": "736:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:12"
																},
																"nativeSrc": "726:88:12",
																"nodeType": "YulFunctionCall",
																"src": "726:88:12"
															},
															"nativeSrc": "726:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:12",
																		"nodeType": "YulLiteral",
																		"src": "830:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:12",
																		"nodeType": "YulLiteral",
																		"src": "833:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:12"
																},
																"nativeSrc": "823:15:12",
																"nodeType": "YulFunctionCall",
																"src": "823:15:12"
															},
															"nativeSrc": "823:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:12",
																		"nodeType": "YulLiteral",
																		"src": "854:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:12",
																		"nodeType": "YulLiteral",
																		"src": "857:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:12"
																},
																"nativeSrc": "847:15:12",
																"nodeType": "YulFunctionCall",
																"src": "847:15:12"
															},
															"nativeSrc": "847:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:12"
											},
											{
												"body": {
													"nativeSrc": "917:238:12",
													"nodeType": "YulBlock",
													"src": "917:238:12",
													"statements": [
														{
															"nativeSrc": "927:58:12",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:12"
																		},
																		"nativeSrc": "957:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:12"
																},
																"nativeSrc": "945:40:12",
																"nodeType": "YulFunctionCall",
																"src": "945:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:12",
																	"nodeType": "YulTypedName",
																	"src": "931:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:12",
																"nodeType": "YulBlock",
																"src": "1096:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:12"
																			},
																			"nativeSrc": "1098:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:12"
																		},
																		"nativeSrc": "1098:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:12",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:12"
																		},
																		"nativeSrc": "1036:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:12"
																		},
																		"nativeSrc": "1072:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:12"
																},
																"nativeSrc": "1033:62:12",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:12"
															},
															"nativeSrc": "1030:88:12",
															"nodeType": "YulIf",
															"src": "1030:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:12"
																},
																"nativeSrc": "1127:22:12",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:12"
															},
															"nativeSrc": "1127:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:12",
														"nodeType": "YulTypedName",
														"src": "903:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:12",
														"nodeType": "YulTypedName",
														"src": "911:4:12",
														"type": ""
													}
												],
												"src": "874:281:12"
											},
											{
												"body": {
													"nativeSrc": "1202:88:12",
													"nodeType": "YulBlock",
													"src": "1202:88:12",
													"statements": [
														{
															"nativeSrc": "1212:30:12",
															"nodeType": "YulAssignment",
															"src": "1212:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:12"
																},
																"nativeSrc": "1222:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:12"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:12",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:12"
																},
																"nativeSrc": "1251:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:12"
															},
															"nativeSrc": "1251:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:12",
														"nodeType": "YulTypedName",
														"src": "1186:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:12",
														"nodeType": "YulTypedName",
														"src": "1195:6:12",
														"type": ""
													}
												],
												"src": "1161:129:12"
											},
											{
												"body": {
													"nativeSrc": "1363:241:12",
													"nodeType": "YulBlock",
													"src": "1363:241:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:12",
																"nodeType": "YulBlock",
																"src": "1468:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:12"
																			},
																			"nativeSrc": "1470:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:12"
																		},
																		"nativeSrc": "1470:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:12",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:12"
																},
																"nativeSrc": "1437:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:12"
															},
															"nativeSrc": "1434:56:12",
															"nodeType": "YulIf",
															"src": "1434:56:12"
														},
														{
															"nativeSrc": "1500:37:12",
															"nodeType": "YulAssignment",
															"src": "1500:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:12"
																},
																"nativeSrc": "1508:29:12",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:12"
																}
															]
														},
														{
															"nativeSrc": "1574:23:12",
															"nodeType": "YulAssignment",
															"src": "1574:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:12"
																},
																"nativeSrc": "1582:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:12",
														"nodeType": "YulTypedName",
														"src": "1347:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:12",
														"nodeType": "YulTypedName",
														"src": "1358:4:12",
														"type": ""
													}
												],
												"src": "1296:308:12"
											},
											{
												"body": {
													"nativeSrc": "1672:77:12",
													"nodeType": "YulBlock",
													"src": "1672:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:12"
																},
																"nativeSrc": "1683:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:12"
															},
															"nativeSrc": "1683:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:12"
																		},
																		"nativeSrc": "1722:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:12"
																},
																"nativeSrc": "1715:27:12",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:12"
															},
															"nativeSrc": "1715:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:12",
														"nodeType": "YulTypedName",
														"src": "1654:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:12",
														"nodeType": "YulTypedName",
														"src": "1659:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:12",
														"nodeType": "YulTypedName",
														"src": "1664:6:12",
														"type": ""
													}
												],
												"src": "1610:139:12"
											},
											{
												"body": {
													"nativeSrc": "1850:339:12",
													"nodeType": "YulBlock",
													"src": "1850:339:12",
													"statements": [
														{
															"nativeSrc": "1860:75:12",
															"nodeType": "YulAssignment",
															"src": "1860:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:12"
																		},
																		"nativeSrc": "1885:49:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:12"
																},
																"nativeSrc": "1869:66:12",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:12"
																},
																"nativeSrc": "1944:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:12"
															},
															"nativeSrc": "1944:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:12"
														},
														{
															"nativeSrc": "1974:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:12"
																},
																"nativeSrc": "1985:16:12",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:12",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:12",
																"nodeType": "YulBlock",
																"src": "2039:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:12"
																			},
																			"nativeSrc": "2041:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:12"
																		},
																		"nativeSrc": "2041:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:12"
																		},
																		"nativeSrc": "2016:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:12"
																},
																"nativeSrc": "2013:25:12",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:12"
															},
															"nativeSrc": "2010:112:12",
															"nodeType": "YulIf",
															"src": "2010:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:12"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:12"
																},
																"nativeSrc": "2131:52:12",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:12"
															},
															"nativeSrc": "2131:52:12",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:12",
														"nodeType": "YulTypedName",
														"src": "1823:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:12",
														"nodeType": "YulTypedName",
														"src": "1828:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:12",
														"nodeType": "YulTypedName",
														"src": "1836:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:12",
														"nodeType": "YulTypedName",
														"src": "1844:5:12",
														"type": ""
													}
												],
												"src": "1755:434:12"
											},
											{
												"body": {
													"nativeSrc": "2282:282:12",
													"nodeType": "YulBlock",
													"src": "2282:282:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:12",
																"nodeType": "YulBlock",
																"src": "2331:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:12"
																			},
																			"nativeSrc": "2333:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:12"
																		},
																		"nativeSrc": "2333:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:12",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:12"
																				},
																				"nativeSrc": "2306:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:12"
																		},
																		"nativeSrc": "2302:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:12"
																},
																"nativeSrc": "2295:35:12",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:12"
															},
															"nativeSrc": "2292:122:12",
															"nodeType": "YulIf",
															"src": "2292:122:12"
														},
														{
															"nativeSrc": "2423:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:12"
																},
																"nativeSrc": "2437:13:12",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:12",
															"nodeType": "YulAssignment",
															"src": "2459:99:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:12"
																		},
																		"nativeSrc": "2527:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:12"
																},
																"nativeSrc": "2468:90:12",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:12",
														"nodeType": "YulTypedName",
														"src": "2260:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:12",
														"nodeType": "YulTypedName",
														"src": "2268:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:12",
														"nodeType": "YulTypedName",
														"src": "2276:5:12",
														"type": ""
													}
												],
												"src": "2209:355:12"
											},
											{
												"body": {
													"nativeSrc": "2615:81:12",
													"nodeType": "YulBlock",
													"src": "2615:81:12",
													"statements": [
														{
															"nativeSrc": "2625:65:12",
															"nodeType": "YulAssignment",
															"src": "2625:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2640:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2640:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2647:42:12",
																		"nodeType": "YulLiteral",
																		"src": "2647:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2636:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2636:3:12"
																},
																"nativeSrc": "2636:54:12",
																"nodeType": "YulFunctionCall",
																"src": "2636:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2625:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2570:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2597:5:12",
														"nodeType": "YulTypedName",
														"src": "2597:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2607:7:12",
														"nodeType": "YulTypedName",
														"src": "2607:7:12",
														"type": ""
													}
												],
												"src": "2570:126:12"
											},
											{
												"body": {
													"nativeSrc": "2747:51:12",
													"nodeType": "YulBlock",
													"src": "2747:51:12",
													"statements": [
														{
															"nativeSrc": "2757:35:12",
															"nodeType": "YulAssignment",
															"src": "2757:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2786:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2786:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2768:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "2768:17:12"
																},
																"nativeSrc": "2768:24:12",
																"nodeType": "YulFunctionCall",
																"src": "2768:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2757:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2757:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2702:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2729:5:12",
														"nodeType": "YulTypedName",
														"src": "2729:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2739:7:12",
														"nodeType": "YulTypedName",
														"src": "2739:7:12",
														"type": ""
													}
												],
												"src": "2702:96:12"
											},
											{
												"body": {
													"nativeSrc": "2847:79:12",
													"nodeType": "YulBlock",
													"src": "2847:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2904:16:12",
																"nodeType": "YulBlock",
																"src": "2904:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2913:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2913:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2916:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2916:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2906:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2906:6:12"
																			},
																			"nativeSrc": "2906:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2906:12:12"
																		},
																		"nativeSrc": "2906:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2906:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2870:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2870:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2895:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2895:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2877:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "2877:17:12"
																				},
																				"nativeSrc": "2877:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2877:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2867:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2867:2:12"
																		},
																		"nativeSrc": "2867:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2867:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2860:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2860:6:12"
																},
																"nativeSrc": "2860:43:12",
																"nodeType": "YulFunctionCall",
																"src": "2860:43:12"
															},
															"nativeSrc": "2857:63:12",
															"nodeType": "YulIf",
															"src": "2857:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2804:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2840:5:12",
														"nodeType": "YulTypedName",
														"src": "2840:5:12",
														"type": ""
													}
												],
												"src": "2804:122:12"
											},
											{
												"body": {
													"nativeSrc": "2995:80:12",
													"nodeType": "YulBlock",
													"src": "2995:80:12",
													"statements": [
														{
															"nativeSrc": "3005:22:12",
															"nodeType": "YulAssignment",
															"src": "3005:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3020:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3020:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3014:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3014:5:12"
																},
																"nativeSrc": "3014:13:12",
																"nodeType": "YulFunctionCall",
																"src": "3014:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3005:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3005:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3063:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3063:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3036:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "3036:26:12"
																},
																"nativeSrc": "3036:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3036:33:12"
															},
															"nativeSrc": "3036:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3036:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "2932:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2973:6:12",
														"nodeType": "YulTypedName",
														"src": "2973:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2981:3:12",
														"nodeType": "YulTypedName",
														"src": "2981:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2989:5:12",
														"nodeType": "YulTypedName",
														"src": "2989:5:12",
														"type": ""
													}
												],
												"src": "2932:143:12"
											},
											{
												"body": {
													"nativeSrc": "3212:878:12",
													"nodeType": "YulBlock",
													"src": "3212:878:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3258:83:12",
																"nodeType": "YulBlock",
																"src": "3258:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3260:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3260:77:12"
																			},
																			"nativeSrc": "3260:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3260:79:12"
																		},
																		"nativeSrc": "3260:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3260:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3233:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3233:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3242:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3242:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3229:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3229:3:12"
																		},
																		"nativeSrc": "3229:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3229:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3254:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3254:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3225:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3225:3:12"
																},
																"nativeSrc": "3225:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3225:32:12"
															},
															"nativeSrc": "3222:119:12",
															"nodeType": "YulIf",
															"src": "3222:119:12"
														},
														{
															"nativeSrc": "3351:291:12",
															"nodeType": "YulBlock",
															"src": "3351:291:12",
															"statements": [
																{
																	"nativeSrc": "3366:38:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3366:38:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3390:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3390:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3401:1:12",
																						"nodeType": "YulLiteral",
																						"src": "3401:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3386:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3386:3:12"
																				},
																				"nativeSrc": "3386:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3386:17:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3380:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "3380:5:12"
																		},
																		"nativeSrc": "3380:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3380:24:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3370:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3370:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3451:83:12",
																		"nodeType": "YulBlock",
																		"src": "3451:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3453:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "3453:77:12"
																					},
																					"nativeSrc": "3453:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3453:79:12"
																				},
																				"nativeSrc": "3453:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "3453:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3423:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3423:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3431:18:12",
																				"nodeType": "YulLiteral",
																				"src": "3431:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3420:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3420:2:12"
																		},
																		"nativeSrc": "3420:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3420:30:12"
																	},
																	"nativeSrc": "3417:117:12",
																	"nodeType": "YulIf",
																	"src": "3417:117:12"
																},
																{
																	"nativeSrc": "3548:84:12",
																	"nodeType": "YulAssignment",
																	"src": "3548:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3604:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3604:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3615:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3615:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3600:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3600:3:12"
																				},
																				"nativeSrc": "3600:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3600:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3624:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3624:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3558:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "3558:41:12"
																		},
																		"nativeSrc": "3558:74:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3558:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3548:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3548:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3652:292:12",
															"nodeType": "YulBlock",
															"src": "3652:292:12",
															"statements": [
																{
																	"nativeSrc": "3667:39:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3667:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3691:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3691:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3702:2:12",
																						"nodeType": "YulLiteral",
																						"src": "3702:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3687:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3687:3:12"
																				},
																				"nativeSrc": "3687:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3687:18:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3681:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "3681:5:12"
																		},
																		"nativeSrc": "3681:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3681:25:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3671:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3671:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3753:83:12",
																		"nodeType": "YulBlock",
																		"src": "3753:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3755:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "3755:77:12"
																					},
																					"nativeSrc": "3755:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3755:79:12"
																				},
																				"nativeSrc": "3755:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "3755:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3725:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3725:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3733:18:12",
																				"nodeType": "YulLiteral",
																				"src": "3733:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3722:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3722:2:12"
																		},
																		"nativeSrc": "3722:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3722:30:12"
																	},
																	"nativeSrc": "3719:117:12",
																	"nodeType": "YulIf",
																	"src": "3719:117:12"
																},
																{
																	"nativeSrc": "3850:84:12",
																	"nodeType": "YulAssignment",
																	"src": "3850:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3906:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3906:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3917:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3917:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3902:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3902:3:12"
																				},
																				"nativeSrc": "3902:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3902:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3926:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3926:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3860:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "3860:41:12"
																		},
																		"nativeSrc": "3860:74:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3860:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3850:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3850:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3954:129:12",
															"nodeType": "YulBlock",
															"src": "3954:129:12",
															"statements": [
																{
																	"nativeSrc": "3969:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3969:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3983:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3973:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3973:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3999:74:12",
																	"nodeType": "YulAssignment",
																	"src": "3999:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4045:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4045:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4056:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4056:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4041:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4041:3:12"
																				},
																				"nativeSrc": "4041:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4041:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4009:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "4009:31:12"
																		},
																		"nativeSrc": "4009:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4009:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3999:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3999:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory",
												"nativeSrc": "3081:1009:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3166:9:12",
														"nodeType": "YulTypedName",
														"src": "3166:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3177:7:12",
														"nodeType": "YulTypedName",
														"src": "3177:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3189:6:12",
														"nodeType": "YulTypedName",
														"src": "3189:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3197:6:12",
														"nodeType": "YulTypedName",
														"src": "3197:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3205:6:12",
														"nodeType": "YulTypedName",
														"src": "3205:6:12",
														"type": ""
													}
												],
												"src": "3081:1009:12"
											},
											{
												"body": {
													"nativeSrc": "4155:40:12",
													"nodeType": "YulBlock",
													"src": "4155:40:12",
													"statements": [
														{
															"nativeSrc": "4166:22:12",
															"nodeType": "YulAssignment",
															"src": "4166:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4182:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4182:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4176:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4176:5:12"
																},
																"nativeSrc": "4176:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4176:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4166:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4166:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4096:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4138:5:12",
														"nodeType": "YulTypedName",
														"src": "4138:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4148:6:12",
														"nodeType": "YulTypedName",
														"src": "4148:6:12",
														"type": ""
													}
												],
												"src": "4096:99:12"
											},
											{
												"body": {
													"nativeSrc": "4229:152:12",
													"nodeType": "YulBlock",
													"src": "4229:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4246:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4246:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4249:77:12",
																		"nodeType": "YulLiteral",
																		"src": "4249:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4239:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4239:6:12"
																},
																"nativeSrc": "4239:88:12",
																"nodeType": "YulFunctionCall",
																"src": "4239:88:12"
															},
															"nativeSrc": "4239:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "4239:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4343:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4343:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4346:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4346:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4336:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4336:6:12"
																},
																"nativeSrc": "4336:15:12",
																"nodeType": "YulFunctionCall",
																"src": "4336:15:12"
															},
															"nativeSrc": "4336:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "4336:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4367:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4367:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4370:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4370:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4360:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4360:6:12"
																},
																"nativeSrc": "4360:15:12",
																"nodeType": "YulFunctionCall",
																"src": "4360:15:12"
															},
															"nativeSrc": "4360:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "4360:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4201:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "4201:180:12"
											},
											{
												"body": {
													"nativeSrc": "4438:269:12",
													"nodeType": "YulBlock",
													"src": "4438:269:12",
													"statements": [
														{
															"nativeSrc": "4448:22:12",
															"nodeType": "YulAssignment",
															"src": "4448:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4462:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4462:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4468:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4468:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4458:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4458:3:12"
																},
																"nativeSrc": "4458:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4458:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4448:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:12"
																}
															]
														},
														{
															"nativeSrc": "4479:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4479:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4509:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4509:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4515:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4515:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4505:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4505:3:12"
																},
																"nativeSrc": "4505:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4505:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4483:18:12",
																	"nodeType": "YulTypedName",
																	"src": "4483:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4556:51:12",
																"nodeType": "YulBlock",
																"src": "4556:51:12",
																"statements": [
																	{
																		"nativeSrc": "4570:27:12",
																		"nodeType": "YulAssignment",
																		"src": "4570:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4584:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "4584:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4592:4:12",
																					"nodeType": "YulLiteral",
																					"src": "4592:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4580:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "4580:3:12"
																			},
																			"nativeSrc": "4580:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4580:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4570:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4570:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4536:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "4536:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4529:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4529:6:12"
																},
																"nativeSrc": "4529:26:12",
																"nodeType": "YulFunctionCall",
																"src": "4529:26:12"
															},
															"nativeSrc": "4526:81:12",
															"nodeType": "YulIf",
															"src": "4526:81:12"
														},
														{
															"body": {
																"nativeSrc": "4659:42:12",
																"nodeType": "YulBlock",
																"src": "4659:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4673:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4673:16:12"
																			},
																			"nativeSrc": "4673:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4673:18:12"
																		},
																		"nativeSrc": "4673:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4673:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4623:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "4623:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4646:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4646:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4654:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4654:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4643:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4643:2:12"
																		},
																		"nativeSrc": "4643:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4643:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4620:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4620:2:12"
																},
																"nativeSrc": "4620:38:12",
																"nodeType": "YulFunctionCall",
																"src": "4620:38:12"
															},
															"nativeSrc": "4617:84:12",
															"nodeType": "YulIf",
															"src": "4617:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4387:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4422:4:12",
														"nodeType": "YulTypedName",
														"src": "4422:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4431:6:12",
														"nodeType": "YulTypedName",
														"src": "4431:6:12",
														"type": ""
													}
												],
												"src": "4387:320:12"
											},
											{
												"body": {
													"nativeSrc": "4767:87:12",
													"nodeType": "YulBlock",
													"src": "4767:87:12",
													"statements": [
														{
															"nativeSrc": "4777:11:12",
															"nodeType": "YulAssignment",
															"src": "4777:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "4785:3:12",
																"nodeType": "YulIdentifier",
																"src": "4785:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4777:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4777:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4805:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4805:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4808:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4808:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4798:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4798:6:12"
																},
																"nativeSrc": "4798:14:12",
																"nodeType": "YulFunctionCall",
																"src": "4798:14:12"
															},
															"nativeSrc": "4798:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "4798:14:12"
														},
														{
															"nativeSrc": "4821:26:12",
															"nodeType": "YulAssignment",
															"src": "4821:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4839:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4839:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4842:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4842:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4829:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "4829:9:12"
																},
																"nativeSrc": "4829:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4829:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4821:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4821:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4713:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4754:3:12",
														"nodeType": "YulTypedName",
														"src": "4754:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4762:4:12",
														"nodeType": "YulTypedName",
														"src": "4762:4:12",
														"type": ""
													}
												],
												"src": "4713:141:12"
											},
											{
												"body": {
													"nativeSrc": "4904:49:12",
													"nodeType": "YulBlock",
													"src": "4904:49:12",
													"statements": [
														{
															"nativeSrc": "4914:33:12",
															"nodeType": "YulAssignment",
															"src": "4914:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4932:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4932:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4939:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4939:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4928:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4928:3:12"
																		},
																		"nativeSrc": "4928:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4928:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4944:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4944:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4924:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4924:3:12"
																},
																"nativeSrc": "4924:23:12",
																"nodeType": "YulFunctionCall",
																"src": "4924:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4914:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4914:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4860:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4887:5:12",
														"nodeType": "YulTypedName",
														"src": "4887:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4897:6:12",
														"nodeType": "YulTypedName",
														"src": "4897:6:12",
														"type": ""
													}
												],
												"src": "4860:93:12"
											},
											{
												"body": {
													"nativeSrc": "5012:54:12",
													"nodeType": "YulBlock",
													"src": "5012:54:12",
													"statements": [
														{
															"nativeSrc": "5022:37:12",
															"nodeType": "YulAssignment",
															"src": "5022:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5047:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5047:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5053:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5053:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5043:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5043:3:12"
																},
																"nativeSrc": "5043:16:12",
																"nodeType": "YulFunctionCall",
																"src": "5043:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5022:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "5022:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4959:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4987:4:12",
														"nodeType": "YulTypedName",
														"src": "4987:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4993:5:12",
														"nodeType": "YulTypedName",
														"src": "4993:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5003:8:12",
														"nodeType": "YulTypedName",
														"src": "5003:8:12",
														"type": ""
													}
												],
												"src": "4959:107:12"
											},
											{
												"body": {
													"nativeSrc": "5148:317:12",
													"nodeType": "YulBlock",
													"src": "5148:317:12",
													"statements": [
														{
															"nativeSrc": "5158:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5158:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5179:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "5179:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5191:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5191:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5175:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5175:3:12"
																},
																"nativeSrc": "5175:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5175:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5162:9:12",
																	"nodeType": "YulTypedName",
																	"src": "5162:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5202:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5202:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5233:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5233:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5244:66:12",
																		"nodeType": "YulLiteral",
																		"src": "5244:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5214:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "5214:18:12"
																},
																"nativeSrc": "5214:97:12",
																"nodeType": "YulFunctionCall",
																"src": "5214:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5206:4:12",
																	"nodeType": "YulTypedName",
																	"src": "5206:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5320:51:12",
															"nodeType": "YulAssignment",
															"src": "5320:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5351:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5351:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5362:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "5362:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5332:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "5332:18:12"
																},
																"nativeSrc": "5332:39:12",
																"nodeType": "YulFunctionCall",
																"src": "5332:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5320:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "5320:8:12"
																}
															]
														},
														{
															"nativeSrc": "5380:30:12",
															"nodeType": "YulAssignment",
															"src": "5380:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5393:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5393:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5404:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "5404:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5400:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5400:3:12"
																		},
																		"nativeSrc": "5400:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5400:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5389:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5389:3:12"
																},
																"nativeSrc": "5389:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5389:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5380:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5380:5:12"
																}
															]
														},
														{
															"nativeSrc": "5419:40:12",
															"nodeType": "YulAssignment",
															"src": "5419:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5432:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5432:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5443:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "5443:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5453:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "5453:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5439:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5439:3:12"
																		},
																		"nativeSrc": "5439:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5429:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5429:2:12"
																},
																"nativeSrc": "5429:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5429:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5419:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5419:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5072:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5109:5:12",
														"nodeType": "YulTypedName",
														"src": "5109:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5116:10:12",
														"nodeType": "YulTypedName",
														"src": "5116:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5128:8:12",
														"nodeType": "YulTypedName",
														"src": "5128:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5141:6:12",
														"nodeType": "YulTypedName",
														"src": "5141:6:12",
														"type": ""
													}
												],
												"src": "5072:393:12"
											},
											{
												"body": {
													"nativeSrc": "5516:32:12",
													"nodeType": "YulBlock",
													"src": "5516:32:12",
													"statements": [
														{
															"nativeSrc": "5526:16:12",
															"nodeType": "YulAssignment",
															"src": "5526:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "5537:5:12",
																"nodeType": "YulIdentifier",
																"src": "5537:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5526:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5526:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5471:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5498:5:12",
														"nodeType": "YulTypedName",
														"src": "5498:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5508:7:12",
														"nodeType": "YulTypedName",
														"src": "5508:7:12",
														"type": ""
													}
												],
												"src": "5471:77:12"
											},
											{
												"body": {
													"nativeSrc": "5586:28:12",
													"nodeType": "YulBlock",
													"src": "5586:28:12",
													"statements": [
														{
															"nativeSrc": "5596:12:12",
															"nodeType": "YulAssignment",
															"src": "5596:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "5603:5:12",
																"nodeType": "YulIdentifier",
																"src": "5603:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5596:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5596:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5554:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5572:5:12",
														"nodeType": "YulTypedName",
														"src": "5572:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5582:3:12",
														"nodeType": "YulTypedName",
														"src": "5582:3:12",
														"type": ""
													}
												],
												"src": "5554:60:12"
											},
											{
												"body": {
													"nativeSrc": "5680:82:12",
													"nodeType": "YulBlock",
													"src": "5680:82:12",
													"statements": [
														{
															"nativeSrc": "5690:66:12",
															"nodeType": "YulAssignment",
															"src": "5690:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5748:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5748:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5730:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "5730:17:12"
																				},
																				"nativeSrc": "5730:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5730:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5721:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "5721:8:12"
																		},
																		"nativeSrc": "5721:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5721:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5703:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "5703:17:12"
																},
																"nativeSrc": "5703:53:12",
																"nodeType": "YulFunctionCall",
																"src": "5703:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5690:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "5690:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5620:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5660:5:12",
														"nodeType": "YulTypedName",
														"src": "5660:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5670:9:12",
														"nodeType": "YulTypedName",
														"src": "5670:9:12",
														"type": ""
													}
												],
												"src": "5620:142:12"
											},
											{
												"body": {
													"nativeSrc": "5815:28:12",
													"nodeType": "YulBlock",
													"src": "5815:28:12",
													"statements": [
														{
															"nativeSrc": "5825:12:12",
															"nodeType": "YulAssignment",
															"src": "5825:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "5832:5:12",
																"nodeType": "YulIdentifier",
																"src": "5832:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5825:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5825:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5768:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5801:5:12",
														"nodeType": "YulTypedName",
														"src": "5801:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5811:3:12",
														"nodeType": "YulTypedName",
														"src": "5811:3:12",
														"type": ""
													}
												],
												"src": "5768:75:12"
											},
											{
												"body": {
													"nativeSrc": "5925:193:12",
													"nodeType": "YulBlock",
													"src": "5925:193:12",
													"statements": [
														{
															"nativeSrc": "5935:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5935:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5990:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "5990:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5959:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "5959:30:12"
																},
																"nativeSrc": "5959:39:12",
																"nodeType": "YulFunctionCall",
																"src": "5959:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5939:16:12",
																	"nodeType": "YulTypedName",
																	"src": "5939:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6014:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6014:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6054:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "6054:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6048:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "6048:5:12"
																				},
																				"nativeSrc": "6048:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6048:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6061:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6061:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6093:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "6093:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6069:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "6069:23:12"
																				},
																				"nativeSrc": "6069:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6069:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6020:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "6020:27:12"
																		},
																		"nativeSrc": "6020:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6020:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6007:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6007:6:12"
																},
																"nativeSrc": "6007:105:12",
																"nodeType": "YulFunctionCall",
																"src": "6007:105:12"
															},
															"nativeSrc": "6007:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "6007:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5849:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5902:4:12",
														"nodeType": "YulTypedName",
														"src": "5902:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5908:6:12",
														"nodeType": "YulTypedName",
														"src": "5908:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5916:7:12",
														"nodeType": "YulTypedName",
														"src": "5916:7:12",
														"type": ""
													}
												],
												"src": "5849:269:12"
											},
											{
												"body": {
													"nativeSrc": "6173:24:12",
													"nodeType": "YulBlock",
													"src": "6173:24:12",
													"statements": [
														{
															"nativeSrc": "6183:8:12",
															"nodeType": "YulAssignment",
															"src": "6183:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "6190:1:12",
																"nodeType": "YulLiteral",
																"src": "6190:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6183:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6183:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6124:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6169:3:12",
														"nodeType": "YulTypedName",
														"src": "6169:3:12",
														"type": ""
													}
												],
												"src": "6124:73:12"
											},
											{
												"body": {
													"nativeSrc": "6256:136:12",
													"nodeType": "YulBlock",
													"src": "6256:136:12",
													"statements": [
														{
															"nativeSrc": "6266:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6266:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6280:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "6280:30:12"
																},
																"nativeSrc": "6280:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6280:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6270:6:12",
																	"nodeType": "YulTypedName",
																	"src": "6270:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6365:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6365:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6371:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6371:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6379:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6379:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6321:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6321:43:12"
																},
																"nativeSrc": "6321:65:12",
																"nodeType": "YulFunctionCall",
																"src": "6321:65:12"
															},
															"nativeSrc": "6321:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "6321:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6203:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6242:4:12",
														"nodeType": "YulTypedName",
														"src": "6242:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6248:6:12",
														"nodeType": "YulTypedName",
														"src": "6248:6:12",
														"type": ""
													}
												],
												"src": "6203:189:12"
											},
											{
												"body": {
													"nativeSrc": "6448:136:12",
													"nodeType": "YulBlock",
													"src": "6448:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6515:63:12",
																"nodeType": "YulBlock",
																"src": "6515:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6559:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "6559:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6566:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6566:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6529:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "6529:29:12"
																			},
																			"nativeSrc": "6529:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6529:39:12"
																		},
																		"nativeSrc": "6529:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6529:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6468:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6468:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6475:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6475:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6465:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6465:2:12"
																},
																"nativeSrc": "6465:14:12",
																"nodeType": "YulFunctionCall",
																"src": "6465:14:12"
															},
															"nativeSrc": "6458:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6480:26:12",
																"nodeType": "YulBlock",
																"src": "6480:26:12",
																"statements": [
																	{
																		"nativeSrc": "6482:22:12",
																		"nodeType": "YulAssignment",
																		"src": "6482:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6495:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "6495:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6502:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6502:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6491:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6491:3:12"
																			},
																			"nativeSrc": "6491:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6491:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6482:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6482:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6462:2:12",
																"nodeType": "YulBlock",
																"src": "6462:2:12",
																"statements": []
															},
															"src": "6458:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6398:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6436:5:12",
														"nodeType": "YulTypedName",
														"src": "6436:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6443:3:12",
														"nodeType": "YulTypedName",
														"src": "6443:3:12",
														"type": ""
													}
												],
												"src": "6398:186:12"
											},
											{
												"body": {
													"nativeSrc": "6669:464:12",
													"nodeType": "YulBlock",
													"src": "6669:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6695:431:12",
																"nodeType": "YulBlock",
																"src": "6695:431:12",
																"statements": [
																	{
																		"nativeSrc": "6709:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6709:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6757:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "6757:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6725:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "6725:31:12"
																			},
																			"nativeSrc": "6725:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6725:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6713:8:12",
																				"nodeType": "YulTypedName",
																				"src": "6713:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6776:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6776:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6799:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "6799:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6827:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "6827:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6809:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "6809:17:12"
																					},
																					"nativeSrc": "6809:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6809:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6795:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6795:3:12"
																			},
																			"nativeSrc": "6795:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6795:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6780:11:12",
																				"nodeType": "YulTypedName",
																				"src": "6780:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6996:27:12",
																			"nodeType": "YulBlock",
																			"src": "6996:27:12",
																			"statements": [
																				{
																					"nativeSrc": "6998:23:12",
																					"nodeType": "YulAssignment",
																					"src": "6998:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7013:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "7013:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6998:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "6998:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6980:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "6980:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6992:2:12",
																					"nodeType": "YulLiteral",
																					"src": "6992:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6977:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "6977:2:12"
																			},
																			"nativeSrc": "6977:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6977:18:12"
																		},
																		"nativeSrc": "6974:49:12",
																		"nodeType": "YulIf",
																		"src": "6974:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7065:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "7065:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7082:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "7082:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7110:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "7110:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7092:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "7092:17:12"
																							},
																							"nativeSrc": "7092:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "7092:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7078:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "7078:3:12"
																					},
																					"nativeSrc": "7078:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7078:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7036:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "7036:28:12"
																			},
																			"nativeSrc": "7036:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7036:80:12"
																		},
																		"nativeSrc": "7036:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7036:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6686:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6686:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6691:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6691:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6683:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6683:2:12"
																},
																"nativeSrc": "6683:11:12",
																"nodeType": "YulFunctionCall",
																"src": "6683:11:12"
															},
															"nativeSrc": "6680:446:12",
															"nodeType": "YulIf",
															"src": "6680:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6590:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6645:5:12",
														"nodeType": "YulTypedName",
														"src": "6645:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6652:3:12",
														"nodeType": "YulTypedName",
														"src": "6652:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6657:10:12",
														"nodeType": "YulTypedName",
														"src": "6657:10:12",
														"type": ""
													}
												],
												"src": "6590:543:12"
											},
											{
												"body": {
													"nativeSrc": "7202:54:12",
													"nodeType": "YulBlock",
													"src": "7202:54:12",
													"statements": [
														{
															"nativeSrc": "7212:37:12",
															"nodeType": "YulAssignment",
															"src": "7212:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7237:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7237:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7243:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7243:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7233:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7233:3:12"
																},
																"nativeSrc": "7233:16:12",
																"nodeType": "YulFunctionCall",
																"src": "7233:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7212:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "7212:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7139:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7177:4:12",
														"nodeType": "YulTypedName",
														"src": "7177:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7183:5:12",
														"nodeType": "YulTypedName",
														"src": "7183:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7193:8:12",
														"nodeType": "YulTypedName",
														"src": "7193:8:12",
														"type": ""
													}
												],
												"src": "7139:117:12"
											},
											{
												"body": {
													"nativeSrc": "7313:118:12",
													"nodeType": "YulBlock",
													"src": "7313:118:12",
													"statements": [
														{
															"nativeSrc": "7323:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7323:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7372:1:12",
																						"nodeType": "YulLiteral",
																						"src": "7372:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7375:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "7375:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7368:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7368:3:12"
																				},
																				"nativeSrc": "7368:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7368:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7387:1:12",
																						"nodeType": "YulLiteral",
																						"src": "7387:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7383:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7383:3:12"
																				},
																				"nativeSrc": "7383:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7383:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7339:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "7339:28:12"
																		},
																		"nativeSrc": "7339:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7339:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7335:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7335:3:12"
																},
																"nativeSrc": "7335:56:12",
																"nodeType": "YulFunctionCall",
																"src": "7335:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7327:4:12",
																	"nodeType": "YulTypedName",
																	"src": "7327:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7400:25:12",
															"nodeType": "YulAssignment",
															"src": "7400:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7414:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7414:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7420:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7420:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7410:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7410:3:12"
																},
																"nativeSrc": "7410:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7410:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7400:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7400:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7262:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7290:4:12",
														"nodeType": "YulTypedName",
														"src": "7290:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7296:5:12",
														"nodeType": "YulTypedName",
														"src": "7296:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7306:6:12",
														"nodeType": "YulTypedName",
														"src": "7306:6:12",
														"type": ""
													}
												],
												"src": "7262:169:12"
											},
											{
												"body": {
													"nativeSrc": "7517:214:12",
													"nodeType": "YulBlock",
													"src": "7517:214:12",
													"statements": [
														{
															"nativeSrc": "7650:37:12",
															"nodeType": "YulAssignment",
															"src": "7650:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7677:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7677:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7683:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7683:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7658:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "7658:18:12"
																},
																"nativeSrc": "7658:29:12",
																"nodeType": "YulFunctionCall",
																"src": "7658:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7650:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7650:4:12"
																}
															]
														},
														{
															"nativeSrc": "7696:29:12",
															"nodeType": "YulAssignment",
															"src": "7696:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7707:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7707:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7717:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7717:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7720:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "7720:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7713:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7713:3:12"
																		},
																		"nativeSrc": "7713:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7713:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7704:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7704:2:12"
																},
																"nativeSrc": "7704:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7704:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7696:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7696:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7436:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7498:4:12",
														"nodeType": "YulTypedName",
														"src": "7498:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7504:3:12",
														"nodeType": "YulTypedName",
														"src": "7504:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7512:4:12",
														"nodeType": "YulTypedName",
														"src": "7512:4:12",
														"type": ""
													}
												],
												"src": "7436:295:12"
											},
											{
												"body": {
													"nativeSrc": "7828:1303:12",
													"nodeType": "YulBlock",
													"src": "7828:1303:12",
													"statements": [
														{
															"nativeSrc": "7839:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7839:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7886:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7886:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7853:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "7853:32:12"
																},
																"nativeSrc": "7853:37:12",
																"nodeType": "YulFunctionCall",
																"src": "7853:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7843:6:12",
																	"nodeType": "YulTypedName",
																	"src": "7843:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7975:22:12",
																"nodeType": "YulBlock",
																"src": "7975:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7977:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "7977:16:12"
																			},
																			"nativeSrc": "7977:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7977:18:12"
																		},
																		"nativeSrc": "7977:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7977:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7947:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7947:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7955:18:12",
																		"nodeType": "YulLiteral",
																		"src": "7955:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7944:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7944:2:12"
																},
																"nativeSrc": "7944:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7944:30:12"
															},
															"nativeSrc": "7941:56:12",
															"nodeType": "YulIf",
															"src": "7941:56:12"
														},
														{
															"nativeSrc": "8007:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8007:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8053:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "8053:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8047:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "8047:5:12"
																		},
																		"nativeSrc": "8047:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8047:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8021:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "8021:25:12"
																},
																"nativeSrc": "8021:38:12",
																"nodeType": "YulFunctionCall",
																"src": "8021:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8011:6:12",
																	"nodeType": "YulTypedName",
																	"src": "8011:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8152:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8152:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8158:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8158:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8166:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8166:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8106:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "8106:45:12"
																},
																"nativeSrc": "8106:67:12",
																"nodeType": "YulFunctionCall",
																"src": "8106:67:12"
															},
															"nativeSrc": "8106:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "8106:67:12"
														},
														{
															"nativeSrc": "8183:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8183:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "8200:1:12",
																"nodeType": "YulLiteral",
																"src": "8200:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8187:9:12",
																	"nodeType": "YulTypedName",
																	"src": "8187:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8211:17:12",
															"nodeType": "YulAssignment",
															"src": "8211:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "8224:4:12",
																"nodeType": "YulLiteral",
																"src": "8224:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8211:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "8211:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8275:611:12",
																		"nodeType": "YulBlock",
																		"src": "8275:611:12",
																		"statements": [
																			{
																				"nativeSrc": "8289:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8289:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8308:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "8308:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8320:4:12",
																									"nodeType": "YulLiteral",
																									"src": "8320:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8316:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "8316:3:12"
																							},
																							"nativeSrc": "8316:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "8316:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8304:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "8304:3:12"
																					},
																					"nativeSrc": "8304:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8304:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8293:7:12",
																						"nodeType": "YulTypedName",
																						"src": "8293:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8340:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8340:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8386:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "8386:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8354:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "8354:31:12"
																					},
																					"nativeSrc": "8354:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8354:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8344:6:12",
																						"nodeType": "YulTypedName",
																						"src": "8344:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8404:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8404:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8413:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8413:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8408:1:12",
																						"nodeType": "YulTypedName",
																						"src": "8408:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8472:163:12",
																					"nodeType": "YulBlock",
																					"src": "8472:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8497:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "8497:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8515:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "8515:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8520:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "8520:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8511:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "8511:3:12"
																												},
																												"nativeSrc": "8511:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "8511:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8505:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "8505:5:12"
																										},
																										"nativeSrc": "8505:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "8505:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8490:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "8490:6:12"
																								},
																								"nativeSrc": "8490:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8490:42:12"
																							},
																							"nativeSrc": "8490:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "8490:42:12"
																						},
																						{
																							"nativeSrc": "8549:24:12",
																							"nodeType": "YulAssignment",
																							"src": "8549:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8563:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "8563:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8571:1:12",
																										"nodeType": "YulLiteral",
																										"src": "8571:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8559:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "8559:3:12"
																								},
																								"nativeSrc": "8559:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8559:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8549:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "8549:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8590:31:12",
																							"nodeType": "YulAssignment",
																							"src": "8590:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8607:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "8607:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8618:2:12",
																										"nodeType": "YulLiteral",
																										"src": "8618:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8603:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "8603:3:12"
																								},
																								"nativeSrc": "8603:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8603:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8590:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "8590:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8438:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "8438:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8441:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "8441:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8435:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "8435:2:12"
																					},
																					"nativeSrc": "8435:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8435:14:12"
																				},
																				"nativeSrc": "8427:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8450:21:12",
																					"nodeType": "YulBlock",
																					"src": "8450:21:12",
																					"statements": [
																						{
																							"nativeSrc": "8452:17:12",
																							"nodeType": "YulAssignment",
																							"src": "8452:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8461:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "8461:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8464:4:12",
																										"nodeType": "YulLiteral",
																										"src": "8464:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8457:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "8457:3:12"
																								},
																								"nativeSrc": "8457:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8457:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8452:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "8452:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8431:3:12",
																					"nodeType": "YulBlock",
																					"src": "8431:3:12",
																					"statements": []
																				},
																				"src": "8427:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "8671:156:12",
																					"nodeType": "YulBlock",
																					"src": "8671:156:12",
																					"statements": [
																						{
																							"nativeSrc": "8689:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8689:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8716:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "8716:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8721:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "8721:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8712:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "8712:3:12"
																										},
																										"nativeSrc": "8712:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "8712:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8706:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "8706:5:12"
																								},
																								"nativeSrc": "8706:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8706:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8693:9:12",
																									"nodeType": "YulTypedName",
																									"src": "8693:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8756:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "8756:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8783:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "8783:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8798:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "8798:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8806:4:12",
																														"nodeType": "YulLiteral",
																														"src": "8806:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8794:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "8794:3:12"
																												},
																												"nativeSrc": "8794:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "8794:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8764:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "8764:18:12"
																										},
																										"nativeSrc": "8764:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "8764:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8749:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "8749:6:12"
																								},
																								"nativeSrc": "8749:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8749:64:12"
																							},
																							"nativeSrc": "8749:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "8749:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8654:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "8654:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8663:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "8663:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8651:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "8651:2:12"
																					},
																					"nativeSrc": "8651:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8651:19:12"
																				},
																				"nativeSrc": "8648:179:12",
																				"nodeType": "YulIf",
																				"src": "8648:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8847:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "8847:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8861:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "8861:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8869:1:12",
																											"nodeType": "YulLiteral",
																											"src": "8869:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8857:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "8857:3:12"
																									},
																									"nativeSrc": "8857:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "8857:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8873:1:12",
																									"nodeType": "YulLiteral",
																									"src": "8873:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8853:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "8853:3:12"
																							},
																							"nativeSrc": "8853:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "8853:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8840:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8840:6:12"
																					},
																					"nativeSrc": "8840:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8840:36:12"
																				},
																				"nativeSrc": "8840:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "8840:36:12"
																			}
																		]
																	},
																	"nativeSrc": "8268:618:12",
																	"nodeType": "YulCase",
																	"src": "8268:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8273:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8273:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8903:222:12",
																		"nodeType": "YulBlock",
																		"src": "8903:222:12",
																		"statements": [
																			{
																				"nativeSrc": "8917:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8917:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8930:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8930:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8921:5:12",
																						"nodeType": "YulTypedName",
																						"src": "8921:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8954:67:12",
																					"nodeType": "YulBlock",
																					"src": "8954:67:12",
																					"statements": [
																						{
																							"nativeSrc": "8972:35:12",
																							"nodeType": "YulAssignment",
																							"src": "8972:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8991:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "8991:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8996:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "8996:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8987:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "8987:3:12"
																										},
																										"nativeSrc": "8987:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "8987:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8981:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "8981:5:12"
																								},
																								"nativeSrc": "8981:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8981:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8972:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "8972:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8947:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "8947:6:12"
																				},
																				"nativeSrc": "8944:77:12",
																				"nodeType": "YulIf",
																				"src": "8944:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9041:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "9041:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9100:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "9100:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9107:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "9107:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9047:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "9047:52:12"
																							},
																							"nativeSrc": "9047:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "9047:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9034:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9034:6:12"
																					},
																					"nativeSrc": "9034:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9034:81:12"
																				},
																				"nativeSrc": "9034:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "9034:81:12"
																			}
																		]
																	},
																	"nativeSrc": "8895:230:12",
																	"nodeType": "YulCase",
																	"src": "8895:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8248:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8248:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8256:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8256:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8245:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8245:2:12"
																},
																"nativeSrc": "8245:14:12",
																"nodeType": "YulFunctionCall",
																"src": "8245:14:12"
															},
															"nativeSrc": "8238:887:12",
															"nodeType": "YulSwitch",
															"src": "8238:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7736:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7817:4:12",
														"nodeType": "YulTypedName",
														"src": "7817:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7823:3:12",
														"nodeType": "YulTypedName",
														"src": "7823:3:12",
														"type": ""
													}
												],
												"src": "7736:1395:12"
											},
											{
												"body": {
													"nativeSrc": "9233:73:12",
													"nodeType": "YulBlock",
													"src": "9233:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9250:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9250:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9255:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9255:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9243:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9243:6:12"
																},
																"nativeSrc": "9243:19:12",
																"nodeType": "YulFunctionCall",
																"src": "9243:19:12"
															},
															"nativeSrc": "9243:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "9243:19:12"
														},
														{
															"nativeSrc": "9271:29:12",
															"nodeType": "YulAssignment",
															"src": "9271:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9290:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9290:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9295:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9295:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9286:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9286:3:12"
																},
																"nativeSrc": "9286:14:12",
																"nodeType": "YulFunctionCall",
																"src": "9286:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9271:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "9271:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9137:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9205:3:12",
														"nodeType": "YulTypedName",
														"src": "9205:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9210:6:12",
														"nodeType": "YulTypedName",
														"src": "9210:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9221:11:12",
														"nodeType": "YulTypedName",
														"src": "9221:11:12",
														"type": ""
													}
												],
												"src": "9137:169:12"
											},
											{
												"body": {
													"nativeSrc": "9418:72:12",
													"nodeType": "YulBlock",
													"src": "9418:72:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9440:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9440:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9448:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9448:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9436:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9436:3:12"
																		},
																		"nativeSrc": "9436:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9436:14:12"
																	},
																	{
																		"hexValue": "41646d696e2063616e6e6f74206265207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "9452:30:12",
																		"nodeType": "YulLiteral",
																		"src": "9452:30:12",
																		"type": "",
																		"value": "Admin cannot be zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9429:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9429:6:12"
																},
																"nativeSrc": "9429:54:12",
																"nodeType": "YulFunctionCall",
																"src": "9429:54:12"
															},
															"nativeSrc": "9429:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "9429:54:12"
														}
													]
												},
												"name": "store_literal_in_memory_10657174ead1fc3dc6d1d3f881b335facfc9095796fd15a08f7c17697cf4bb24",
												"nativeSrc": "9312:178:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9410:6:12",
														"nodeType": "YulTypedName",
														"src": "9410:6:12",
														"type": ""
													}
												],
												"src": "9312:178:12"
											},
											{
												"body": {
													"nativeSrc": "9642:220:12",
													"nodeType": "YulBlock",
													"src": "9642:220:12",
													"statements": [
														{
															"nativeSrc": "9652:74:12",
															"nodeType": "YulAssignment",
															"src": "9652:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9718:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9718:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9723:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9723:2:12",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9659:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "9659:58:12"
																},
																"nativeSrc": "9659:67:12",
																"nodeType": "YulFunctionCall",
																"src": "9659:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9652:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9652:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9824:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9824:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_10657174ead1fc3dc6d1d3f881b335facfc9095796fd15a08f7c17697cf4bb24",
																	"nativeSrc": "9735:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "9735:88:12"
																},
																"nativeSrc": "9735:93:12",
																"nodeType": "YulFunctionCall",
																"src": "9735:93:12"
															},
															"nativeSrc": "9735:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "9735:93:12"
														},
														{
															"nativeSrc": "9837:19:12",
															"nodeType": "YulAssignment",
															"src": "9837:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9848:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9848:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9853:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9853:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9844:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9844:3:12"
																},
																"nativeSrc": "9844:12:12",
																"nodeType": "YulFunctionCall",
																"src": "9844:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9837:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9837:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_10657174ead1fc3dc6d1d3f881b335facfc9095796fd15a08f7c17697cf4bb24_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9496:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9630:3:12",
														"nodeType": "YulTypedName",
														"src": "9630:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9638:3:12",
														"nodeType": "YulTypedName",
														"src": "9638:3:12",
														"type": ""
													}
												],
												"src": "9496:366:12"
											},
											{
												"body": {
													"nativeSrc": "10039:248:12",
													"nodeType": "YulBlock",
													"src": "10039:248:12",
													"statements": [
														{
															"nativeSrc": "10049:26:12",
															"nodeType": "YulAssignment",
															"src": "10049:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10061:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10061:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10072:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10072:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10057:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10057:3:12"
																},
																"nativeSrc": "10057:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10057:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10049:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10049:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10096:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10096:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10107:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10107:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10092:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10092:3:12"
																		},
																		"nativeSrc": "10092:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10092:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10115:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "10115:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10121:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10121:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10111:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10111:3:12"
																		},
																		"nativeSrc": "10111:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10111:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10085:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10085:6:12"
																},
																"nativeSrc": "10085:47:12",
																"nodeType": "YulFunctionCall",
																"src": "10085:47:12"
															},
															"nativeSrc": "10085:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "10085:47:12"
														},
														{
															"nativeSrc": "10141:139:12",
															"nodeType": "YulAssignment",
															"src": "10141:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10275:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10275:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_10657174ead1fc3dc6d1d3f881b335facfc9095796fd15a08f7c17697cf4bb24_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10149:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "10149:124:12"
																},
																"nativeSrc": "10149:131:12",
																"nodeType": "YulFunctionCall",
																"src": "10149:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10141:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10141:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_10657174ead1fc3dc6d1d3f881b335facfc9095796fd15a08f7c17697cf4bb24__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9868:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10019:9:12",
														"nodeType": "YulTypedName",
														"src": "10019:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10034:4:12",
														"nodeType": "YulTypedName",
														"src": "10034:4:12",
														"type": ""
													}
												],
												"src": "9868:419:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_10657174ead1fc3dc6d1d3f881b335facfc9095796fd15a08f7c17697cf4bb24(memPtr) {\n\n        mstore(add(memPtr, 0), \"Admin cannot be zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_10657174ead1fc3dc6d1d3f881b335facfc9095796fd15a08f7c17697cf4bb24_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_10657174ead1fc3dc6d1d3f881b335facfc9095796fd15a08f7c17697cf4bb24(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_10657174ead1fc3dc6d1d3f881b335facfc9095796fd15a08f7c17697cf4bb24__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_10657174ead1fc3dc6d1d3f881b335facfc9095796fd15a08f7c17697cf4bb24_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a0604052601260ff1660809060ff1681525034801561001d575f5ffd5b5060405161215e38038061215e833981810160405281019061003f9190610446565b8282816003908161005091906106de565b50806004908161006091906106de565b50505060016006819055505f60075f6101000a81548160ff0219169083151502179055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e990610807565b60405180910390fd5b6101045f5f1b8261013e60201b60201c565b506101357f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68261013e60201b60201c565b50505050610825565b5f61014f838361023460201b60201c565b61022a57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506101c761029860201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905061022e565b5f90505b92915050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6102fe826102b8565b810181811067ffffffffffffffff8211171561031d5761031c6102c8565b5b80604052505050565b5f61032f61029f565b905061033b82826102f5565b919050565b5f67ffffffffffffffff82111561035a576103596102c8565b5b610363826102b8565b9050602081019050919050565b8281835e5f83830152505050565b5f61039061038b84610340565b610326565b9050828152602081018484840111156103ac576103ab6102b4565b5b6103b7848285610370565b509392505050565b5f82601f8301126103d3576103d26102b0565b5b81516103e384826020860161037e565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610415826103ec565b9050919050565b6104258161040b565b811461042f575f5ffd5b50565b5f815190506104408161041c565b92915050565b5f5f5f6060848603121561045d5761045c6102a8565b5b5f84015167ffffffffffffffff81111561047a576104796102ac565b5b610486868287016103bf565b935050602084015167ffffffffffffffff8111156104a7576104a66102ac565b5b6104b3868287016103bf565b92505060406104c486828701610432565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061051c57607f821691505b60208210810361052f5761052e6104d8565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026105917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610556565b61059b8683610556565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6105df6105da6105d5846105b3565b6105bc565b6105b3565b9050919050565b5f819050919050565b6105f8836105c5565b61060c610604826105e6565b848454610562565b825550505050565b5f5f905090565b610623610614565b61062e8184846105ef565b505050565b5b81811015610651576106465f8261061b565b600181019050610634565b5050565b601f8211156106965761066781610535565b61067084610547565b8101602085101561067f578190505b61069361068b85610547565b830182610633565b50505b505050565b5f82821c905092915050565b5f6106b65f198460080261069b565b1980831691505092915050565b5f6106ce83836106a7565b9150826002028217905092915050565b6106e7826104ce565b67ffffffffffffffff811115610700576106ff6102c8565b5b61070a8254610505565b610715828285610655565b5f60209050601f831160018114610746575f8415610734578287015190505b61073e85826106c3565b8655506107a5565b601f19841661075486610535565b5f5b8281101561077b57848901518255600182019150602085019450602081019050610756565b868310156107985784890151610794601f8916826106a7565b8355505b6001600288020188555050505b505050505050565b5f82825260208201905092915050565b7f41646d696e2063616e6e6f74206265207a65726f2061646472657373000000005f82015250565b5f6107f1601c836107ad565b91506107fc826107bd565b602082019050919050565b5f6020820190508181035f83015261081e816107e5565b9050919050565b60805161192161083d5f395f6105c701526119215ff3fe608060405234801561000f575f5ffd5b5060043610610135575f3560e01c80635c975abb116100b6578063a217fddf1161007a578063a217fddf1461034d578063a9059cbb1461036b578063d53913931461039b578063d547741f146103b9578063dd62ed3e146103d5578063e63ab1e91461040557610135565b80635c975abb146102a757806370a08231146102c55780638456cb59146102f557806391d14854146102ff57806395d89b411461032f57610135565b8063248a9ca3116100fd578063248a9ca3146102055780632f2ff15d14610235578063313ce5671461025157806336568abe1461026f57806340c10f191461028b57610135565b806301ffc9a71461013957806306fdde0314610169578063095ea7b31461018757806318160ddd146101b757806323b872dd146101d5575b5f5ffd5b610153600480360381019061014e9190611348565b610423565b604051610160919061138d565b60405180910390f35b61017161049c565b60405161017e9190611416565b60405180910390f35b6101a1600480360381019061019c91906114c3565b61052c565b6040516101ae919061138d565b60405180910390f35b6101bf61054e565b6040516101cc9190611510565b60405180910390f35b6101ef60048036038101906101ea9190611529565b610557565b6040516101fc919061138d565b60405180910390f35b61021f600480360381019061021a91906115ac565b610585565b60405161022c91906115e6565b60405180910390f35b61024f600480360381019061024a91906115ff565b6105a2565b005b6102596105c4565b6040516102669190611658565b60405180910390f35b610289600480360381019061028491906115ff565b6105eb565b005b6102a560048036038101906102a091906114c3565b610666565b005b6102af6106af565b6040516102bc919061138d565b60405180910390f35b6102df60048036038101906102da9190611671565b6106c4565b6040516102ec9190611510565b60405180910390f35b6102fd610709565b005b610319600480360381019061031491906115ff565b61073e565b604051610326919061138d565b60405180910390f35b6103376107a2565b6040516103449190611416565b60405180910390f35b610355610832565b60405161036291906115e6565b60405180910390f35b610385600480360381019061038091906114c3565b610838565b604051610392919061138d565b60405180910390f35b6103a361085a565b6040516103b091906115e6565b60405180910390f35b6103d360048036038101906103ce91906115ff565b61087e565b005b6103ef60048036038101906103ea919061169c565b6108a0565b6040516103fc9190611510565b60405180910390f35b61040d610922565b60405161041a91906115e6565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610495575061049482610946565b5b9050919050565b6060600380546104ab90611707565b80601f01602080910402602001604051908101604052809291908181526020018280546104d790611707565b80156105225780601f106104f957610100808354040283529160200191610522565b820191905f5260205f20905b81548152906001019060200180831161050557829003601f168201915b5050505050905090565b5f5f6105366109af565b90506105438185856109b6565b600191505092915050565b5f600254905090565b5f5f6105616109af565b905061056e8582856109c8565b610579858585610a5a565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b6105ab82610585565b6105b481610b4a565b6105be8383610b5e565b50505050565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b6105f36109af565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610657576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106618282610c48565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661069081610b4a565b610698610d32565b6106a28383610d81565b6106aa610e00565b505050565b5f60075f9054906101000a900460ff16905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61073381610b4a565b61073b610e0a565b50565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b6060600480546107b190611707565b80601f01602080910402602001604051908101604052809291908181526020018280546107dd90611707565b80156108285780601f106107ff57610100808354040283529160200191610828565b820191905f5260205f20905b81548152906001019060200180831161080b57829003601f168201915b5050505050905090565b5f5f1b81565b5f5f6108426109af565b905061084f818585610a5a565b600191505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61088782610585565b61089081610b4a565b61089a8383610c48565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b6109c38383836001610e6c565b505050565b5f6109d384846108a0565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a545781811015610a45578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a3c93929190611746565b60405180910390fd5b610a5384848484035f610e6c565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610aca575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610ac1919061177b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b3a575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b31919061177b565b60405180910390fd5b610b4583838361103b565b505050565b610b5b81610b566109af565b611254565b50565b5f610b69838361073e565b610c3e57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610bdb6109af565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610c42565b5f90505b92915050565b5f610c53838361073e565b15610d28575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610cc56109af565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610d2c565b5f90505b92915050565b600260065403610d77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6e906117de565b60405180910390fd5b6002600681905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610df1575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610de8919061177b565b60405180910390fd5b610dfc5f838361103b565b5050565b6001600681905550565b610e126112a5565b600160075f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e556109af565b604051610e62919061177b565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610edc575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610ed3919061177b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f4c575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610f43919061177b565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611035578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161102c9190611510565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361108b578060025f82825461107f9190611829565b92505081905550611159565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611114578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161110b93929190611746565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111a0578060025f82825403925050819055506111ea565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516112479190611510565b60405180910390a3505050565b61125e828261073e565b6112a15780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161129892919061185c565b60405180910390fd5b5050565b6112ad6106af565b156112ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e4906118cd565b60405180910390fd5b565b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611327816112f3565b8114611331575f5ffd5b50565b5f813590506113428161131e565b92915050565b5f6020828403121561135d5761135c6112ef565b5b5f61136a84828501611334565b91505092915050565b5f8115159050919050565b61138781611373565b82525050565b5f6020820190506113a05f83018461137e565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6113e8826113a6565b6113f281856113b0565b93506114028185602086016113c0565b61140b816113ce565b840191505092915050565b5f6020820190508181035f83015261142e81846113de565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61145f82611436565b9050919050565b61146f81611455565b8114611479575f5ffd5b50565b5f8135905061148a81611466565b92915050565b5f819050919050565b6114a281611490565b81146114ac575f5ffd5b50565b5f813590506114bd81611499565b92915050565b5f5f604083850312156114d9576114d86112ef565b5b5f6114e68582860161147c565b92505060206114f7858286016114af565b9150509250929050565b61150a81611490565b82525050565b5f6020820190506115235f830184611501565b92915050565b5f5f5f606084860312156115405761153f6112ef565b5b5f61154d8682870161147c565b935050602061155e8682870161147c565b925050604061156f868287016114af565b9150509250925092565b5f819050919050565b61158b81611579565b8114611595575f5ffd5b50565b5f813590506115a681611582565b92915050565b5f602082840312156115c1576115c06112ef565b5b5f6115ce84828501611598565b91505092915050565b6115e081611579565b82525050565b5f6020820190506115f95f8301846115d7565b92915050565b5f5f60408385031215611615576116146112ef565b5b5f61162285828601611598565b92505060206116338582860161147c565b9150509250929050565b5f60ff82169050919050565b6116528161163d565b82525050565b5f60208201905061166b5f830184611649565b92915050565b5f60208284031215611686576116856112ef565b5b5f6116938482850161147c565b91505092915050565b5f5f604083850312156116b2576116b16112ef565b5b5f6116bf8582860161147c565b92505060206116d08582860161147c565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061171e57607f821691505b602082108103611731576117306116da565b5b50919050565b61174081611455565b82525050565b5f6060820190506117595f830186611737565b6117666020830185611501565b6117736040830184611501565b949350505050565b5f60208201905061178e5f830184611737565b92915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6117c8601f836113b0565b91506117d382611794565b602082019050919050565b5f6020820190508181035f8301526117f5816117bc565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61183382611490565b915061183e83611490565b9250828201905080821115611856576118556117fc565b5b92915050565b5f60408201905061186f5f830185611737565b61187c60208301846115d7565b9392505050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6118b76010836113b0565b91506118c282611883565b602082019050919050565b5f6020820190508181035f8301526118e4816118ab565b905091905056fea2646970667358221220d1ca6985cec12698f635d4d371d59afa31a28d77cc1090f7cdec8497581f94e464736f6c634300081c0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x12 PUSH1 0xFF AND PUSH1 0x80 SWAP1 PUSH1 0xFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x1D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x215E CODESIZE SUB DUP1 PUSH2 0x215E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x3F SWAP2 SWAP1 PUSH2 0x446 JUMP JUMPDEST DUP3 DUP3 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x6DE JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x60 SWAP2 SWAP1 PUSH2 0x6DE JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9 SWAP1 PUSH2 0x807 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x104 PUSH0 PUSH0 SHL DUP3 PUSH2 0x13E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x135 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP3 PUSH2 0x13E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH2 0x825 JUMP JUMPDEST PUSH0 PUSH2 0x14F DUP4 DUP4 PUSH2 0x234 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x22A JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1C7 PUSH2 0x298 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x22E JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2FE DUP3 PUSH2 0x2B8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x31D JUMPI PUSH2 0x31C PUSH2 0x2C8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x32F PUSH2 0x29F JUMP JUMPDEST SWAP1 POP PUSH2 0x33B DUP3 DUP3 PUSH2 0x2F5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x35A JUMPI PUSH2 0x359 PUSH2 0x2C8 JUMP JUMPDEST JUMPDEST PUSH2 0x363 DUP3 PUSH2 0x2B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x390 PUSH2 0x38B DUP5 PUSH2 0x340 JUMP JUMPDEST PUSH2 0x326 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3AC JUMPI PUSH2 0x3AB PUSH2 0x2B4 JUMP JUMPDEST JUMPDEST PUSH2 0x3B7 DUP5 DUP3 DUP6 PUSH2 0x370 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3D3 JUMPI PUSH2 0x3D2 PUSH2 0x2B0 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x3E3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x37E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x415 DUP3 PUSH2 0x3EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x425 DUP2 PUSH2 0x40B JUMP JUMPDEST DUP2 EQ PUSH2 0x42F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x440 DUP2 PUSH2 0x41C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x45D JUMPI PUSH2 0x45C PUSH2 0x2A8 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x47A JUMPI PUSH2 0x479 PUSH2 0x2AC JUMP JUMPDEST JUMPDEST PUSH2 0x486 DUP7 DUP3 DUP8 ADD PUSH2 0x3BF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A7 JUMPI PUSH2 0x4A6 PUSH2 0x2AC JUMP JUMPDEST JUMPDEST PUSH2 0x4B3 DUP7 DUP3 DUP8 ADD PUSH2 0x3BF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x4C4 DUP7 DUP3 DUP8 ADD PUSH2 0x432 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x51C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x52F JUMPI PUSH2 0x52E PUSH2 0x4D8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x591 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x556 JUMP JUMPDEST PUSH2 0x59B DUP7 DUP4 PUSH2 0x556 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5DF PUSH2 0x5DA PUSH2 0x5D5 DUP5 PUSH2 0x5B3 JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH2 0x5B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5F8 DUP4 PUSH2 0x5C5 JUMP JUMPDEST PUSH2 0x60C PUSH2 0x604 DUP3 PUSH2 0x5E6 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x562 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x623 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x62E DUP2 DUP5 DUP5 PUSH2 0x5EF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x651 JUMPI PUSH2 0x646 PUSH0 DUP3 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x634 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x696 JUMPI PUSH2 0x667 DUP2 PUSH2 0x535 JUMP JUMPDEST PUSH2 0x670 DUP5 PUSH2 0x547 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x67F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x693 PUSH2 0x68B DUP6 PUSH2 0x547 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x633 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6B6 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x69B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6CE DUP4 DUP4 PUSH2 0x6A7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6E7 DUP3 PUSH2 0x4CE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x700 JUMPI PUSH2 0x6FF PUSH2 0x2C8 JUMP JUMPDEST JUMPDEST PUSH2 0x70A DUP3 SLOAD PUSH2 0x505 JUMP JUMPDEST PUSH2 0x715 DUP3 DUP3 DUP6 PUSH2 0x655 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x746 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x734 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x73E DUP6 DUP3 PUSH2 0x6C3 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x754 DUP7 PUSH2 0x535 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x77B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x756 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x798 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x794 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x6A7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646D696E2063616E6E6F74206265207A65726F206164647265737300000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x7F1 PUSH1 0x1C DUP4 PUSH2 0x7AD JUMP JUMPDEST SWAP2 POP PUSH2 0x7FC DUP3 PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x81E DUP2 PUSH2 0x7E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1921 PUSH2 0x83D PUSH0 CODECOPY PUSH0 PUSH2 0x5C7 ADD MSTORE PUSH2 0x1921 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x405 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x32F JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x28B JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D5 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x138D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH2 0x49C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x14C3 JUMP JUMPDEST PUSH2 0x52C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x138D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x54E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x1510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x1529 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x138D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x15AC JUMP JUMPDEST PUSH2 0x585 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0x5A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x259 PUSH2 0x5C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x289 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0x5EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x14C3 JUMP JUMPDEST PUSH2 0x666 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AF PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x138D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH2 0x709 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x319 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0x73E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x138D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x337 PUSH2 0x7A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x355 PUSH2 0x832 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x385 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x14C3 JUMP JUMPDEST PUSH2 0x838 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x138D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A3 PUSH2 0x85A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0x87E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH2 0x8A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x1510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40D PUSH2 0x922 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41A SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x495 JUMPI POP PUSH2 0x494 DUP3 PUSH2 0x946 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4AB SWAP1 PUSH2 0x1707 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4D7 SWAP1 PUSH2 0x1707 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x522 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x522 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x505 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x536 PUSH2 0x9AF JUMP JUMPDEST SWAP1 POP PUSH2 0x543 DUP2 DUP6 DUP6 PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x561 PUSH2 0x9AF JUMP JUMPDEST SWAP1 POP PUSH2 0x56E DUP6 DUP3 DUP6 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x579 DUP6 DUP6 DUP6 PUSH2 0xA5A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5AB DUP3 PUSH2 0x585 JUMP JUMPDEST PUSH2 0x5B4 DUP2 PUSH2 0xB4A JUMP JUMPDEST PUSH2 0x5BE DUP4 DUP4 PUSH2 0xB5E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5F3 PUSH2 0x9AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x657 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x661 DUP3 DUP3 PUSH2 0xC48 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x690 DUP2 PUSH2 0xB4A JUMP JUMPDEST PUSH2 0x698 PUSH2 0xD32 JUMP JUMPDEST PUSH2 0x6A2 DUP4 DUP4 PUSH2 0xD81 JUMP JUMPDEST PUSH2 0x6AA PUSH2 0xE00 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x733 DUP2 PUSH2 0xB4A JUMP JUMPDEST PUSH2 0x73B PUSH2 0xE0A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x7B1 SWAP1 PUSH2 0x1707 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7DD SWAP1 PUSH2 0x1707 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x828 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7FF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x828 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x80B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x842 PUSH2 0x9AF JUMP JUMPDEST SWAP1 POP PUSH2 0x84F DUP2 DUP6 DUP6 PUSH2 0xA5A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x887 DUP3 PUSH2 0x585 JUMP JUMPDEST PUSH2 0x890 DUP2 PUSH2 0xB4A JUMP JUMPDEST PUSH2 0x89A DUP4 DUP4 PUSH2 0xC48 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9C3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE6C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9D3 DUP5 DUP5 PUSH2 0x8A0 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xA54 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA45 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1746 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA53 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE6C JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xACA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC1 SWAP2 SWAP1 PUSH2 0x177B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB3A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB31 SWAP2 SWAP1 PUSH2 0x177B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB45 DUP4 DUP4 DUP4 PUSH2 0x103B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB5B DUP2 PUSH2 0xB56 PUSH2 0x9AF JUMP JUMPDEST PUSH2 0x1254 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xB69 DUP4 DUP4 PUSH2 0x73E JUMP JUMPDEST PUSH2 0xC3E JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBDB PUSH2 0x9AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xC42 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC53 DUP4 DUP4 PUSH2 0x73E JUMP JUMPDEST ISZERO PUSH2 0xD28 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xCC5 PUSH2 0x9AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xD2C JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xD77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6E SWAP1 PUSH2 0x17DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDF1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE8 SWAP2 SWAP1 PUSH2 0x177B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDFC PUSH0 DUP4 DUP4 PUSH2 0x103B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xE12 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xE55 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE62 SWAP2 SWAP1 PUSH2 0x177B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEDC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED3 SWAP2 SWAP1 PUSH2 0x177B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF4C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF43 SWAP2 SWAP1 PUSH2 0x177B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1035 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x102C SWAP2 SWAP1 PUSH2 0x1510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x108B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x107F SWAP2 SWAP1 PUSH2 0x1829 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1159 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1114 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1746 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11A0 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11EA JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1247 SWAP2 SWAP1 PUSH2 0x1510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x125E DUP3 DUP3 PUSH2 0x73E JUMP JUMPDEST PUSH2 0x12A1 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1298 SWAP3 SWAP2 SWAP1 PUSH2 0x185C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x12AD PUSH2 0x6AF JUMP JUMPDEST ISZERO PUSH2 0x12ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E4 SWAP1 PUSH2 0x18CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1327 DUP2 PUSH2 0x12F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1331 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1342 DUP2 PUSH2 0x131E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x135D JUMPI PUSH2 0x135C PUSH2 0x12EF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x136A DUP5 DUP3 DUP6 ADD PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1387 DUP2 PUSH2 0x1373 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13A0 PUSH0 DUP4 ADD DUP5 PUSH2 0x137E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13E8 DUP3 PUSH2 0x13A6 JUMP JUMPDEST PUSH2 0x13F2 DUP2 DUP6 PUSH2 0x13B0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1402 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13C0 JUMP JUMPDEST PUSH2 0x140B DUP2 PUSH2 0x13CE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x142E DUP2 DUP5 PUSH2 0x13DE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x145F DUP3 PUSH2 0x1436 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x146F DUP2 PUSH2 0x1455 JUMP JUMPDEST DUP2 EQ PUSH2 0x1479 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x148A DUP2 PUSH2 0x1466 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14A2 DUP2 PUSH2 0x1490 JUMP JUMPDEST DUP2 EQ PUSH2 0x14AC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14BD DUP2 PUSH2 0x1499 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14D9 JUMPI PUSH2 0x14D8 PUSH2 0x12EF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14E6 DUP6 DUP3 DUP7 ADD PUSH2 0x147C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14F7 DUP6 DUP3 DUP7 ADD PUSH2 0x14AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x150A DUP2 PUSH2 0x1490 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1523 PUSH0 DUP4 ADD DUP5 PUSH2 0x1501 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1540 JUMPI PUSH2 0x153F PUSH2 0x12EF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x154D DUP7 DUP3 DUP8 ADD PUSH2 0x147C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x155E DUP7 DUP3 DUP8 ADD PUSH2 0x147C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x156F DUP7 DUP3 DUP8 ADD PUSH2 0x14AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x158B DUP2 PUSH2 0x1579 JUMP JUMPDEST DUP2 EQ PUSH2 0x1595 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15A6 DUP2 PUSH2 0x1582 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15C1 JUMPI PUSH2 0x15C0 PUSH2 0x12EF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15CE DUP5 DUP3 DUP6 ADD PUSH2 0x1598 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15E0 DUP2 PUSH2 0x1579 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15F9 PUSH0 DUP4 ADD DUP5 PUSH2 0x15D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1615 JUMPI PUSH2 0x1614 PUSH2 0x12EF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1622 DUP6 DUP3 DUP7 ADD PUSH2 0x1598 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1633 DUP6 DUP3 DUP7 ADD PUSH2 0x147C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1652 DUP2 PUSH2 0x163D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x166B PUSH0 DUP4 ADD DUP5 PUSH2 0x1649 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1686 JUMPI PUSH2 0x1685 PUSH2 0x12EF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1693 DUP5 DUP3 DUP6 ADD PUSH2 0x147C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16B2 JUMPI PUSH2 0x16B1 PUSH2 0x12EF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16BF DUP6 DUP3 DUP7 ADD PUSH2 0x147C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16D0 DUP6 DUP3 DUP7 ADD PUSH2 0x147C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x171E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1731 JUMPI PUSH2 0x1730 PUSH2 0x16DA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1740 DUP2 PUSH2 0x1455 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1759 PUSH0 DUP4 ADD DUP7 PUSH2 0x1737 JUMP JUMPDEST PUSH2 0x1766 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x1773 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1501 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x178E PUSH0 DUP4 ADD DUP5 PUSH2 0x1737 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17C8 PUSH1 0x1F DUP4 PUSH2 0x13B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x17D3 DUP3 PUSH2 0x1794 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17F5 DUP2 PUSH2 0x17BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1833 DUP3 PUSH2 0x1490 JUMP JUMPDEST SWAP2 POP PUSH2 0x183E DUP4 PUSH2 0x1490 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1856 JUMPI PUSH2 0x1855 PUSH2 0x17FC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x186F PUSH0 DUP4 ADD DUP6 PUSH2 0x1737 JUMP JUMPDEST PUSH2 0x187C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15D7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18B7 PUSH1 0x10 DUP4 PUSH2 0x13B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x18C2 DUP3 PUSH2 0x1883 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18E4 DUP2 PUSH2 0x18AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0xCA PUSH10 0x85CEC12698F635D4D371 0xD5 SWAP11 STATICCALL BALANCE LOG2 DUP14 PUSH24 0xCC1090F7CDEC8497581F94E464736F6C634300081C003300 ",
							"sourceMap": "291:942:11:-:0;;;539:2;503:38;;;;;;;;;607:299;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;722:5;729:7;1675:5:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1716:1:4;1821:7;:22;;;;1006:5:3;996:7;;:15;;;;;;;;;;;;;;;;;;777:1:11::1;760:19;;:5;:19;;::::0;752:60:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;822:37;2232:4:0;833:18:11;;853:5;822:10;;;:37;;:::i;:::-;;869:30;405:24;893:5;869:10;;;:30;;:::i;:::-;;607:299:::0;;;291:942;;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:126::-;2607:7;2647:42;2640:5;2636:54;2625:65;;2570:126;;;:::o;2702:96::-;2739:7;2768:24;2786:5;2768:24;:::i;:::-;2757:35;;2702:96;;;:::o;2804:122::-;2877:24;2895:5;2877:24;:::i;:::-;2870:5;2867:35;2857:63;;2916:1;2913;2906:12;2857:63;2804:122;:::o;2932:143::-;2989:5;3020:6;3014:13;3005:22;;3036:33;3063:5;3036:33;:::i;:::-;2932:143;;;;:::o;3081:1009::-;3189:6;3197;3205;3254:2;3242:9;3233:7;3229:23;3225:32;3222:119;;;3260:79;;:::i;:::-;3222:119;3401:1;3390:9;3386:17;3380:24;3431:18;3423:6;3420:30;3417:117;;;3453:79;;:::i;:::-;3417:117;3558:74;3624:7;3615:6;3604:9;3600:22;3558:74;:::i;:::-;3548:84;;3351:291;3702:2;3691:9;3687:18;3681:25;3733:18;3725:6;3722:30;3719:117;;;3755:79;;:::i;:::-;3719:117;3860:74;3926:7;3917:6;3906:9;3902:22;3860:74;:::i;:::-;3850:84;;3652:292;3983:2;4009:64;4065:7;4056:6;4045:9;4041:22;4009:64;:::i;:::-;3999:74;;3954:129;3081:1009;;;;;:::o;4096:99::-;4148:6;4182:5;4176:12;4166:22;;4096:99;;;:::o;4201:180::-;4249:77;4246:1;4239:88;4346:4;4343:1;4336:15;4370:4;4367:1;4360:15;4387:320;4431:6;4468:1;4462:4;4458:12;4448:22;;4515:1;4509:4;4505:12;4536:18;4526:81;;4592:4;4584:6;4580:17;4570:27;;4526:81;4654:2;4646:6;4643:14;4623:18;4620:38;4617:84;;4673:18;;:::i;:::-;4617:84;4438:269;4387:320;;;:::o;4713:141::-;4762:4;4785:3;4777:11;;4808:3;4805:1;4798:14;4842:4;4839:1;4829:18;4821:26;;4713:141;;;:::o;4860:93::-;4897:6;4944:2;4939;4932:5;4928:14;4924:23;4914:33;;4860:93;;;:::o;4959:107::-;5003:8;5053:5;5047:4;5043:16;5022:37;;4959:107;;;;:::o;5072:393::-;5141:6;5191:1;5179:10;5175:18;5214:97;5244:66;5233:9;5214:97;:::i;:::-;5332:39;5362:8;5351:9;5332:39;:::i;:::-;5320:51;;5404:4;5400:9;5393:5;5389:21;5380:30;;5453:4;5443:8;5439:19;5432:5;5429:30;5419:40;;5148:317;;5072:393;;;;;:::o;5471:77::-;5508:7;5537:5;5526:16;;5471:77;;;:::o;5554:60::-;5582:3;5603:5;5596:12;;5554:60;;;:::o;5620:142::-;5670:9;5703:53;5721:34;5730:24;5748:5;5730:24;:::i;:::-;5721:34;:::i;:::-;5703:53;:::i;:::-;5690:66;;5620:142;;;:::o;5768:75::-;5811:3;5832:5;5825:12;;5768:75;;;:::o;5849:269::-;5959:39;5990:7;5959:39;:::i;:::-;6020:91;6069:41;6093:16;6069:41;:::i;:::-;6061:6;6054:4;6048:11;6020:91;:::i;:::-;6014:4;6007:105;5925:193;5849:269;;;:::o;6124:73::-;6169:3;6190:1;6183:8;;6124:73;:::o;6203:189::-;6280:32;;:::i;:::-;6321:65;6379:6;6371;6365:4;6321:65;:::i;:::-;6256:136;6203:189;;:::o;6398:186::-;6458:120;6475:3;6468:5;6465:14;6458:120;;;6529:39;6566:1;6559:5;6529:39;:::i;:::-;6502:1;6495:5;6491:13;6482:22;;6458:120;;;6398:186;;:::o;6590:543::-;6691:2;6686:3;6683:11;6680:446;;;6725:38;6757:5;6725:38;:::i;:::-;6809:29;6827:10;6809:29;:::i;:::-;6799:8;6795:44;6992:2;6980:10;6977:18;6974:49;;;7013:8;6998:23;;6974:49;7036:80;7092:22;7110:3;7092:22;:::i;:::-;7082:8;7078:37;7065:11;7036:80;:::i;:::-;6695:431;;6680:446;6590:543;;;:::o;7139:117::-;7193:8;7243:5;7237:4;7233:16;7212:37;;7139:117;;;;:::o;7262:169::-;7306:6;7339:51;7387:1;7383:6;7375:5;7372:1;7368:13;7339:51;:::i;:::-;7335:56;7420:4;7414;7410:15;7400:25;;7313:118;7262:169;;;;:::o;7436:295::-;7512:4;7658:29;7683:3;7677:4;7658:29;:::i;:::-;7650:37;;7720:3;7717:1;7713:11;7707:4;7704:21;7696:29;;7436:295;;;;:::o;7736:1395::-;7853:37;7886:3;7853:37;:::i;:::-;7955:18;7947:6;7944:30;7941:56;;;7977:18;;:::i;:::-;7941:56;8021:38;8053:4;8047:11;8021:38;:::i;:::-;8106:67;8166:6;8158;8152:4;8106:67;:::i;:::-;8200:1;8224:4;8211:17;;8256:2;8248:6;8245:14;8273:1;8268:618;;;;8930:1;8947:6;8944:77;;;8996:9;8991:3;8987:19;8981:26;8972:35;;8944:77;9047:67;9107:6;9100:5;9047:67;:::i;:::-;9041:4;9034:81;8903:222;8238:887;;8268:618;8320:4;8316:9;8308:6;8304:22;8354:37;8386:4;8354:37;:::i;:::-;8413:1;8427:208;8441:7;8438:1;8435:14;8427:208;;;8520:9;8515:3;8511:19;8505:26;8497:6;8490:42;8571:1;8563:6;8559:14;8549:24;;8618:2;8607:9;8603:18;8590:31;;8464:4;8461:1;8457:12;8452:17;;8427:208;;;8663:6;8654:7;8651:19;8648:179;;;8721:9;8716:3;8712:19;8706:26;8764:48;8806:4;8798:6;8794:17;8783:9;8764:48;:::i;:::-;8756:6;8749:64;8671:156;8648:179;8873:1;8869;8861:6;8857:14;8853:22;8847:4;8840:36;8275:611;;;8238:887;;7828:1303;;;7736:1395;;:::o;9137:169::-;9221:11;9255:6;9250:3;9243:19;9295:4;9290:3;9286:14;9271:29;;9137:169;;;;:::o;9312:178::-;9452:30;9448:1;9440:6;9436:14;9429:54;9312:178;:::o;9496:366::-;9638:3;9659:67;9723:2;9718:3;9659:67;:::i;:::-;9652:74;;9735:93;9824:3;9735:93;:::i;:::-;9853:2;9848:3;9844:12;9837:19;;9496:366;;;:::o;9868:419::-;10034:4;10072:2;10061:9;10057:18;10049:26;;10121:9;10115:4;10111:20;10107:1;10096:9;10092:17;10085:47;10149:131;10275:4;10149:131;:::i;:::-;10141:139;;9868:419;;;:::o;291:942:11:-;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 2098,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINTER_ROLE_1392": {
									"entryPoint": 2138,
									"id": 1392,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PAUSER_ROLE_1397": {
									"entryPoint": 2338,
									"id": 1397,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1094": {
									"entryPoint": 2486,
									"id": 1094,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1154": {
									"entryPoint": 3692,
									"id": 1154,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 4692,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 2890,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 2910,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_1043": {
									"entryPoint": 3457,
									"id": 1043,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1319": {
									"entryPoint": 2479,
									"id": 1319,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_676": {
									"entryPoint": 3584,
									"id": 676,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_668": {
									"entryPoint": 3378,
									"id": 668,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_606": {
									"entryPoint": 3594,
									"id": 606,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_579": {
									"entryPoint": 4773,
									"id": 579,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_294": {
									"entryPoint": 3144,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1202": {
									"entryPoint": 2504,
									"id": 1202,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_933": {
									"entryPoint": 2650,
									"id": 933,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1010": {
									"entryPoint": 4155,
									"id": 1010,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_830": {
									"entryPoint": 2208,
									"id": 830,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_854": {
									"entryPoint": 1324,
									"id": 854,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_789": {
									"entryPoint": 1732,
									"id": 789,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_1467": {
									"entryPoint": 1476,
									"id": 1467,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": 1413,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 1442,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 1854,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_1458": {
									"entryPoint": 1638,
									"id": 1458,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_749": {
									"entryPoint": 1180,
									"id": 749,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1477": {
									"entryPoint": 1801,
									"id": 1477,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_567": {
									"entryPoint": 1711,
									"id": 567,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_189": {
									"entryPoint": 1515,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 2174,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1360": {
									"entryPoint": 2374,
									"id": 1360,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 1059,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_758": {
									"entryPoint": 1954,
									"id": 758,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_776": {
									"entryPoint": 1358,
									"id": 776,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_886": {
									"entryPoint": 1367,
									"id": 886,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_813": {
									"entryPoint": 2104,
									"id": 813,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 5528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 6236,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5958,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5056,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6140,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5850,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4847,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 6275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 6036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 5506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11824:12",
										"nodeType": "YulBlock",
										"src": "0:11824:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "378:105:12",
													"nodeType": "YulBlock",
													"src": "378:105:12",
													"statements": [
														{
															"nativeSrc": "388:89:12",
															"nodeType": "YulAssignment",
															"src": "388:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:12",
																		"nodeType": "YulLiteral",
																		"src": "410:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nativeSrc": "399:78:12",
																"nodeType": "YulFunctionCall",
																"src": "399:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:12",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:12",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:149:12"
											},
											{
												"body": {
													"nativeSrc": "531:78:12",
													"nodeType": "YulBlock",
													"src": "531:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:12",
																"nodeType": "YulBlock",
																"src": "587:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:12",
																					"nodeType": "YulLiteral",
																					"src": "596:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:12",
																					"nodeType": "YulLiteral",
																					"src": "599:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:12"
																			},
																			"nativeSrc": "589:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:12"
																		},
																		"nativeSrc": "589:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:12"
																				},
																				"nativeSrc": "561:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:12"
																		},
																		"nativeSrc": "551:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																},
																"nativeSrc": "544:42:12",
																"nodeType": "YulFunctionCall",
																"src": "544:42:12"
															},
															"nativeSrc": "541:62:12",
															"nodeType": "YulIf",
															"src": "541:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:12",
														"nodeType": "YulTypedName",
														"src": "524:5:12",
														"type": ""
													}
												],
												"src": "489:120:12"
											},
											{
												"body": {
													"nativeSrc": "666:86:12",
													"nodeType": "YulBlock",
													"src": "666:86:12",
													"statements": [
														{
															"nativeSrc": "676:29:12",
															"nodeType": "YulAssignment",
															"src": "676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:12"
																},
																"nativeSrc": "685:20:12",
																"nodeType": "YulFunctionCall",
																"src": "685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:12"
																},
																"nativeSrc": "714:32:12",
																"nodeType": "YulFunctionCall",
																"src": "714:32:12"
															},
															"nativeSrc": "714:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:12",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:12",
														"nodeType": "YulTypedName",
														"src": "652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:12",
														"nodeType": "YulTypedName",
														"src": "660:5:12",
														"type": ""
													}
												],
												"src": "615:137:12"
											},
											{
												"body": {
													"nativeSrc": "823:262:12",
													"nodeType": "YulBlock",
													"src": "823:262:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:12",
																"nodeType": "YulBlock",
																"src": "869:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:12"
																			},
																			"nativeSrc": "871:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:12"
																		},
																		"nativeSrc": "871:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:12"
																		},
																		"nativeSrc": "840:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:12",
																		"nodeType": "YulLiteral",
																		"src": "865:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:12"
																},
																"nativeSrc": "836:32:12",
																"nodeType": "YulFunctionCall",
																"src": "836:32:12"
															},
															"nativeSrc": "833:119:12",
															"nodeType": "YulIf",
															"src": "833:119:12"
														},
														{
															"nativeSrc": "962:116:12",
															"nodeType": "YulBlock",
															"src": "962:116:12",
															"statements": [
																{
																	"nativeSrc": "977:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:12",
																		"nodeType": "YulLiteral",
																		"src": "991:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:12",
																			"nodeType": "YulTypedName",
																			"src": "981:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:12",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:12"
																				},
																				"nativeSrc": "1036:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:12"
																		},
																		"nativeSrc": "1016:52:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:12",
														"nodeType": "YulTypedName",
														"src": "793:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:12",
														"nodeType": "YulTypedName",
														"src": "804:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:12",
														"nodeType": "YulTypedName",
														"src": "816:6:12",
														"type": ""
													}
												],
												"src": "758:327:12"
											},
											{
												"body": {
													"nativeSrc": "1133:48:12",
													"nodeType": "YulBlock",
													"src": "1133:48:12",
													"statements": [
														{
															"nativeSrc": "1143:32:12",
															"nodeType": "YulAssignment",
															"src": "1143:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:12"
																		},
																		"nativeSrc": "1161:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:12"
																},
																"nativeSrc": "1154:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:12",
														"nodeType": "YulTypedName",
														"src": "1115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:12",
														"nodeType": "YulTypedName",
														"src": "1125:7:12",
														"type": ""
													}
												],
												"src": "1091:90:12"
											},
											{
												"body": {
													"nativeSrc": "1246:50:12",
													"nodeType": "YulBlock",
													"src": "1246:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:12"
																		},
																		"nativeSrc": "1268:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:12"
																},
																"nativeSrc": "1256:34:12",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:12"
															},
															"nativeSrc": "1256:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:12",
														"nodeType": "YulTypedName",
														"src": "1234:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:12",
														"nodeType": "YulTypedName",
														"src": "1241:3:12",
														"type": ""
													}
												],
												"src": "1187:109:12"
											},
											{
												"body": {
													"nativeSrc": "1394:118:12",
													"nodeType": "YulBlock",
													"src": "1394:118:12",
													"statements": [
														{
															"nativeSrc": "1404:26:12",
															"nodeType": "YulAssignment",
															"src": "1404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:12"
																},
																"nativeSrc": "1412:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:12"
																		},
																		"nativeSrc": "1487:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:12"
																},
																"nativeSrc": "1440:65:12",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:12"
															},
															"nativeSrc": "1440:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:12",
														"nodeType": "YulTypedName",
														"src": "1366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:12",
														"nodeType": "YulTypedName",
														"src": "1378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:12",
														"nodeType": "YulTypedName",
														"src": "1389:4:12",
														"type": ""
													}
												],
												"src": "1302:210:12"
											},
											{
												"body": {
													"nativeSrc": "1577:40:12",
													"nodeType": "YulBlock",
													"src": "1577:40:12",
													"statements": [
														{
															"nativeSrc": "1588:22:12",
															"nodeType": "YulAssignment",
															"src": "1588:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:12"
																},
																"nativeSrc": "1598:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:12",
														"nodeType": "YulTypedName",
														"src": "1560:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:12",
														"nodeType": "YulTypedName",
														"src": "1570:6:12",
														"type": ""
													}
												],
												"src": "1518:99:12"
											},
											{
												"body": {
													"nativeSrc": "1719:73:12",
													"nodeType": "YulBlock",
													"src": "1719:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:12"
																},
																"nativeSrc": "1729:19:12",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:12"
															},
															"nativeSrc": "1729:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:12"
														},
														{
															"nativeSrc": "1757:29:12",
															"nodeType": "YulAssignment",
															"src": "1757:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:12"
																},
																"nativeSrc": "1772:14:12",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:12",
														"nodeType": "YulTypedName",
														"src": "1691:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:12",
														"nodeType": "YulTypedName",
														"src": "1696:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:12",
														"nodeType": "YulTypedName",
														"src": "1707:11:12",
														"type": ""
													}
												],
												"src": "1623:169:12"
											},
											{
												"body": {
													"nativeSrc": "1860:77:12",
													"nodeType": "YulBlock",
													"src": "1860:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:12"
																},
																"nativeSrc": "1871:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:12"
															},
															"nativeSrc": "1871:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:12"
																		},
																		"nativeSrc": "1910:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:12"
																},
																"nativeSrc": "1903:27:12",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:12"
															},
															"nativeSrc": "1903:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:12",
														"nodeType": "YulTypedName",
														"src": "1842:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:12",
														"nodeType": "YulTypedName",
														"src": "1847:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:12",
														"nodeType": "YulTypedName",
														"src": "1852:6:12",
														"type": ""
													}
												],
												"src": "1798:139:12"
											},
											{
												"body": {
													"nativeSrc": "1991:54:12",
													"nodeType": "YulBlock",
													"src": "1991:54:12",
													"statements": [
														{
															"nativeSrc": "2001:38:12",
															"nodeType": "YulAssignment",
															"src": "2001:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:12"
																		},
																		"nativeSrc": "2015:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:12"
																		},
																		"nativeSrc": "2031:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:12"
																},
																"nativeSrc": "2011:28:12",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:12",
														"nodeType": "YulTypedName",
														"src": "1974:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:12",
														"nodeType": "YulTypedName",
														"src": "1984:6:12",
														"type": ""
													}
												],
												"src": "1943:102:12"
											},
											{
												"body": {
													"nativeSrc": "2143:285:12",
													"nodeType": "YulBlock",
													"src": "2143:285:12",
													"statements": [
														{
															"nativeSrc": "2153:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:12"
																},
																"nativeSrc": "2167:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:12",
															"nodeType": "YulAssignment",
															"src": "2215:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:12"
																},
																"nativeSrc": "2222:71:12",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:12"
																		},
																		"nativeSrc": "2337:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:12"
																},
																"nativeSrc": "2302:65:12",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:12"
															},
															"nativeSrc": "2302:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:12"
														},
														{
															"nativeSrc": "2376:46:12",
															"nodeType": "YulAssignment",
															"src": "2376:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:12"
																		},
																		"nativeSrc": "2392:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:12"
																},
																"nativeSrc": "2383:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:12",
														"nodeType": "YulTypedName",
														"src": "2124:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:12",
														"nodeType": "YulTypedName",
														"src": "2131:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:12",
														"nodeType": "YulTypedName",
														"src": "2139:3:12",
														"type": ""
													}
												],
												"src": "2051:377:12"
											},
											{
												"body": {
													"nativeSrc": "2552:195:12",
													"nodeType": "YulBlock",
													"src": "2552:195:12",
													"statements": [
														{
															"nativeSrc": "2562:26:12",
															"nodeType": "YulAssignment",
															"src": "2562:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:12"
																},
																"nativeSrc": "2570:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:12"
																		},
																		"nativeSrc": "2605:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:12"
																		},
																		"nativeSrc": "2624:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:12"
																},
																"nativeSrc": "2598:47:12",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:12"
															},
															"nativeSrc": "2598:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:12"
														},
														{
															"nativeSrc": "2654:86:12",
															"nodeType": "YulAssignment",
															"src": "2654:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:12"
																},
																"nativeSrc": "2662:78:12",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:12",
														"nodeType": "YulTypedName",
														"src": "2524:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:12",
														"nodeType": "YulTypedName",
														"src": "2536:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:12",
														"nodeType": "YulTypedName",
														"src": "2547:4:12",
														"type": ""
													}
												],
												"src": "2434:313:12"
											},
											{
												"body": {
													"nativeSrc": "2798:81:12",
													"nodeType": "YulBlock",
													"src": "2798:81:12",
													"statements": [
														{
															"nativeSrc": "2808:65:12",
															"nodeType": "YulAssignment",
															"src": "2808:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2823:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2823:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2830:42:12",
																		"nodeType": "YulLiteral",
																		"src": "2830:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2819:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2819:3:12"
																},
																"nativeSrc": "2819:54:12",
																"nodeType": "YulFunctionCall",
																"src": "2819:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2753:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:12",
														"nodeType": "YulTypedName",
														"src": "2780:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:12",
														"nodeType": "YulTypedName",
														"src": "2790:7:12",
														"type": ""
													}
												],
												"src": "2753:126:12"
											},
											{
												"body": {
													"nativeSrc": "2930:51:12",
													"nodeType": "YulBlock",
													"src": "2930:51:12",
													"statements": [
														{
															"nativeSrc": "2940:35:12",
															"nodeType": "YulAssignment",
															"src": "2940:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2969:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2969:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2951:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "2951:17:12"
																},
																"nativeSrc": "2951:24:12",
																"nodeType": "YulFunctionCall",
																"src": "2951:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2940:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2940:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2885:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2912:5:12",
														"nodeType": "YulTypedName",
														"src": "2912:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2922:7:12",
														"nodeType": "YulTypedName",
														"src": "2922:7:12",
														"type": ""
													}
												],
												"src": "2885:96:12"
											},
											{
												"body": {
													"nativeSrc": "3030:79:12",
													"nodeType": "YulBlock",
													"src": "3030:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3087:16:12",
																"nodeType": "YulBlock",
																"src": "3087:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3096:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3096:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3099:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3099:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3089:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3089:6:12"
																			},
																			"nativeSrc": "3089:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3089:12:12"
																		},
																		"nativeSrc": "3089:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3089:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3053:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3053:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3078:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3078:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3060:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3060:17:12"
																				},
																				"nativeSrc": "3060:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3060:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3050:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3050:2:12"
																		},
																		"nativeSrc": "3050:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3050:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3043:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3043:6:12"
																},
																"nativeSrc": "3043:43:12",
																"nodeType": "YulFunctionCall",
																"src": "3043:43:12"
															},
															"nativeSrc": "3040:63:12",
															"nodeType": "YulIf",
															"src": "3040:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2987:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3023:5:12",
														"nodeType": "YulTypedName",
														"src": "3023:5:12",
														"type": ""
													}
												],
												"src": "2987:122:12"
											},
											{
												"body": {
													"nativeSrc": "3167:87:12",
													"nodeType": "YulBlock",
													"src": "3167:87:12",
													"statements": [
														{
															"nativeSrc": "3177:29:12",
															"nodeType": "YulAssignment",
															"src": "3177:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3199:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3199:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3186:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3186:12:12"
																},
																"nativeSrc": "3186:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3186:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3177:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3177:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3242:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3242:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3215:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "3215:26:12"
																},
																"nativeSrc": "3215:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3215:33:12"
															},
															"nativeSrc": "3215:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3215:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3115:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3145:6:12",
														"nodeType": "YulTypedName",
														"src": "3145:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3153:3:12",
														"nodeType": "YulTypedName",
														"src": "3153:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3161:5:12",
														"nodeType": "YulTypedName",
														"src": "3161:5:12",
														"type": ""
													}
												],
												"src": "3115:139:12"
											},
											{
												"body": {
													"nativeSrc": "3305:32:12",
													"nodeType": "YulBlock",
													"src": "3305:32:12",
													"statements": [
														{
															"nativeSrc": "3315:16:12",
															"nodeType": "YulAssignment",
															"src": "3315:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "3326:5:12",
																"nodeType": "YulIdentifier",
																"src": "3326:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3315:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3315:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3260:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3287:5:12",
														"nodeType": "YulTypedName",
														"src": "3287:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3297:7:12",
														"nodeType": "YulTypedName",
														"src": "3297:7:12",
														"type": ""
													}
												],
												"src": "3260:77:12"
											},
											{
												"body": {
													"nativeSrc": "3386:79:12",
													"nodeType": "YulBlock",
													"src": "3386:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3443:16:12",
																"nodeType": "YulBlock",
																"src": "3443:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3452:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3452:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3455:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3455:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3445:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3445:6:12"
																			},
																			"nativeSrc": "3445:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3445:12:12"
																		},
																		"nativeSrc": "3445:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3445:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3409:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3409:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3434:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3434:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3416:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3416:17:12"
																				},
																				"nativeSrc": "3416:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3416:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3406:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3406:2:12"
																		},
																		"nativeSrc": "3406:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3406:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3399:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:12"
																},
																"nativeSrc": "3399:43:12",
																"nodeType": "YulFunctionCall",
																"src": "3399:43:12"
															},
															"nativeSrc": "3396:63:12",
															"nodeType": "YulIf",
															"src": "3396:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3343:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3379:5:12",
														"nodeType": "YulTypedName",
														"src": "3379:5:12",
														"type": ""
													}
												],
												"src": "3343:122:12"
											},
											{
												"body": {
													"nativeSrc": "3523:87:12",
													"nodeType": "YulBlock",
													"src": "3523:87:12",
													"statements": [
														{
															"nativeSrc": "3533:29:12",
															"nodeType": "YulAssignment",
															"src": "3533:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3555:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3555:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3542:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3542:12:12"
																},
																"nativeSrc": "3542:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3542:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3533:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3533:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3598:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3598:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3571:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "3571:26:12"
																},
																"nativeSrc": "3571:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3571:33:12"
															},
															"nativeSrc": "3571:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3571:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3471:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3501:6:12",
														"nodeType": "YulTypedName",
														"src": "3501:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3509:3:12",
														"nodeType": "YulTypedName",
														"src": "3509:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3517:5:12",
														"nodeType": "YulTypedName",
														"src": "3517:5:12",
														"type": ""
													}
												],
												"src": "3471:139:12"
											},
											{
												"body": {
													"nativeSrc": "3699:391:12",
													"nodeType": "YulBlock",
													"src": "3699:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3745:83:12",
																"nodeType": "YulBlock",
																"src": "3745:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3747:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3747:77:12"
																			},
																			"nativeSrc": "3747:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3747:79:12"
																		},
																		"nativeSrc": "3747:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3747:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3720:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3720:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3729:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3729:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3716:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:12"
																		},
																		"nativeSrc": "3716:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3716:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3741:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3741:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3712:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3712:3:12"
																},
																"nativeSrc": "3712:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3712:32:12"
															},
															"nativeSrc": "3709:119:12",
															"nodeType": "YulIf",
															"src": "3709:119:12"
														},
														{
															"nativeSrc": "3838:117:12",
															"nodeType": "YulBlock",
															"src": "3838:117:12",
															"statements": [
																{
																	"nativeSrc": "3853:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3853:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3867:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3867:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3857:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3857:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3882:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3882:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3917:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3917:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3928:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3928:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3913:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3913:3:12"
																				},
																				"nativeSrc": "3913:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3913:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3937:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3937:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3892:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3892:20:12"
																		},
																		"nativeSrc": "3892:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3892:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3882:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3882:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3965:118:12",
															"nodeType": "YulBlock",
															"src": "3965:118:12",
															"statements": [
																{
																	"nativeSrc": "3980:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3980:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3994:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3994:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3984:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3984:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4010:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4010:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4045:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4045:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4056:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4056:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4041:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4041:3:12"
																				},
																				"nativeSrc": "4041:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4041:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4020:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4020:20:12"
																		},
																		"nativeSrc": "4020:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4020:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4010:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4010:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3616:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3661:9:12",
														"nodeType": "YulTypedName",
														"src": "3661:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3672:7:12",
														"nodeType": "YulTypedName",
														"src": "3672:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3684:6:12",
														"nodeType": "YulTypedName",
														"src": "3684:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3692:6:12",
														"nodeType": "YulTypedName",
														"src": "3692:6:12",
														"type": ""
													}
												],
												"src": "3616:474:12"
											},
											{
												"body": {
													"nativeSrc": "4161:53:12",
													"nodeType": "YulBlock",
													"src": "4161:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4178:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4178:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4201:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4201:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4183:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "4183:17:12"
																		},
																		"nativeSrc": "4183:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4183:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4171:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4171:6:12"
																},
																"nativeSrc": "4171:37:12",
																"nodeType": "YulFunctionCall",
																"src": "4171:37:12"
															},
															"nativeSrc": "4171:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "4171:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4096:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4149:5:12",
														"nodeType": "YulTypedName",
														"src": "4149:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4156:3:12",
														"nodeType": "YulTypedName",
														"src": "4156:3:12",
														"type": ""
													}
												],
												"src": "4096:118:12"
											},
											{
												"body": {
													"nativeSrc": "4318:124:12",
													"nodeType": "YulBlock",
													"src": "4318:124:12",
													"statements": [
														{
															"nativeSrc": "4328:26:12",
															"nodeType": "YulAssignment",
															"src": "4328:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4340:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4340:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4351:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4351:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4336:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:12"
																},
																"nativeSrc": "4336:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4336:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4328:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4328:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4408:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4408:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4421:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4421:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4432:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4432:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4417:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4417:3:12"
																		},
																		"nativeSrc": "4417:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4417:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4364:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "4364:43:12"
																},
																"nativeSrc": "4364:71:12",
																"nodeType": "YulFunctionCall",
																"src": "4364:71:12"
															},
															"nativeSrc": "4364:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "4364:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4220:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4290:9:12",
														"nodeType": "YulTypedName",
														"src": "4290:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4302:6:12",
														"nodeType": "YulTypedName",
														"src": "4302:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4313:4:12",
														"nodeType": "YulTypedName",
														"src": "4313:4:12",
														"type": ""
													}
												],
												"src": "4220:222:12"
											},
											{
												"body": {
													"nativeSrc": "4548:519:12",
													"nodeType": "YulBlock",
													"src": "4548:519:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4594:83:12",
																"nodeType": "YulBlock",
																"src": "4594:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4596:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4596:77:12"
																			},
																			"nativeSrc": "4596:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4596:79:12"
																		},
																		"nativeSrc": "4596:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4596:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4569:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4569:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4578:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4578:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4565:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4565:3:12"
																		},
																		"nativeSrc": "4565:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4565:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4590:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4590:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4561:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4561:3:12"
																},
																"nativeSrc": "4561:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4561:32:12"
															},
															"nativeSrc": "4558:119:12",
															"nodeType": "YulIf",
															"src": "4558:119:12"
														},
														{
															"nativeSrc": "4687:117:12",
															"nodeType": "YulBlock",
															"src": "4687:117:12",
															"statements": [
																{
																	"nativeSrc": "4702:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4702:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4716:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4716:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4706:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4706:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4731:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4731:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4766:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4766:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4777:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4777:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4762:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4762:3:12"
																				},
																				"nativeSrc": "4762:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4762:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4786:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4786:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4741:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4741:20:12"
																		},
																		"nativeSrc": "4741:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4741:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4731:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4731:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4814:118:12",
															"nodeType": "YulBlock",
															"src": "4814:118:12",
															"statements": [
																{
																	"nativeSrc": "4829:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4829:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4843:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4843:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4833:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4833:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4859:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4859:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4894:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4894:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4905:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4905:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4890:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4890:3:12"
																				},
																				"nativeSrc": "4890:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4890:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4914:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4914:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4869:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4869:20:12"
																		},
																		"nativeSrc": "4869:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4869:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4859:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4859:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4942:118:12",
															"nodeType": "YulBlock",
															"src": "4942:118:12",
															"statements": [
																{
																	"nativeSrc": "4957:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4957:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4971:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4971:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4961:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4961:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4987:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4987:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5022:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5022:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5033:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5033:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5018:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5018:3:12"
																				},
																				"nativeSrc": "5018:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5018:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5042:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5042:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4997:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4997:20:12"
																		},
																		"nativeSrc": "4997:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4997:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4987:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4987:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4448:619:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4502:9:12",
														"nodeType": "YulTypedName",
														"src": "4502:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4513:7:12",
														"nodeType": "YulTypedName",
														"src": "4513:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4525:6:12",
														"nodeType": "YulTypedName",
														"src": "4525:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4533:6:12",
														"nodeType": "YulTypedName",
														"src": "4533:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4541:6:12",
														"nodeType": "YulTypedName",
														"src": "4541:6:12",
														"type": ""
													}
												],
												"src": "4448:619:12"
											},
											{
												"body": {
													"nativeSrc": "5118:32:12",
													"nodeType": "YulBlock",
													"src": "5118:32:12",
													"statements": [
														{
															"nativeSrc": "5128:16:12",
															"nodeType": "YulAssignment",
															"src": "5128:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "5139:5:12",
																"nodeType": "YulIdentifier",
																"src": "5139:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5128:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5128:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5073:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5100:5:12",
														"nodeType": "YulTypedName",
														"src": "5100:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5110:7:12",
														"nodeType": "YulTypedName",
														"src": "5110:7:12",
														"type": ""
													}
												],
												"src": "5073:77:12"
											},
											{
												"body": {
													"nativeSrc": "5199:79:12",
													"nodeType": "YulBlock",
													"src": "5199:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5256:16:12",
																"nodeType": "YulBlock",
																"src": "5256:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5265:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5265:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5268:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5268:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5258:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5258:6:12"
																			},
																			"nativeSrc": "5258:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5258:12:12"
																		},
																		"nativeSrc": "5258:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5258:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5222:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5222:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5247:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5247:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5229:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "5229:17:12"
																				},
																				"nativeSrc": "5229:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5229:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5219:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5219:2:12"
																		},
																		"nativeSrc": "5219:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5219:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5212:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:12"
																},
																"nativeSrc": "5212:43:12",
																"nodeType": "YulFunctionCall",
																"src": "5212:43:12"
															},
															"nativeSrc": "5209:63:12",
															"nodeType": "YulIf",
															"src": "5209:63:12"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5156:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5192:5:12",
														"nodeType": "YulTypedName",
														"src": "5192:5:12",
														"type": ""
													}
												],
												"src": "5156:122:12"
											},
											{
												"body": {
													"nativeSrc": "5336:87:12",
													"nodeType": "YulBlock",
													"src": "5336:87:12",
													"statements": [
														{
															"nativeSrc": "5346:29:12",
															"nodeType": "YulAssignment",
															"src": "5346:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5368:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5368:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5355:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "5355:12:12"
																},
																"nativeSrc": "5355:20:12",
																"nodeType": "YulFunctionCall",
																"src": "5355:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5346:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5346:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5411:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5411:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5384:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "5384:26:12"
																},
																"nativeSrc": "5384:33:12",
																"nodeType": "YulFunctionCall",
																"src": "5384:33:12"
															},
															"nativeSrc": "5384:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "5384:33:12"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5284:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5314:6:12",
														"nodeType": "YulTypedName",
														"src": "5314:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5322:3:12",
														"nodeType": "YulTypedName",
														"src": "5322:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5330:5:12",
														"nodeType": "YulTypedName",
														"src": "5330:5:12",
														"type": ""
													}
												],
												"src": "5284:139:12"
											},
											{
												"body": {
													"nativeSrc": "5495:263:12",
													"nodeType": "YulBlock",
													"src": "5495:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5541:83:12",
																"nodeType": "YulBlock",
																"src": "5541:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5543:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "5543:77:12"
																			},
																			"nativeSrc": "5543:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5543:79:12"
																		},
																		"nativeSrc": "5543:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5543:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5516:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5516:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5525:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5525:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5512:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5512:3:12"
																		},
																		"nativeSrc": "5512:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5512:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5537:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5537:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5508:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5508:3:12"
																},
																"nativeSrc": "5508:32:12",
																"nodeType": "YulFunctionCall",
																"src": "5508:32:12"
															},
															"nativeSrc": "5505:119:12",
															"nodeType": "YulIf",
															"src": "5505:119:12"
														},
														{
															"nativeSrc": "5634:117:12",
															"nodeType": "YulBlock",
															"src": "5634:117:12",
															"statements": [
																{
																	"nativeSrc": "5649:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5649:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5663:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5663:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5653:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5653:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5678:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5678:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5713:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5713:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5724:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5724:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5709:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5709:3:12"
																				},
																				"nativeSrc": "5709:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5709:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5733:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5733:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "5688:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5688:20:12"
																		},
																		"nativeSrc": "5688:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5688:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5678:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5678:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "5429:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5465:9:12",
														"nodeType": "YulTypedName",
														"src": "5465:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5476:7:12",
														"nodeType": "YulTypedName",
														"src": "5476:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5488:6:12",
														"nodeType": "YulTypedName",
														"src": "5488:6:12",
														"type": ""
													}
												],
												"src": "5429:329:12"
											},
											{
												"body": {
													"nativeSrc": "5829:53:12",
													"nodeType": "YulBlock",
													"src": "5829:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5846:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5846:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5869:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5869:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5851:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "5851:17:12"
																		},
																		"nativeSrc": "5851:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5851:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5839:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5839:6:12"
																},
																"nativeSrc": "5839:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5839:37:12"
															},
															"nativeSrc": "5839:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "5839:37:12"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "5764:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5817:5:12",
														"nodeType": "YulTypedName",
														"src": "5817:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5824:3:12",
														"nodeType": "YulTypedName",
														"src": "5824:3:12",
														"type": ""
													}
												],
												"src": "5764:118:12"
											},
											{
												"body": {
													"nativeSrc": "5986:124:12",
													"nodeType": "YulBlock",
													"src": "5986:124:12",
													"statements": [
														{
															"nativeSrc": "5996:26:12",
															"nodeType": "YulAssignment",
															"src": "5996:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6008:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6008:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6019:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6019:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6004:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6004:3:12"
																},
																"nativeSrc": "6004:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6004:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5996:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5996:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6076:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6076:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6089:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6089:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6100:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6100:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6085:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6085:3:12"
																		},
																		"nativeSrc": "6085:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6085:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6032:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6032:43:12"
																},
																"nativeSrc": "6032:71:12",
																"nodeType": "YulFunctionCall",
																"src": "6032:71:12"
															},
															"nativeSrc": "6032:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "6032:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "5888:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5958:9:12",
														"nodeType": "YulTypedName",
														"src": "5958:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5970:6:12",
														"nodeType": "YulTypedName",
														"src": "5970:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5981:4:12",
														"nodeType": "YulTypedName",
														"src": "5981:4:12",
														"type": ""
													}
												],
												"src": "5888:222:12"
											},
											{
												"body": {
													"nativeSrc": "6199:391:12",
													"nodeType": "YulBlock",
													"src": "6199:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6245:83:12",
																"nodeType": "YulBlock",
																"src": "6245:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6247:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6247:77:12"
																			},
																			"nativeSrc": "6247:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6247:79:12"
																		},
																		"nativeSrc": "6247:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6247:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6220:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6220:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6229:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6229:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6216:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6216:3:12"
																		},
																		"nativeSrc": "6216:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6216:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6241:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6241:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6212:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6212:3:12"
																},
																"nativeSrc": "6212:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6212:32:12"
															},
															"nativeSrc": "6209:119:12",
															"nodeType": "YulIf",
															"src": "6209:119:12"
														},
														{
															"nativeSrc": "6338:117:12",
															"nodeType": "YulBlock",
															"src": "6338:117:12",
															"statements": [
																{
																	"nativeSrc": "6353:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6353:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6367:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6367:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6357:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6357:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6382:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6382:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6417:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6417:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6428:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6428:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6413:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6413:3:12"
																				},
																				"nativeSrc": "6413:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6413:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6437:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6437:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6392:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6392:20:12"
																		},
																		"nativeSrc": "6392:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6392:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6382:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6382:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6465:118:12",
															"nodeType": "YulBlock",
															"src": "6465:118:12",
															"statements": [
																{
																	"nativeSrc": "6480:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6480:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6494:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6494:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6484:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6484:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6510:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6510:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6545:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6545:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6556:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6556:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6541:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6541:3:12"
																				},
																				"nativeSrc": "6541:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6541:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6565:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6565:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6520:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6520:20:12"
																		},
																		"nativeSrc": "6520:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6520:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6510:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6510:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "6116:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6161:9:12",
														"nodeType": "YulTypedName",
														"src": "6161:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6172:7:12",
														"nodeType": "YulTypedName",
														"src": "6172:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6184:6:12",
														"nodeType": "YulTypedName",
														"src": "6184:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6192:6:12",
														"nodeType": "YulTypedName",
														"src": "6192:6:12",
														"type": ""
													}
												],
												"src": "6116:474:12"
											},
											{
												"body": {
													"nativeSrc": "6639:43:12",
													"nodeType": "YulBlock",
													"src": "6639:43:12",
													"statements": [
														{
															"nativeSrc": "6649:27:12",
															"nodeType": "YulAssignment",
															"src": "6649:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6664:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6664:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6671:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6671:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6660:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6660:3:12"
																},
																"nativeSrc": "6660:16:12",
																"nodeType": "YulFunctionCall",
																"src": "6660:16:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6649:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "6649:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6596:86:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6621:5:12",
														"nodeType": "YulTypedName",
														"src": "6621:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6631:7:12",
														"nodeType": "YulTypedName",
														"src": "6631:7:12",
														"type": ""
													}
												],
												"src": "6596:86:12"
											},
											{
												"body": {
													"nativeSrc": "6749:51:12",
													"nodeType": "YulBlock",
													"src": "6749:51:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6766:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6766:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6787:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6787:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6771:15:12",
																			"nodeType": "YulIdentifier",
																			"src": "6771:15:12"
																		},
																		"nativeSrc": "6771:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6771:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6759:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6759:6:12"
																},
																"nativeSrc": "6759:35:12",
																"nodeType": "YulFunctionCall",
																"src": "6759:35:12"
															},
															"nativeSrc": "6759:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "6759:35:12"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6688:112:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6737:5:12",
														"nodeType": "YulTypedName",
														"src": "6737:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6744:3:12",
														"nodeType": "YulTypedName",
														"src": "6744:3:12",
														"type": ""
													}
												],
												"src": "6688:112:12"
											},
											{
												"body": {
													"nativeSrc": "6900:120:12",
													"nodeType": "YulBlock",
													"src": "6900:120:12",
													"statements": [
														{
															"nativeSrc": "6910:26:12",
															"nodeType": "YulAssignment",
															"src": "6910:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6922:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6922:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6933:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6933:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6918:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6918:3:12"
																},
																"nativeSrc": "6918:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6918:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6910:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6910:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6986:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6986:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6999:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6999:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7010:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7010:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6995:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6995:3:12"
																		},
																		"nativeSrc": "6995:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6995:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6946:39:12",
																	"nodeType": "YulIdentifier",
																	"src": "6946:39:12"
																},
																"nativeSrc": "6946:67:12",
																"nodeType": "YulFunctionCall",
																"src": "6946:67:12"
															},
															"nativeSrc": "6946:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "6946:67:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6806:214:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6872:9:12",
														"nodeType": "YulTypedName",
														"src": "6872:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6884:6:12",
														"nodeType": "YulTypedName",
														"src": "6884:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6895:4:12",
														"nodeType": "YulTypedName",
														"src": "6895:4:12",
														"type": ""
													}
												],
												"src": "6806:214:12"
											},
											{
												"body": {
													"nativeSrc": "7092:263:12",
													"nodeType": "YulBlock",
													"src": "7092:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7138:83:12",
																"nodeType": "YulBlock",
																"src": "7138:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7140:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7140:77:12"
																			},
																			"nativeSrc": "7140:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7140:79:12"
																		},
																		"nativeSrc": "7140:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7140:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7113:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7113:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7122:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7122:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7109:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7109:3:12"
																		},
																		"nativeSrc": "7109:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7109:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7134:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7134:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7105:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7105:3:12"
																},
																"nativeSrc": "7105:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7105:32:12"
															},
															"nativeSrc": "7102:119:12",
															"nodeType": "YulIf",
															"src": "7102:119:12"
														},
														{
															"nativeSrc": "7231:117:12",
															"nodeType": "YulBlock",
															"src": "7231:117:12",
															"statements": [
																{
																	"nativeSrc": "7246:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7246:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7260:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7260:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7250:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7250:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7275:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7275:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7310:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7310:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7321:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7321:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7306:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7306:3:12"
																				},
																				"nativeSrc": "7306:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7306:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7330:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7330:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7285:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7285:20:12"
																		},
																		"nativeSrc": "7285:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7285:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7275:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7275:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7026:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7062:9:12",
														"nodeType": "YulTypedName",
														"src": "7062:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7073:7:12",
														"nodeType": "YulTypedName",
														"src": "7073:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7085:6:12",
														"nodeType": "YulTypedName",
														"src": "7085:6:12",
														"type": ""
													}
												],
												"src": "7026:329:12"
											},
											{
												"body": {
													"nativeSrc": "7444:391:12",
													"nodeType": "YulBlock",
													"src": "7444:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7490:83:12",
																"nodeType": "YulBlock",
																"src": "7490:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7492:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7492:77:12"
																			},
																			"nativeSrc": "7492:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7492:79:12"
																		},
																		"nativeSrc": "7492:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7492:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7465:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7465:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7474:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7474:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7461:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7461:3:12"
																		},
																		"nativeSrc": "7461:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7461:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7486:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7486:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7457:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7457:3:12"
																},
																"nativeSrc": "7457:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7457:32:12"
															},
															"nativeSrc": "7454:119:12",
															"nodeType": "YulIf",
															"src": "7454:119:12"
														},
														{
															"nativeSrc": "7583:117:12",
															"nodeType": "YulBlock",
															"src": "7583:117:12",
															"statements": [
																{
																	"nativeSrc": "7598:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7598:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7612:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7612:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7602:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7602:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7627:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7627:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7662:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7662:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7673:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7673:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7658:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7658:3:12"
																				},
																				"nativeSrc": "7658:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7658:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7682:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7682:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7637:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7637:20:12"
																		},
																		"nativeSrc": "7637:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7637:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7627:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7627:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7710:118:12",
															"nodeType": "YulBlock",
															"src": "7710:118:12",
															"statements": [
																{
																	"nativeSrc": "7725:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7725:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7739:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7739:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7729:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7729:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7755:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7755:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7790:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7790:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7801:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7801:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7786:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7786:3:12"
																				},
																				"nativeSrc": "7786:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7786:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7810:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7810:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7765:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7765:20:12"
																		},
																		"nativeSrc": "7765:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7765:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7755:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7755:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7361:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7406:9:12",
														"nodeType": "YulTypedName",
														"src": "7406:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7417:7:12",
														"nodeType": "YulTypedName",
														"src": "7417:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7429:6:12",
														"nodeType": "YulTypedName",
														"src": "7429:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7437:6:12",
														"nodeType": "YulTypedName",
														"src": "7437:6:12",
														"type": ""
													}
												],
												"src": "7361:474:12"
											},
											{
												"body": {
													"nativeSrc": "7869:152:12",
													"nodeType": "YulBlock",
													"src": "7869:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7886:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7886:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7889:77:12",
																		"nodeType": "YulLiteral",
																		"src": "7889:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7879:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7879:6:12"
																},
																"nativeSrc": "7879:88:12",
																"nodeType": "YulFunctionCall",
																"src": "7879:88:12"
															},
															"nativeSrc": "7879:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "7879:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7983:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7983:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7986:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7986:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7976:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7976:6:12"
																},
																"nativeSrc": "7976:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7976:15:12"
															},
															"nativeSrc": "7976:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "7976:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8007:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8007:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8010:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8010:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8000:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8000:6:12"
																},
																"nativeSrc": "8000:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8000:15:12"
															},
															"nativeSrc": "8000:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8000:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7841:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "7841:180:12"
											},
											{
												"body": {
													"nativeSrc": "8078:269:12",
													"nodeType": "YulBlock",
													"src": "8078:269:12",
													"statements": [
														{
															"nativeSrc": "8088:22:12",
															"nodeType": "YulAssignment",
															"src": "8088:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8102:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8102:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8108:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8108:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8098:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8098:3:12"
																},
																"nativeSrc": "8098:12:12",
																"nodeType": "YulFunctionCall",
																"src": "8098:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8088:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8088:6:12"
																}
															]
														},
														{
															"nativeSrc": "8119:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8119:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8149:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8149:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8155:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8155:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8145:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8145:3:12"
																},
																"nativeSrc": "8145:12:12",
																"nodeType": "YulFunctionCall",
																"src": "8145:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8123:18:12",
																	"nodeType": "YulTypedName",
																	"src": "8123:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8196:51:12",
																"nodeType": "YulBlock",
																"src": "8196:51:12",
																"statements": [
																	{
																		"nativeSrc": "8210:27:12",
																		"nodeType": "YulAssignment",
																		"src": "8210:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8224:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "8224:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8232:4:12",
																					"nodeType": "YulLiteral",
																					"src": "8232:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8220:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8220:3:12"
																			},
																			"nativeSrc": "8220:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8220:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8210:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8210:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8176:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "8176:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8169:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8169:6:12"
																},
																"nativeSrc": "8169:26:12",
																"nodeType": "YulFunctionCall",
																"src": "8169:26:12"
															},
															"nativeSrc": "8166:81:12",
															"nodeType": "YulIf",
															"src": "8166:81:12"
														},
														{
															"body": {
																"nativeSrc": "8299:42:12",
																"nodeType": "YulBlock",
																"src": "8299:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8313:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "8313:16:12"
																			},
																			"nativeSrc": "8313:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8313:18:12"
																		},
																		"nativeSrc": "8313:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8313:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8263:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "8263:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8286:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8286:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8294:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8294:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8283:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "8283:2:12"
																		},
																		"nativeSrc": "8283:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8283:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8260:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8260:2:12"
																},
																"nativeSrc": "8260:38:12",
																"nodeType": "YulFunctionCall",
																"src": "8260:38:12"
															},
															"nativeSrc": "8257:84:12",
															"nodeType": "YulIf",
															"src": "8257:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8027:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8062:4:12",
														"nodeType": "YulTypedName",
														"src": "8062:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8071:6:12",
														"nodeType": "YulTypedName",
														"src": "8071:6:12",
														"type": ""
													}
												],
												"src": "8027:320:12"
											},
											{
												"body": {
													"nativeSrc": "8418:53:12",
													"nodeType": "YulBlock",
													"src": "8418:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8435:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8435:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8458:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "8458:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8440:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "8440:17:12"
																		},
																		"nativeSrc": "8440:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8440:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8428:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8428:6:12"
																},
																"nativeSrc": "8428:37:12",
																"nodeType": "YulFunctionCall",
																"src": "8428:37:12"
															},
															"nativeSrc": "8428:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "8428:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8353:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8406:5:12",
														"nodeType": "YulTypedName",
														"src": "8406:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8413:3:12",
														"nodeType": "YulTypedName",
														"src": "8413:3:12",
														"type": ""
													}
												],
												"src": "8353:118:12"
											},
											{
												"body": {
													"nativeSrc": "8631:288:12",
													"nodeType": "YulBlock",
													"src": "8631:288:12",
													"statements": [
														{
															"nativeSrc": "8641:26:12",
															"nodeType": "YulAssignment",
															"src": "8641:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8653:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8653:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8664:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8664:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8649:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8649:3:12"
																},
																"nativeSrc": "8649:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8649:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8641:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8641:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8721:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8721:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8734:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8734:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8745:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8745:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8730:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8730:3:12"
																		},
																		"nativeSrc": "8730:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8730:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8677:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "8677:43:12"
																},
																"nativeSrc": "8677:71:12",
																"nodeType": "YulFunctionCall",
																"src": "8677:71:12"
															},
															"nativeSrc": "8677:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "8677:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8802:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8802:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8815:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8815:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8826:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8826:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8811:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8811:3:12"
																		},
																		"nativeSrc": "8811:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8811:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8758:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "8758:43:12"
																},
																"nativeSrc": "8758:72:12",
																"nodeType": "YulFunctionCall",
																"src": "8758:72:12"
															},
															"nativeSrc": "8758:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "8758:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8884:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8884:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8897:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8897:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8908:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8908:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8893:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8893:3:12"
																		},
																		"nativeSrc": "8893:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8893:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8840:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "8840:43:12"
																},
																"nativeSrc": "8840:72:12",
																"nodeType": "YulFunctionCall",
																"src": "8840:72:12"
															},
															"nativeSrc": "8840:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "8840:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8477:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8587:9:12",
														"nodeType": "YulTypedName",
														"src": "8587:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8599:6:12",
														"nodeType": "YulTypedName",
														"src": "8599:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8607:6:12",
														"nodeType": "YulTypedName",
														"src": "8607:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8615:6:12",
														"nodeType": "YulTypedName",
														"src": "8615:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8626:4:12",
														"nodeType": "YulTypedName",
														"src": "8626:4:12",
														"type": ""
													}
												],
												"src": "8477:442:12"
											},
											{
												"body": {
													"nativeSrc": "9023:124:12",
													"nodeType": "YulBlock",
													"src": "9023:124:12",
													"statements": [
														{
															"nativeSrc": "9033:26:12",
															"nodeType": "YulAssignment",
															"src": "9033:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9045:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9045:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9056:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9056:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9041:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9041:3:12"
																},
																"nativeSrc": "9041:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9041:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9033:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9033:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9113:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9113:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9126:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9126:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9137:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9137:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9122:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9122:3:12"
																		},
																		"nativeSrc": "9122:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9122:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9069:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9069:43:12"
																},
																"nativeSrc": "9069:71:12",
																"nodeType": "YulFunctionCall",
																"src": "9069:71:12"
															},
															"nativeSrc": "9069:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "9069:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8925:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8995:9:12",
														"nodeType": "YulTypedName",
														"src": "8995:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9007:6:12",
														"nodeType": "YulTypedName",
														"src": "9007:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9018:4:12",
														"nodeType": "YulTypedName",
														"src": "9018:4:12",
														"type": ""
													}
												],
												"src": "8925:222:12"
											},
											{
												"body": {
													"nativeSrc": "9259:75:12",
													"nodeType": "YulBlock",
													"src": "9259:75:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9281:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9281:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9289:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9289:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9277:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9277:3:12"
																		},
																		"nativeSrc": "9277:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9277:14:12"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "9293:33:12",
																		"nodeType": "YulLiteral",
																		"src": "9293:33:12",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9270:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9270:6:12"
																},
																"nativeSrc": "9270:57:12",
																"nodeType": "YulFunctionCall",
																"src": "9270:57:12"
															},
															"nativeSrc": "9270:57:12",
															"nodeType": "YulExpressionStatement",
															"src": "9270:57:12"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "9153:181:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9251:6:12",
														"nodeType": "YulTypedName",
														"src": "9251:6:12",
														"type": ""
													}
												],
												"src": "9153:181:12"
											},
											{
												"body": {
													"nativeSrc": "9486:220:12",
													"nodeType": "YulBlock",
													"src": "9486:220:12",
													"statements": [
														{
															"nativeSrc": "9496:74:12",
															"nodeType": "YulAssignment",
															"src": "9496:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9562:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9562:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9567:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9567:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9503:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "9503:58:12"
																},
																"nativeSrc": "9503:67:12",
																"nodeType": "YulFunctionCall",
																"src": "9503:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9496:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9496:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9668:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9668:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "9579:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "9579:88:12"
																},
																"nativeSrc": "9579:93:12",
																"nodeType": "YulFunctionCall",
																"src": "9579:93:12"
															},
															"nativeSrc": "9579:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "9579:93:12"
														},
														{
															"nativeSrc": "9681:19:12",
															"nodeType": "YulAssignment",
															"src": "9681:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9692:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9692:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9697:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9697:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9688:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9688:3:12"
																},
																"nativeSrc": "9688:12:12",
																"nodeType": "YulFunctionCall",
																"src": "9688:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9681:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9681:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9340:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9474:3:12",
														"nodeType": "YulTypedName",
														"src": "9474:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9482:3:12",
														"nodeType": "YulTypedName",
														"src": "9482:3:12",
														"type": ""
													}
												],
												"src": "9340:366:12"
											},
											{
												"body": {
													"nativeSrc": "9883:248:12",
													"nodeType": "YulBlock",
													"src": "9883:248:12",
													"statements": [
														{
															"nativeSrc": "9893:26:12",
															"nodeType": "YulAssignment",
															"src": "9893:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9905:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9905:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9916:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9916:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9901:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9901:3:12"
																},
																"nativeSrc": "9901:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9901:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9893:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9893:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9940:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9940:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9951:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9951:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9936:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9936:3:12"
																		},
																		"nativeSrc": "9936:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9936:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9959:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "9959:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9965:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9965:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9955:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9955:3:12"
																		},
																		"nativeSrc": "9955:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9955:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9929:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9929:6:12"
																},
																"nativeSrc": "9929:47:12",
																"nodeType": "YulFunctionCall",
																"src": "9929:47:12"
															},
															"nativeSrc": "9929:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "9929:47:12"
														},
														{
															"nativeSrc": "9985:139:12",
															"nodeType": "YulAssignment",
															"src": "9985:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10119:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10119:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9993:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "9993:124:12"
																},
																"nativeSrc": "9993:131:12",
																"nodeType": "YulFunctionCall",
																"src": "9993:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9985:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9985:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9712:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9863:9:12",
														"nodeType": "YulTypedName",
														"src": "9863:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9878:4:12",
														"nodeType": "YulTypedName",
														"src": "9878:4:12",
														"type": ""
													}
												],
												"src": "9712:419:12"
											},
											{
												"body": {
													"nativeSrc": "10165:152:12",
													"nodeType": "YulBlock",
													"src": "10165:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10182:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10182:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10185:77:12",
																		"nodeType": "YulLiteral",
																		"src": "10185:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10175:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10175:6:12"
																},
																"nativeSrc": "10175:88:12",
																"nodeType": "YulFunctionCall",
																"src": "10175:88:12"
															},
															"nativeSrc": "10175:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "10175:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10279:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10279:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10282:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10282:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10272:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10272:6:12"
																},
																"nativeSrc": "10272:15:12",
																"nodeType": "YulFunctionCall",
																"src": "10272:15:12"
															},
															"nativeSrc": "10272:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "10272:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10303:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10303:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10306:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10306:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10296:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10296:6:12"
																},
																"nativeSrc": "10296:15:12",
																"nodeType": "YulFunctionCall",
																"src": "10296:15:12"
															},
															"nativeSrc": "10296:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "10296:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10137:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "10137:180:12"
											},
											{
												"body": {
													"nativeSrc": "10367:147:12",
													"nodeType": "YulBlock",
													"src": "10367:147:12",
													"statements": [
														{
															"nativeSrc": "10377:25:12",
															"nodeType": "YulAssignment",
															"src": "10377:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10400:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10400:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10382:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "10382:17:12"
																},
																"nativeSrc": "10382:20:12",
																"nodeType": "YulFunctionCall",
																"src": "10382:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10377:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "10377:1:12"
																}
															]
														},
														{
															"nativeSrc": "10411:25:12",
															"nodeType": "YulAssignment",
															"src": "10411:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10434:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10434:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10416:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "10416:17:12"
																},
																"nativeSrc": "10416:20:12",
																"nodeType": "YulFunctionCall",
																"src": "10416:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10411:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "10411:1:12"
																}
															]
														},
														{
															"nativeSrc": "10445:16:12",
															"nodeType": "YulAssignment",
															"src": "10445:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10456:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10456:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10459:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10459:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10452:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10452:3:12"
																},
																"nativeSrc": "10452:9:12",
																"nodeType": "YulFunctionCall",
																"src": "10452:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10445:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10445:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10485:22:12",
																"nodeType": "YulBlock",
																"src": "10485:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10487:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "10487:16:12"
																			},
																			"nativeSrc": "10487:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10487:18:12"
																		},
																		"nativeSrc": "10487:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10487:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10477:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10477:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10480:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10480:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10474:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "10474:2:12"
																},
																"nativeSrc": "10474:10:12",
																"nodeType": "YulFunctionCall",
																"src": "10474:10:12"
															},
															"nativeSrc": "10471:36:12",
															"nodeType": "YulIf",
															"src": "10471:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10323:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10354:1:12",
														"nodeType": "YulTypedName",
														"src": "10354:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10357:1:12",
														"nodeType": "YulTypedName",
														"src": "10357:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10363:3:12",
														"nodeType": "YulTypedName",
														"src": "10363:3:12",
														"type": ""
													}
												],
												"src": "10323:191:12"
											},
											{
												"body": {
													"nativeSrc": "10646:206:12",
													"nodeType": "YulBlock",
													"src": "10646:206:12",
													"statements": [
														{
															"nativeSrc": "10656:26:12",
															"nodeType": "YulAssignment",
															"src": "10656:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10668:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10668:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10679:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10679:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10664:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10664:3:12"
																},
																"nativeSrc": "10664:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10664:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10656:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10656:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10736:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10736:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10749:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10749:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10760:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10760:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10745:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10745:3:12"
																		},
																		"nativeSrc": "10745:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10745:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10692:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10692:43:12"
																},
																"nativeSrc": "10692:71:12",
																"nodeType": "YulFunctionCall",
																"src": "10692:71:12"
															},
															"nativeSrc": "10692:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "10692:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10817:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10817:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10830:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10830:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10841:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10841:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10826:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10826:3:12"
																		},
																		"nativeSrc": "10826:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10826:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "10773:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10773:43:12"
																},
																"nativeSrc": "10773:72:12",
																"nodeType": "YulFunctionCall",
																"src": "10773:72:12"
															},
															"nativeSrc": "10773:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "10773:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "10520:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10610:9:12",
														"nodeType": "YulTypedName",
														"src": "10610:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10622:6:12",
														"nodeType": "YulTypedName",
														"src": "10622:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10630:6:12",
														"nodeType": "YulTypedName",
														"src": "10630:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10641:4:12",
														"nodeType": "YulTypedName",
														"src": "10641:4:12",
														"type": ""
													}
												],
												"src": "10520:332:12"
											},
											{
												"body": {
													"nativeSrc": "10964:60:12",
													"nodeType": "YulBlock",
													"src": "10964:60:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10986:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10986:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10994:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10994:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10982:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10982:3:12"
																		},
																		"nativeSrc": "10982:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10982:14:12"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "10998:18:12",
																		"nodeType": "YulLiteral",
																		"src": "10998:18:12",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10975:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10975:6:12"
																},
																"nativeSrc": "10975:42:12",
																"nodeType": "YulFunctionCall",
																"src": "10975:42:12"
															},
															"nativeSrc": "10975:42:12",
															"nodeType": "YulExpressionStatement",
															"src": "10975:42:12"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "10858:166:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10956:6:12",
														"nodeType": "YulTypedName",
														"src": "10956:6:12",
														"type": ""
													}
												],
												"src": "10858:166:12"
											},
											{
												"body": {
													"nativeSrc": "11176:220:12",
													"nodeType": "YulBlock",
													"src": "11176:220:12",
													"statements": [
														{
															"nativeSrc": "11186:74:12",
															"nodeType": "YulAssignment",
															"src": "11186:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11252:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11252:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11257:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11257:2:12",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11193:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "11193:58:12"
																},
																"nativeSrc": "11193:67:12",
																"nodeType": "YulFunctionCall",
																"src": "11193:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11186:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11186:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11358:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11358:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "11269:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "11269:88:12"
																},
																"nativeSrc": "11269:93:12",
																"nodeType": "YulFunctionCall",
																"src": "11269:93:12"
															},
															"nativeSrc": "11269:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "11269:93:12"
														},
														{
															"nativeSrc": "11371:19:12",
															"nodeType": "YulAssignment",
															"src": "11371:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11382:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11382:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11387:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11387:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11378:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11378:3:12"
																},
																"nativeSrc": "11378:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11378:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11371:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11371:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11030:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11164:3:12",
														"nodeType": "YulTypedName",
														"src": "11164:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11172:3:12",
														"nodeType": "YulTypedName",
														"src": "11172:3:12",
														"type": ""
													}
												],
												"src": "11030:366:12"
											},
											{
												"body": {
													"nativeSrc": "11573:248:12",
													"nodeType": "YulBlock",
													"src": "11573:248:12",
													"statements": [
														{
															"nativeSrc": "11583:26:12",
															"nodeType": "YulAssignment",
															"src": "11583:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11595:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11595:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11606:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11606:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11591:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11591:3:12"
																},
																"nativeSrc": "11591:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11591:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11583:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11583:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11630:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11630:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11641:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11641:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11626:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11626:3:12"
																		},
																		"nativeSrc": "11626:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11626:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11649:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "11649:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11655:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11655:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11645:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11645:3:12"
																		},
																		"nativeSrc": "11645:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11645:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11619:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11619:6:12"
																},
																"nativeSrc": "11619:47:12",
																"nodeType": "YulFunctionCall",
																"src": "11619:47:12"
															},
															"nativeSrc": "11619:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "11619:47:12"
														},
														{
															"nativeSrc": "11675:139:12",
															"nodeType": "YulAssignment",
															"src": "11675:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11809:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11809:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11683:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "11683:124:12"
																},
																"nativeSrc": "11683:131:12",
																"nodeType": "YulFunctionCall",
																"src": "11683:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11675:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11675:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11402:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11553:9:12",
														"nodeType": "YulTypedName",
														"src": "11553:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11568:4:12",
														"nodeType": "YulTypedName",
														"src": "11568:4:12",
														"type": ""
													}
												],
												"src": "11402:419:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1400": [
									{
										"length": 32,
										"start": 1479
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610135575f3560e01c80635c975abb116100b6578063a217fddf1161007a578063a217fddf1461034d578063a9059cbb1461036b578063d53913931461039b578063d547741f146103b9578063dd62ed3e146103d5578063e63ab1e91461040557610135565b80635c975abb146102a757806370a08231146102c55780638456cb59146102f557806391d14854146102ff57806395d89b411461032f57610135565b8063248a9ca3116100fd578063248a9ca3146102055780632f2ff15d14610235578063313ce5671461025157806336568abe1461026f57806340c10f191461028b57610135565b806301ffc9a71461013957806306fdde0314610169578063095ea7b31461018757806318160ddd146101b757806323b872dd146101d5575b5f5ffd5b610153600480360381019061014e9190611348565b610423565b604051610160919061138d565b60405180910390f35b61017161049c565b60405161017e9190611416565b60405180910390f35b6101a1600480360381019061019c91906114c3565b61052c565b6040516101ae919061138d565b60405180910390f35b6101bf61054e565b6040516101cc9190611510565b60405180910390f35b6101ef60048036038101906101ea9190611529565b610557565b6040516101fc919061138d565b60405180910390f35b61021f600480360381019061021a91906115ac565b610585565b60405161022c91906115e6565b60405180910390f35b61024f600480360381019061024a91906115ff565b6105a2565b005b6102596105c4565b6040516102669190611658565b60405180910390f35b610289600480360381019061028491906115ff565b6105eb565b005b6102a560048036038101906102a091906114c3565b610666565b005b6102af6106af565b6040516102bc919061138d565b60405180910390f35b6102df60048036038101906102da9190611671565b6106c4565b6040516102ec9190611510565b60405180910390f35b6102fd610709565b005b610319600480360381019061031491906115ff565b61073e565b604051610326919061138d565b60405180910390f35b6103376107a2565b6040516103449190611416565b60405180910390f35b610355610832565b60405161036291906115e6565b60405180910390f35b610385600480360381019061038091906114c3565b610838565b604051610392919061138d565b60405180910390f35b6103a361085a565b6040516103b091906115e6565b60405180910390f35b6103d360048036038101906103ce91906115ff565b61087e565b005b6103ef60048036038101906103ea919061169c565b6108a0565b6040516103fc9190611510565b60405180910390f35b61040d610922565b60405161041a91906115e6565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610495575061049482610946565b5b9050919050565b6060600380546104ab90611707565b80601f01602080910402602001604051908101604052809291908181526020018280546104d790611707565b80156105225780601f106104f957610100808354040283529160200191610522565b820191905f5260205f20905b81548152906001019060200180831161050557829003601f168201915b5050505050905090565b5f5f6105366109af565b90506105438185856109b6565b600191505092915050565b5f600254905090565b5f5f6105616109af565b905061056e8582856109c8565b610579858585610a5a565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b6105ab82610585565b6105b481610b4a565b6105be8383610b5e565b50505050565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b6105f36109af565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610657576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106618282610c48565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661069081610b4a565b610698610d32565b6106a28383610d81565b6106aa610e00565b505050565b5f60075f9054906101000a900460ff16905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61073381610b4a565b61073b610e0a565b50565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b6060600480546107b190611707565b80601f01602080910402602001604051908101604052809291908181526020018280546107dd90611707565b80156108285780601f106107ff57610100808354040283529160200191610828565b820191905f5260205f20905b81548152906001019060200180831161080b57829003601f168201915b5050505050905090565b5f5f1b81565b5f5f6108426109af565b905061084f818585610a5a565b600191505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61088782610585565b61089081610b4a565b61089a8383610c48565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b6109c38383836001610e6c565b505050565b5f6109d384846108a0565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a545781811015610a45578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a3c93929190611746565b60405180910390fd5b610a5384848484035f610e6c565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610aca575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610ac1919061177b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b3a575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b31919061177b565b60405180910390fd5b610b4583838361103b565b505050565b610b5b81610b566109af565b611254565b50565b5f610b69838361073e565b610c3e57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610bdb6109af565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610c42565b5f90505b92915050565b5f610c53838361073e565b15610d28575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610cc56109af565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610d2c565b5f90505b92915050565b600260065403610d77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6e906117de565b60405180910390fd5b6002600681905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610df1575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610de8919061177b565b60405180910390fd5b610dfc5f838361103b565b5050565b6001600681905550565b610e126112a5565b600160075f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e556109af565b604051610e62919061177b565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610edc575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610ed3919061177b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f4c575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610f43919061177b565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611035578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161102c9190611510565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361108b578060025f82825461107f9190611829565b92505081905550611159565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611114578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161110b93929190611746565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111a0578060025f82825403925050819055506111ea565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516112479190611510565b60405180910390a3505050565b61125e828261073e565b6112a15780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161129892919061185c565b60405180910390fd5b5050565b6112ad6106af565b156112ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e4906118cd565b60405180910390fd5b565b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611327816112f3565b8114611331575f5ffd5b50565b5f813590506113428161131e565b92915050565b5f6020828403121561135d5761135c6112ef565b5b5f61136a84828501611334565b91505092915050565b5f8115159050919050565b61138781611373565b82525050565b5f6020820190506113a05f83018461137e565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6113e8826113a6565b6113f281856113b0565b93506114028185602086016113c0565b61140b816113ce565b840191505092915050565b5f6020820190508181035f83015261142e81846113de565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61145f82611436565b9050919050565b61146f81611455565b8114611479575f5ffd5b50565b5f8135905061148a81611466565b92915050565b5f819050919050565b6114a281611490565b81146114ac575f5ffd5b50565b5f813590506114bd81611499565b92915050565b5f5f604083850312156114d9576114d86112ef565b5b5f6114e68582860161147c565b92505060206114f7858286016114af565b9150509250929050565b61150a81611490565b82525050565b5f6020820190506115235f830184611501565b92915050565b5f5f5f606084860312156115405761153f6112ef565b5b5f61154d8682870161147c565b935050602061155e8682870161147c565b925050604061156f868287016114af565b9150509250925092565b5f819050919050565b61158b81611579565b8114611595575f5ffd5b50565b5f813590506115a681611582565b92915050565b5f602082840312156115c1576115c06112ef565b5b5f6115ce84828501611598565b91505092915050565b6115e081611579565b82525050565b5f6020820190506115f95f8301846115d7565b92915050565b5f5f60408385031215611615576116146112ef565b5b5f61162285828601611598565b92505060206116338582860161147c565b9150509250929050565b5f60ff82169050919050565b6116528161163d565b82525050565b5f60208201905061166b5f830184611649565b92915050565b5f60208284031215611686576116856112ef565b5b5f6116938482850161147c565b91505092915050565b5f5f604083850312156116b2576116b16112ef565b5b5f6116bf8582860161147c565b92505060206116d08582860161147c565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061171e57607f821691505b602082108103611731576117306116da565b5b50919050565b61174081611455565b82525050565b5f6060820190506117595f830186611737565b6117666020830185611501565b6117736040830184611501565b949350505050565b5f60208201905061178e5f830184611737565b92915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6117c8601f836113b0565b91506117d382611794565b602082019050919050565b5f6020820190508181035f8301526117f5816117bc565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61183382611490565b915061183e83611490565b9250828201905080821115611856576118556117fc565b5b92915050565b5f60408201905061186f5f830185611737565b61187c60208301846115d7565b9392505050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6118b76010836113b0565b91506118c282611883565b602082019050919050565b5f6020820190508181035f8301526118e4816118ab565b905091905056fea2646970667358221220d1ca6985cec12698f635d4d371d59afa31a28d77cc1090f7cdec8497581f94e464736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x405 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x32F JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x28B JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D5 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x138D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH2 0x49C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x14C3 JUMP JUMPDEST PUSH2 0x52C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x138D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x54E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x1510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x1529 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x138D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x15AC JUMP JUMPDEST PUSH2 0x585 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0x5A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x259 PUSH2 0x5C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x289 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0x5EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x14C3 JUMP JUMPDEST PUSH2 0x666 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AF PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x138D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH2 0x709 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x319 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0x73E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x138D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x337 PUSH2 0x7A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x355 PUSH2 0x832 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x385 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x14C3 JUMP JUMPDEST PUSH2 0x838 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x138D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A3 PUSH2 0x85A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0x87E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH2 0x8A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x1510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40D PUSH2 0x922 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41A SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x495 JUMPI POP PUSH2 0x494 DUP3 PUSH2 0x946 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4AB SWAP1 PUSH2 0x1707 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4D7 SWAP1 PUSH2 0x1707 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x522 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x522 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x505 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x536 PUSH2 0x9AF JUMP JUMPDEST SWAP1 POP PUSH2 0x543 DUP2 DUP6 DUP6 PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x561 PUSH2 0x9AF JUMP JUMPDEST SWAP1 POP PUSH2 0x56E DUP6 DUP3 DUP6 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x579 DUP6 DUP6 DUP6 PUSH2 0xA5A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5AB DUP3 PUSH2 0x585 JUMP JUMPDEST PUSH2 0x5B4 DUP2 PUSH2 0xB4A JUMP JUMPDEST PUSH2 0x5BE DUP4 DUP4 PUSH2 0xB5E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5F3 PUSH2 0x9AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x657 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x661 DUP3 DUP3 PUSH2 0xC48 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x690 DUP2 PUSH2 0xB4A JUMP JUMPDEST PUSH2 0x698 PUSH2 0xD32 JUMP JUMPDEST PUSH2 0x6A2 DUP4 DUP4 PUSH2 0xD81 JUMP JUMPDEST PUSH2 0x6AA PUSH2 0xE00 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x733 DUP2 PUSH2 0xB4A JUMP JUMPDEST PUSH2 0x73B PUSH2 0xE0A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x7B1 SWAP1 PUSH2 0x1707 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7DD SWAP1 PUSH2 0x1707 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x828 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7FF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x828 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x80B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x842 PUSH2 0x9AF JUMP JUMPDEST SWAP1 POP PUSH2 0x84F DUP2 DUP6 DUP6 PUSH2 0xA5A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x887 DUP3 PUSH2 0x585 JUMP JUMPDEST PUSH2 0x890 DUP2 PUSH2 0xB4A JUMP JUMPDEST PUSH2 0x89A DUP4 DUP4 PUSH2 0xC48 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9C3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE6C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9D3 DUP5 DUP5 PUSH2 0x8A0 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xA54 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA45 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1746 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA53 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE6C JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xACA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC1 SWAP2 SWAP1 PUSH2 0x177B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB3A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB31 SWAP2 SWAP1 PUSH2 0x177B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB45 DUP4 DUP4 DUP4 PUSH2 0x103B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB5B DUP2 PUSH2 0xB56 PUSH2 0x9AF JUMP JUMPDEST PUSH2 0x1254 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xB69 DUP4 DUP4 PUSH2 0x73E JUMP JUMPDEST PUSH2 0xC3E JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBDB PUSH2 0x9AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xC42 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC53 DUP4 DUP4 PUSH2 0x73E JUMP JUMPDEST ISZERO PUSH2 0xD28 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xCC5 PUSH2 0x9AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xD2C JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xD77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6E SWAP1 PUSH2 0x17DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDF1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE8 SWAP2 SWAP1 PUSH2 0x177B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDFC PUSH0 DUP4 DUP4 PUSH2 0x103B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xE12 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xE55 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE62 SWAP2 SWAP1 PUSH2 0x177B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEDC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED3 SWAP2 SWAP1 PUSH2 0x177B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF4C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF43 SWAP2 SWAP1 PUSH2 0x177B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1035 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x102C SWAP2 SWAP1 PUSH2 0x1510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x108B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x107F SWAP2 SWAP1 PUSH2 0x1829 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1159 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1114 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1746 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11A0 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11EA JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1247 SWAP2 SWAP1 PUSH2 0x1510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x125E DUP3 DUP3 PUSH2 0x73E JUMP JUMPDEST PUSH2 0x12A1 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1298 SWAP3 SWAP2 SWAP1 PUSH2 0x185C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x12AD PUSH2 0x6AF JUMP JUMPDEST ISZERO PUSH2 0x12ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E4 SWAP1 PUSH2 0x18CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1327 DUP2 PUSH2 0x12F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1331 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1342 DUP2 PUSH2 0x131E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x135D JUMPI PUSH2 0x135C PUSH2 0x12EF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x136A DUP5 DUP3 DUP6 ADD PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1387 DUP2 PUSH2 0x1373 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13A0 PUSH0 DUP4 ADD DUP5 PUSH2 0x137E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13E8 DUP3 PUSH2 0x13A6 JUMP JUMPDEST PUSH2 0x13F2 DUP2 DUP6 PUSH2 0x13B0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1402 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13C0 JUMP JUMPDEST PUSH2 0x140B DUP2 PUSH2 0x13CE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x142E DUP2 DUP5 PUSH2 0x13DE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x145F DUP3 PUSH2 0x1436 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x146F DUP2 PUSH2 0x1455 JUMP JUMPDEST DUP2 EQ PUSH2 0x1479 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x148A DUP2 PUSH2 0x1466 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14A2 DUP2 PUSH2 0x1490 JUMP JUMPDEST DUP2 EQ PUSH2 0x14AC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14BD DUP2 PUSH2 0x1499 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14D9 JUMPI PUSH2 0x14D8 PUSH2 0x12EF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14E6 DUP6 DUP3 DUP7 ADD PUSH2 0x147C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14F7 DUP6 DUP3 DUP7 ADD PUSH2 0x14AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x150A DUP2 PUSH2 0x1490 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1523 PUSH0 DUP4 ADD DUP5 PUSH2 0x1501 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1540 JUMPI PUSH2 0x153F PUSH2 0x12EF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x154D DUP7 DUP3 DUP8 ADD PUSH2 0x147C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x155E DUP7 DUP3 DUP8 ADD PUSH2 0x147C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x156F DUP7 DUP3 DUP8 ADD PUSH2 0x14AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x158B DUP2 PUSH2 0x1579 JUMP JUMPDEST DUP2 EQ PUSH2 0x1595 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15A6 DUP2 PUSH2 0x1582 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15C1 JUMPI PUSH2 0x15C0 PUSH2 0x12EF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15CE DUP5 DUP3 DUP6 ADD PUSH2 0x1598 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15E0 DUP2 PUSH2 0x1579 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15F9 PUSH0 DUP4 ADD DUP5 PUSH2 0x15D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1615 JUMPI PUSH2 0x1614 PUSH2 0x12EF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1622 DUP6 DUP3 DUP7 ADD PUSH2 0x1598 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1633 DUP6 DUP3 DUP7 ADD PUSH2 0x147C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1652 DUP2 PUSH2 0x163D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x166B PUSH0 DUP4 ADD DUP5 PUSH2 0x1649 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1686 JUMPI PUSH2 0x1685 PUSH2 0x12EF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1693 DUP5 DUP3 DUP6 ADD PUSH2 0x147C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16B2 JUMPI PUSH2 0x16B1 PUSH2 0x12EF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16BF DUP6 DUP3 DUP7 ADD PUSH2 0x147C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16D0 DUP6 DUP3 DUP7 ADD PUSH2 0x147C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x171E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1731 JUMPI PUSH2 0x1730 PUSH2 0x16DA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1740 DUP2 PUSH2 0x1455 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1759 PUSH0 DUP4 ADD DUP7 PUSH2 0x1737 JUMP JUMPDEST PUSH2 0x1766 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x1773 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1501 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x178E PUSH0 DUP4 ADD DUP5 PUSH2 0x1737 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17C8 PUSH1 0x1F DUP4 PUSH2 0x13B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x17D3 DUP3 PUSH2 0x1794 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17F5 DUP2 PUSH2 0x17BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1833 DUP3 PUSH2 0x1490 JUMP JUMPDEST SWAP2 POP PUSH2 0x183E DUP4 PUSH2 0x1490 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1856 JUMPI PUSH2 0x1855 PUSH2 0x17FC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x186F PUSH0 DUP4 ADD DUP6 PUSH2 0x1737 JUMP JUMPDEST PUSH2 0x187C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15D7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18B7 PUSH1 0x10 DUP4 PUSH2 0x13B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x18C2 DUP3 PUSH2 0x1883 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18E4 DUP2 PUSH2 0x18AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0xCA PUSH10 0x85CEC12698F635D4D371 0xD5 SWAP11 STATICCALL BALANCE LOG2 DUP14 PUSH24 0xCC1090F7CDEC8497581F94E464736F6C634300081C003300 ",
							"sourceMap": "291:942:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1060:90:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;912:142:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1615:84:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1156:73:11;;;:::i;:::-;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;367:62:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3551:140:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;435:62:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;1779:89:5:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4226:136::-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;1060:90:11:-;1110:5;1134:9;1127:16;;1060:90;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;912:142:11:-;405:24;2464:16:0;2475:4;2464:10;:16::i;:::-;2261:21:4::1;:19;:21::i;:::-;1030:17:11::2;1036:2;1040:6;1030:5;:17::i;:::-;2303:20:4::1;:18;:20::i;:::-;912:142:11::0;;;:::o;1615:84:3:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;3004:116:5:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;1156:73:11:-;473:24;2464:16:0;2475:4;2464:10;:16::i;:::-;1214:8:11::1;:6;:8::i;:::-;1156:73:::0;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;1981:93:5:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;3315:178:5:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;367:62:11:-;405:24;367:62;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;3551:140:5:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;435:62:11:-;473:24;435:62;:::o;763:146:9:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8726:128:5:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;6730:317::-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;2336:287:4:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;7458:208:5:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;2629:209:4:-;1716:1;2809:7;:22;;;;2629:209::o;2186:115:3:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;;:14;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;9701:432:5:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;1767:106:3:-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;88:117:12:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:126::-;2790:7;2830:42;2823:5;2819:54;2808:65;;2753:126;;;:::o;2885:96::-;2922:7;2951:24;2969:5;2951:24;:::i;:::-;2940:35;;2885:96;;;:::o;2987:122::-;3060:24;3078:5;3060:24;:::i;:::-;3053:5;3050:35;3040:63;;3099:1;3096;3089:12;3040:63;2987:122;:::o;3115:139::-;3161:5;3199:6;3186:20;3177:29;;3215:33;3242:5;3215:33;:::i;:::-;3115:139;;;;:::o;3260:77::-;3297:7;3326:5;3315:16;;3260:77;;;:::o;3343:122::-;3416:24;3434:5;3416:24;:::i;:::-;3409:5;3406:35;3396:63;;3455:1;3452;3445:12;3396:63;3343:122;:::o;3471:139::-;3517:5;3555:6;3542:20;3533:29;;3571:33;3598:5;3571:33;:::i;:::-;3471:139;;;;:::o;3616:474::-;3684:6;3692;3741:2;3729:9;3720:7;3716:23;3712:32;3709:119;;;3747:79;;:::i;:::-;3709:119;3867:1;3892:53;3937:7;3928:6;3917:9;3913:22;3892:53;:::i;:::-;3882:63;;3838:117;3994:2;4020:53;4065:7;4056:6;4045:9;4041:22;4020:53;:::i;:::-;4010:63;;3965:118;3616:474;;;;;:::o;4096:118::-;4183:24;4201:5;4183:24;:::i;:::-;4178:3;4171:37;4096:118;;:::o;4220:222::-;4313:4;4351:2;4340:9;4336:18;4328:26;;4364:71;4432:1;4421:9;4417:17;4408:6;4364:71;:::i;:::-;4220:222;;;;:::o;4448:619::-;4525:6;4533;4541;4590:2;4578:9;4569:7;4565:23;4561:32;4558:119;;;4596:79;;:::i;:::-;4558:119;4716:1;4741:53;4786:7;4777:6;4766:9;4762:22;4741:53;:::i;:::-;4731:63;;4687:117;4843:2;4869:53;4914:7;4905:6;4894:9;4890:22;4869:53;:::i;:::-;4859:63;;4814:118;4971:2;4997:53;5042:7;5033:6;5022:9;5018:22;4997:53;:::i;:::-;4987:63;;4942:118;4448:619;;;;;:::o;5073:77::-;5110:7;5139:5;5128:16;;5073:77;;;:::o;5156:122::-;5229:24;5247:5;5229:24;:::i;:::-;5222:5;5219:35;5209:63;;5268:1;5265;5258:12;5209:63;5156:122;:::o;5284:139::-;5330:5;5368:6;5355:20;5346:29;;5384:33;5411:5;5384:33;:::i;:::-;5284:139;;;;:::o;5429:329::-;5488:6;5537:2;5525:9;5516:7;5512:23;5508:32;5505:119;;;5543:79;;:::i;:::-;5505:119;5663:1;5688:53;5733:7;5724:6;5713:9;5709:22;5688:53;:::i;:::-;5678:63;;5634:117;5429:329;;;;:::o;5764:118::-;5851:24;5869:5;5851:24;:::i;:::-;5846:3;5839:37;5764:118;;:::o;5888:222::-;5981:4;6019:2;6008:9;6004:18;5996:26;;6032:71;6100:1;6089:9;6085:17;6076:6;6032:71;:::i;:::-;5888:222;;;;:::o;6116:474::-;6184:6;6192;6241:2;6229:9;6220:7;6216:23;6212:32;6209:119;;;6247:79;;:::i;:::-;6209:119;6367:1;6392:53;6437:7;6428:6;6417:9;6413:22;6392:53;:::i;:::-;6382:63;;6338:117;6494:2;6520:53;6565:7;6556:6;6545:9;6541:22;6520:53;:::i;:::-;6510:63;;6465:118;6116:474;;;;;:::o;6596:86::-;6631:7;6671:4;6664:5;6660:16;6649:27;;6596:86;;;:::o;6688:112::-;6771:22;6787:5;6771:22;:::i;:::-;6766:3;6759:35;6688:112;;:::o;6806:214::-;6895:4;6933:2;6922:9;6918:18;6910:26;;6946:67;7010:1;6999:9;6995:17;6986:6;6946:67;:::i;:::-;6806:214;;;;:::o;7026:329::-;7085:6;7134:2;7122:9;7113:7;7109:23;7105:32;7102:119;;;7140:79;;:::i;:::-;7102:119;7260:1;7285:53;7330:7;7321:6;7310:9;7306:22;7285:53;:::i;:::-;7275:63;;7231:117;7026:329;;;;:::o;7361:474::-;7429:6;7437;7486:2;7474:9;7465:7;7461:23;7457:32;7454:119;;;7492:79;;:::i;:::-;7454:119;7612:1;7637:53;7682:7;7673:6;7662:9;7658:22;7637:53;:::i;:::-;7627:63;;7583:117;7739:2;7765:53;7810:7;7801:6;7790:9;7786:22;7765:53;:::i;:::-;7755:63;;7710:118;7361:474;;;;;:::o;7841:180::-;7889:77;7886:1;7879:88;7986:4;7983:1;7976:15;8010:4;8007:1;8000:15;8027:320;8071:6;8108:1;8102:4;8098:12;8088:22;;8155:1;8149:4;8145:12;8176:18;8166:81;;8232:4;8224:6;8220:17;8210:27;;8166:81;8294:2;8286:6;8283:14;8263:18;8260:38;8257:84;;8313:18;;:::i;:::-;8257:84;8078:269;8027:320;;;:::o;8353:118::-;8440:24;8458:5;8440:24;:::i;:::-;8435:3;8428:37;8353:118;;:::o;8477:442::-;8626:4;8664:2;8653:9;8649:18;8641:26;;8677:71;8745:1;8734:9;8730:17;8721:6;8677:71;:::i;:::-;8758:72;8826:2;8815:9;8811:18;8802:6;8758:72;:::i;:::-;8840;8908:2;8897:9;8893:18;8884:6;8840:72;:::i;:::-;8477:442;;;;;;:::o;8925:222::-;9018:4;9056:2;9045:9;9041:18;9033:26;;9069:71;9137:1;9126:9;9122:17;9113:6;9069:71;:::i;:::-;8925:222;;;;:::o;9153:181::-;9293:33;9289:1;9281:6;9277:14;9270:57;9153:181;:::o;9340:366::-;9482:3;9503:67;9567:2;9562:3;9503:67;:::i;:::-;9496:74;;9579:93;9668:3;9579:93;:::i;:::-;9697:2;9692:3;9688:12;9681:19;;9340:366;;;:::o;9712:419::-;9878:4;9916:2;9905:9;9901:18;9893:26;;9965:9;9959:4;9955:20;9951:1;9940:9;9936:17;9929:47;9993:131;10119:4;9993:131;:::i;:::-;9985:139;;9712:419;;;:::o;10137:180::-;10185:77;10182:1;10175:88;10282:4;10279:1;10272:15;10306:4;10303:1;10296:15;10323:191;10363:3;10382:20;10400:1;10382:20;:::i;:::-;10377:25;;10416:20;10434:1;10416:20;:::i;:::-;10411:25;;10459:1;10456;10452:9;10445:16;;10480:3;10477:1;10474:10;10471:36;;;10487:18;;:::i;:::-;10471:36;10323:191;;;;:::o;10520:332::-;10641:4;10679:2;10668:9;10664:18;10656:26;;10692:71;10760:1;10749:9;10745:17;10736:6;10692:71;:::i;:::-;10773:72;10841:2;10830:9;10826:18;10817:6;10773:72;:::i;:::-;10520:332;;;;;:::o;10858:166::-;10998:18;10994:1;10986:6;10982:14;10975:42;10858:166;:::o;11030:366::-;11172:3;11193:67;11257:2;11252:3;11193:67;:::i;:::-;11186:74;;11269:93;11358:3;11269:93;:::i;:::-;11387:2;11382:3;11378:12;11371:19;;11030:366;;;:::o;11402:419::-;11568:4;11606:2;11595:9;11591:18;11583:26;;11655:9;11649:4;11645:20;11641:1;11630:9;11626:17;11619:47;11683:131;11809:4;11683:131;:::i;:::-;11675:139;;11402:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1286600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "351",
								"MINTER_ROLE()": "391",
								"PAUSER_ROLE()": "457",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2873",
								"decimals()": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3210",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"pause()": "infinite",
								"paused()": "2496",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "741",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 291,
									"end": 1233,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 291,
									"end": 1233,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 291,
									"end": 1233,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 539,
									"end": 541,
									"name": "PUSH",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 503,
									"end": 541,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 503,
									"end": 541,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 503,
									"end": 541,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 503,
									"end": 541,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 503,
									"end": 541,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 503,
									"end": 541,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 503,
									"end": 541,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 503,
									"end": 541,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 503,
									"end": 541,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 607,
									"end": 906,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 607,
									"end": 906,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 607,
									"end": 906,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 607,
									"end": 906,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 607,
									"end": 906,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 607,
									"end": 906,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 607,
									"end": 906,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 607,
									"end": 906,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 607,
									"end": 906,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 722,
									"end": 727,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 729,
									"end": 736,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 777,
									"end": 778,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 779,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 760,
									"end": 779,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 760,
									"end": 765,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 760,
									"end": 779,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 760,
									"end": 779,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 760,
									"end": 779,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 752,
									"end": 812,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 752,
									"end": 812,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 752,
									"end": 812,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 752,
									"end": 812,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 752,
									"end": 812,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 752,
									"end": 812,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 752,
									"end": 812,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 752,
									"end": 812,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 752,
									"end": 812,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 752,
									"end": 812,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 752,
									"end": 812,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 752,
									"end": 812,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 752,
									"end": 812,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 752,
									"end": 812,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 752,
									"end": 812,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 752,
									"end": 812,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 752,
									"end": 812,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 752,
									"end": 812,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 752,
									"end": 812,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 752,
									"end": 812,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 752,
									"end": 812,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 752,
									"end": 812,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 752,
									"end": 812,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 752,
									"end": 812,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 822,
									"end": 859,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 2232,
									"end": 2236,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 833,
									"end": 851,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 833,
									"end": 851,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 853,
									"end": 858,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 822,
									"end": 832,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 822,
									"end": 832,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 822,
									"end": 832,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 822,
									"end": 859,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 822,
									"end": 859,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 822,
									"end": 859,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 822,
									"end": 859,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 822,
									"end": 859,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 822,
									"end": 859,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 869,
									"end": 899,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 405,
									"end": 429,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
								},
								{
									"begin": 893,
									"end": 898,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 869,
									"end": 879,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 869,
									"end": 879,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 869,
									"end": 879,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 869,
									"end": 899,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 869,
									"end": 899,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 869,
									"end": 899,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 869,
									"end": 899,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 869,
									"end": 899,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 869,
									"end": 899,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 607,
									"end": 906,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 291,
									"end": 1233,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 291,
									"end": 1233,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 12
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "99"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 12,
									"value": "99"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2647,
									"end": 2689,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2640,
									"end": 2645,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2636,
									"end": 2690,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2625,
									"end": 2690,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2625,
									"end": 2690,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 2696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "tag",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2739,
									"end": 2746,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 2786,
									"end": 2791,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 2768,
									"end": 2792,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "tag",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2757,
									"end": 2792,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2757,
									"end": 2792,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2702,
									"end": 2798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "tag",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 2877,
									"end": 2901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "tag",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2870,
									"end": 2875,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2867,
									"end": 2902,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2916,
									"end": 2917,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2913,
									"end": 2914,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2906,
									"end": 2918,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "tag",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2804,
									"end": 2926,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "tag",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2989,
									"end": 2994,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3014,
									"end": 3027,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3005,
									"end": 3027,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3005,
									"end": 3027,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 3063,
									"end": 3068,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 3036,
									"end": 3069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "tag",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2932,
									"end": 3075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3189,
									"end": 3195,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3197,
									"end": 3203,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3205,
									"end": 3211,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3254,
									"end": 3256,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 3242,
									"end": 3251,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3233,
									"end": 3240,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3229,
									"end": 3252,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3225,
									"end": 3257,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3260,
									"end": 3339,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 3260,
									"end": 3339,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 3260,
									"end": 3339,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3260,
									"end": 3339,
									"name": "tag",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 3260,
									"end": 3339,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "tag",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3401,
									"end": 3402,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3390,
									"end": 3399,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3386,
									"end": 3403,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3380,
									"end": 3404,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3431,
									"end": 3449,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3423,
									"end": 3429,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3420,
									"end": 3450,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3453,
									"end": 3532,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 3453,
									"end": 3532,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 3453,
									"end": 3532,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3453,
									"end": 3532,
									"name": "tag",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 3453,
									"end": 3532,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "tag",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3558,
									"end": 3632,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 3624,
									"end": 3631,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3615,
									"end": 3621,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3604,
									"end": 3613,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3600,
									"end": 3622,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3558,
									"end": 3632,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 3558,
									"end": 3632,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3558,
									"end": 3632,
									"name": "tag",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 3558,
									"end": 3632,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3548,
									"end": 3632,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 3548,
									"end": 3632,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3351,
									"end": 3642,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3702,
									"end": 3704,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3691,
									"end": 3700,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3687,
									"end": 3705,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3681,
									"end": 3706,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3733,
									"end": 3751,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3725,
									"end": 3731,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3722,
									"end": 3752,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3755,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 3755,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 3755,
									"end": 3834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3755,
									"end": 3834,
									"name": "tag",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 3755,
									"end": 3834,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "tag",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3860,
									"end": 3934,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 3926,
									"end": 3933,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3917,
									"end": 3923,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3906,
									"end": 3915,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3902,
									"end": 3924,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3860,
									"end": 3934,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 3860,
									"end": 3934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3860,
									"end": 3934,
									"name": "tag",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 3860,
									"end": 3934,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3850,
									"end": 3934,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3850,
									"end": 3934,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3652,
									"end": 3944,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 4009,
									"end": 4073,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 4065,
									"end": 4072,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4056,
									"end": 4062,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4045,
									"end": 4054,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 4041,
									"end": 4063,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4009,
									"end": 4073,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 4009,
									"end": 4073,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4009,
									"end": 4073,
									"name": "tag",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 4009,
									"end": 4073,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3999,
									"end": 4073,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3999,
									"end": 4073,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3954,
									"end": 4083,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3081,
									"end": 4090,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4148,
									"end": 4154,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4182,
									"end": 4187,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4176,
									"end": 4188,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4166,
									"end": 4188,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4166,
									"end": 4188,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4096,
									"end": 4195,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4201,
									"end": 4381,
									"name": "tag",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 4201,
									"end": 4381,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4249,
									"end": 4326,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4246,
									"end": 4247,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4239,
									"end": 4327,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4346,
									"end": 4350,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 4343,
									"end": 4344,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 4336,
									"end": 4351,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4370,
									"end": 4374,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 4367,
									"end": 4368,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4360,
									"end": 4375,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "tag",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4431,
									"end": 4437,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4468,
									"end": 4469,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 4462,
									"end": 4466,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4458,
									"end": 4470,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 4448,
									"end": 4470,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4448,
									"end": 4470,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4515,
									"end": 4516,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4509,
									"end": 4513,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4505,
									"end": 4517,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4536,
									"end": 4554,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4526,
									"end": 4607,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 4526,
									"end": 4607,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4592,
									"end": 4596,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 4584,
									"end": 4590,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4580,
									"end": 4597,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4570,
									"end": 4597,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4570,
									"end": 4597,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4526,
									"end": 4607,
									"name": "tag",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 4526,
									"end": 4607,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4654,
									"end": 4656,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4646,
									"end": 4652,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4643,
									"end": 4657,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4623,
									"end": 4641,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4620,
									"end": 4658,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 4617,
									"end": 4701,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 4617,
									"end": 4701,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4673,
									"end": 4691,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 4673,
									"end": 4691,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 4673,
									"end": 4691,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4673,
									"end": 4691,
									"name": "tag",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 4673,
									"end": 4691,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4617,
									"end": 4701,
									"name": "tag",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 4617,
									"end": 4701,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4438,
									"end": 4707,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4387,
									"end": 4707,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4762,
									"end": 4766,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4785,
									"end": 4788,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4777,
									"end": 4788,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4777,
									"end": 4788,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4808,
									"end": 4811,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4805,
									"end": 4806,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4798,
									"end": 4812,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4842,
									"end": 4846,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4839,
									"end": 4840,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4829,
									"end": 4847,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 4821,
									"end": 4847,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4821,
									"end": 4847,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4713,
									"end": 4854,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "tag",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4897,
									"end": 4903,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4944,
									"end": 4946,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4939,
									"end": 4941,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4932,
									"end": 4937,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4928,
									"end": 4942,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4924,
									"end": 4947,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 4914,
									"end": 4947,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4914,
									"end": 4947,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4860,
									"end": 4953,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5003,
									"end": 5011,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5053,
									"end": 5058,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5047,
									"end": 5051,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5043,
									"end": 5059,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 5022,
									"end": 5059,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5022,
									"end": 5059,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4959,
									"end": 5066,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "tag",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5141,
									"end": 5147,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5191,
									"end": 5192,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 5179,
									"end": 5189,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5175,
									"end": 5193,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 5214,
									"end": 5311,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 5244,
									"end": 5310,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5233,
									"end": 5242,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5214,
									"end": 5311,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 5214,
									"end": 5311,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5214,
									"end": 5311,
									"name": "tag",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 5214,
									"end": 5311,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5332,
									"end": 5371,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 5362,
									"end": 5370,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 5351,
									"end": 5360,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5332,
									"end": 5371,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 5332,
									"end": 5371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5332,
									"end": 5371,
									"name": "tag",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 5332,
									"end": 5371,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5320,
									"end": 5371,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 5320,
									"end": 5371,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5404,
									"end": 5408,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 5400,
									"end": 5409,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 5393,
									"end": 5398,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5389,
									"end": 5410,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 5380,
									"end": 5410,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 5380,
									"end": 5410,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5453,
									"end": 5457,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 5443,
									"end": 5451,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 5439,
									"end": 5458,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 5432,
									"end": 5437,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5429,
									"end": 5459,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 5419,
									"end": 5459,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 5419,
									"end": 5459,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5148,
									"end": 5465,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5148,
									"end": 5465,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5072,
									"end": 5465,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5508,
									"end": 5515,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5537,
									"end": 5542,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5526,
									"end": 5542,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5526,
									"end": 5542,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5471,
									"end": 5548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5582,
									"end": 5585,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5603,
									"end": 5608,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5596,
									"end": 5608,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5596,
									"end": 5608,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5554,
									"end": 5614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5670,
									"end": 5679,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5703,
									"end": 5756,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 5721,
									"end": 5755,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 5730,
									"end": 5754,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 5748,
									"end": 5753,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5730,
									"end": 5754,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 5730,
									"end": 5754,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5730,
									"end": 5754,
									"name": "tag",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 5730,
									"end": 5754,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5721,
									"end": 5755,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 5721,
									"end": 5755,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5721,
									"end": 5755,
									"name": "tag",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 5721,
									"end": 5755,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5703,
									"end": 5756,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 5703,
									"end": 5756,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5703,
									"end": 5756,
									"name": "tag",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 5703,
									"end": 5756,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5690,
									"end": 5756,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5690,
									"end": 5756,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5620,
									"end": 5762,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5811,
									"end": 5814,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5832,
									"end": 5837,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5825,
									"end": 5837,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5825,
									"end": 5837,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5768,
									"end": 5843,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "tag",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5959,
									"end": 5998,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 5990,
									"end": 5997,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5959,
									"end": 5998,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 5959,
									"end": 5998,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5959,
									"end": 5998,
									"name": "tag",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 5959,
									"end": 5998,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6020,
									"end": 6111,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 6069,
									"end": 6110,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 6093,
									"end": 6109,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6069,
									"end": 6110,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 6069,
									"end": 6110,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6069,
									"end": 6110,
									"name": "tag",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 6069,
									"end": 6110,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6061,
									"end": 6067,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6054,
									"end": 6058,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6048,
									"end": 6059,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 6020,
									"end": 6111,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 6020,
									"end": 6111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6020,
									"end": 6111,
									"name": "tag",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 6020,
									"end": 6111,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6014,
									"end": 6018,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6007,
									"end": 6112,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 5925,
									"end": 6118,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5849,
									"end": 6118,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6124,
									"end": 6197,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 6124,
									"end": 6197,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6169,
									"end": 6172,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6190,
									"end": 6191,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6183,
									"end": 6191,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6183,
									"end": 6191,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6124,
									"end": 6197,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6124,
									"end": 6197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6203,
									"end": 6392,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 6203,
									"end": 6392,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6280,
									"end": 6312,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 6280,
									"end": 6312,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 6280,
									"end": 6312,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6280,
									"end": 6312,
									"name": "tag",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 6280,
									"end": 6312,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6321,
									"end": 6386,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "144"
								},
								{
									"begin": 6379,
									"end": 6385,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6371,
									"end": 6377,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6365,
									"end": 6369,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6321,
									"end": 6386,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 6321,
									"end": 6386,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6321,
									"end": 6386,
									"name": "tag",
									"source": 12,
									"value": "144"
								},
								{
									"begin": 6321,
									"end": 6386,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6256,
									"end": 6392,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6203,
									"end": 6392,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6203,
									"end": 6392,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6203,
									"end": 6392,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6398,
									"end": 6584,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 6398,
									"end": 6584,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "tag",
									"source": 12,
									"value": "146"
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6475,
									"end": 6478,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6468,
									"end": 6473,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6465,
									"end": 6479,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "148"
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6529,
									"end": 6568,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "149"
								},
								{
									"begin": 6566,
									"end": 6567,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6559,
									"end": 6564,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6529,
									"end": 6568,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 6529,
									"end": 6568,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6529,
									"end": 6568,
									"name": "tag",
									"source": 12,
									"value": "149"
								},
								{
									"begin": 6529,
									"end": 6568,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6502,
									"end": 6503,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 6495,
									"end": 6500,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6491,
									"end": 6504,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6482,
									"end": 6504,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6482,
									"end": 6504,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "146"
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "tag",
									"source": 12,
									"value": "148"
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6398,
									"end": 6584,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6398,
									"end": 6584,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6398,
									"end": 6584,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "tag",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6691,
									"end": 6693,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 6686,
									"end": 6689,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6683,
									"end": 6694,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "151"
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6725,
									"end": 6763,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "152"
								},
								{
									"begin": 6757,
									"end": 6762,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6725,
									"end": 6763,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 6725,
									"end": 6763,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6725,
									"end": 6763,
									"name": "tag",
									"source": 12,
									"value": "152"
								},
								{
									"begin": 6725,
									"end": 6763,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6809,
									"end": 6838,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "153"
								},
								{
									"begin": 6827,
									"end": 6837,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6809,
									"end": 6838,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 6809,
									"end": 6838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6809,
									"end": 6838,
									"name": "tag",
									"source": 12,
									"value": "153"
								},
								{
									"begin": 6809,
									"end": 6838,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6799,
									"end": 6807,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6795,
									"end": 6839,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6992,
									"end": 6994,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6980,
									"end": 6990,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6977,
									"end": 6995,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "154"
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7013,
									"end": 7021,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6998,
									"end": 7021,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6998,
									"end": 7021,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "tag",
									"source": 12,
									"value": "154"
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7036,
									"end": 7116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "155"
								},
								{
									"begin": 7092,
									"end": 7114,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "156"
								},
								{
									"begin": 7110,
									"end": 7113,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 7092,
									"end": 7114,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 7092,
									"end": 7114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7092,
									"end": 7114,
									"name": "tag",
									"source": 12,
									"value": "156"
								},
								{
									"begin": 7092,
									"end": 7114,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7082,
									"end": 7090,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7078,
									"end": 7115,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7065,
									"end": 7076,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7036,
									"end": 7116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 7036,
									"end": 7116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7036,
									"end": 7116,
									"name": "tag",
									"source": 12,
									"value": "155"
								},
								{
									"begin": 7036,
									"end": 7116,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6695,
									"end": 7126,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6695,
									"end": 7126,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "tag",
									"source": 12,
									"value": "151"
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6590,
									"end": 7133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "tag",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7193,
									"end": 7201,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7243,
									"end": 7248,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7237,
									"end": 7241,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7233,
									"end": 7249,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 7212,
									"end": 7249,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7212,
									"end": 7249,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7139,
									"end": 7256,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "tag",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7306,
									"end": 7312,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7339,
									"end": 7390,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "159"
								},
								{
									"begin": 7387,
									"end": 7388,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7383,
									"end": 7389,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 7375,
									"end": 7380,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7372,
									"end": 7373,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 7368,
									"end": 7381,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 7339,
									"end": 7390,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 7339,
									"end": 7390,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7339,
									"end": 7390,
									"name": "tag",
									"source": 12,
									"value": "159"
								},
								{
									"begin": 7339,
									"end": 7390,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7335,
									"end": 7391,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 7420,
									"end": 7424,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 7414,
									"end": 7418,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7410,
									"end": 7425,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 7400,
									"end": 7425,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7400,
									"end": 7425,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7313,
									"end": 7431,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7262,
									"end": 7431,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "tag",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7512,
									"end": 7516,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7658,
									"end": 7687,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "161"
								},
								{
									"begin": 7683,
									"end": 7686,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7677,
									"end": 7681,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7658,
									"end": 7687,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 7658,
									"end": 7687,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7658,
									"end": 7687,
									"name": "tag",
									"source": 12,
									"value": "161"
								},
								{
									"begin": 7658,
									"end": 7687,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7650,
									"end": 7687,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7650,
									"end": 7687,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7720,
									"end": 7723,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7717,
									"end": 7718,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 7713,
									"end": 7724,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 7707,
									"end": 7711,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7704,
									"end": 7725,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 7696,
									"end": 7725,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7696,
									"end": 7725,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7436,
									"end": 7731,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7736,
									"end": 9131,
									"name": "tag",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 7736,
									"end": 9131,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7853,
									"end": 7890,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "163"
								},
								{
									"begin": 7886,
									"end": 7889,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7853,
									"end": 7890,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 7853,
									"end": 7890,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7853,
									"end": 7890,
									"name": "tag",
									"source": 12,
									"value": "163"
								},
								{
									"begin": 7853,
									"end": 7890,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7955,
									"end": 7973,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7947,
									"end": 7953,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7944,
									"end": 7974,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "164"
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7977,
									"end": 7995,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "165"
								},
								{
									"begin": 7977,
									"end": 7995,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 7977,
									"end": 7995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7977,
									"end": 7995,
									"name": "tag",
									"source": 12,
									"value": "165"
								},
								{
									"begin": 7977,
									"end": 7995,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "tag",
									"source": 12,
									"value": "164"
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8021,
									"end": 8059,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "166"
								},
								{
									"begin": 8053,
									"end": 8057,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8047,
									"end": 8058,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 8021,
									"end": 8059,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 8021,
									"end": 8059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8021,
									"end": 8059,
									"name": "tag",
									"source": 12,
									"value": "166"
								},
								{
									"begin": 8021,
									"end": 8059,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8106,
									"end": 8173,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "167"
								},
								{
									"begin": 8166,
									"end": 8172,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8158,
									"end": 8164,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8152,
									"end": 8156,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8106,
									"end": 8173,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 8106,
									"end": 8173,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8106,
									"end": 8173,
									"name": "tag",
									"source": 12,
									"value": "167"
								},
								{
									"begin": 8106,
									"end": 8173,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8200,
									"end": 8201,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8224,
									"end": 8228,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8211,
									"end": 8228,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8211,
									"end": 8228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8256,
									"end": 8258,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 8248,
									"end": 8254,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8245,
									"end": 8259,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 8273,
									"end": 8274,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "169"
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8930,
									"end": 8931,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8947,
									"end": 8953,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "170"
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8996,
									"end": 9005,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8991,
									"end": 8994,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 8987,
									"end": 9006,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8981,
									"end": 9007,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8972,
									"end": 9007,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8972,
									"end": 9007,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "tag",
									"source": 12,
									"value": "170"
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9047,
									"end": 9114,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "171"
								},
								{
									"begin": 9107,
									"end": 9113,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 9100,
									"end": 9105,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9047,
									"end": 9114,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 9047,
									"end": 9114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9047,
									"end": 9114,
									"name": "tag",
									"source": 12,
									"value": "171"
								},
								{
									"begin": 9047,
									"end": 9114,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9041,
									"end": 9045,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 9034,
									"end": 9115,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8903,
									"end": 9125,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "168"
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "tag",
									"source": 12,
									"value": "169"
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8320,
									"end": 8324,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 8316,
									"end": 8325,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 8308,
									"end": 8314,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8304,
									"end": 8326,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8354,
									"end": 8391,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "172"
								},
								{
									"begin": 8386,
									"end": 8390,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 8354,
									"end": 8391,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 8354,
									"end": 8391,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8354,
									"end": 8391,
									"name": "tag",
									"source": 12,
									"value": "172"
								},
								{
									"begin": 8354,
									"end": 8391,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8413,
									"end": 8414,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "tag",
									"source": 12,
									"value": "173"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8441,
									"end": 8448,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8438,
									"end": 8439,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8435,
									"end": 8449,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "175"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8520,
									"end": 8529,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8515,
									"end": 8518,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8511,
									"end": 8530,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8505,
									"end": 8531,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8497,
									"end": 8503,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8490,
									"end": 8532,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8571,
									"end": 8572,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8563,
									"end": 8569,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8559,
									"end": 8573,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8549,
									"end": 8573,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8549,
									"end": 8573,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8618,
									"end": 8620,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8607,
									"end": 8616,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8603,
									"end": 8621,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8590,
									"end": 8621,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 8590,
									"end": 8621,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8464,
									"end": 8468,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8461,
									"end": 8462,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8457,
									"end": 8469,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8452,
									"end": 8469,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8452,
									"end": 8469,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "173"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "tag",
									"source": 12,
									"value": "175"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8663,
									"end": 8669,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 8654,
									"end": 8661,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8651,
									"end": 8670,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "176"
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8721,
									"end": 8730,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8716,
									"end": 8719,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8712,
									"end": 8731,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8706,
									"end": 8732,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8764,
									"end": 8812,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "177"
								},
								{
									"begin": 8806,
									"end": 8810,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 8798,
									"end": 8804,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8794,
									"end": 8811,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8783,
									"end": 8792,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8764,
									"end": 8812,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 8764,
									"end": 8812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8764,
									"end": 8812,
									"name": "tag",
									"source": 12,
									"value": "177"
								},
								{
									"begin": 8764,
									"end": 8812,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8756,
									"end": 8762,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8749,
									"end": 8813,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8671,
									"end": 8827,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "tag",
									"source": 12,
									"value": "176"
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8873,
									"end": 8874,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8869,
									"end": 8870,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 8861,
									"end": 8867,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 8857,
									"end": 8871,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 8853,
									"end": 8875,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8847,
									"end": 8851,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 8840,
									"end": 8876,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8275,
									"end": 8886,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8275,
									"end": 8886,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8275,
									"end": 8886,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "tag",
									"source": 12,
									"value": "168"
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7828,
									"end": 9131,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7828,
									"end": 9131,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7828,
									"end": 9131,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7736,
									"end": 9131,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7736,
									"end": 9131,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7736,
									"end": 9131,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9137,
									"end": 9306,
									"name": "tag",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 9137,
									"end": 9306,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9221,
									"end": 9232,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9255,
									"end": 9261,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9250,
									"end": 9253,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9243,
									"end": 9262,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 9295,
									"end": 9299,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 9290,
									"end": 9293,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9286,
									"end": 9300,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9271,
									"end": 9300,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9271,
									"end": 9300,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9137,
									"end": 9306,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 9137,
									"end": 9306,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 9137,
									"end": 9306,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9137,
									"end": 9306,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9137,
									"end": 9306,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9312,
									"end": 9490,
									"name": "tag",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 9312,
									"end": 9490,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9452,
									"end": 9482,
									"name": "PUSH",
									"source": 12,
									"value": "41646D696E2063616E6E6F74206265207A65726F206164647265737300000000"
								},
								{
									"begin": 9448,
									"end": 9449,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9440,
									"end": 9446,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9436,
									"end": 9450,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9429,
									"end": 9483,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 9312,
									"end": 9490,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9312,
									"end": 9490,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9496,
									"end": 9862,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 9496,
									"end": 9862,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9638,
									"end": 9641,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9659,
									"end": 9726,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "181"
								},
								{
									"begin": 9723,
									"end": 9725,
									"name": "PUSH",
									"source": 12,
									"value": "1C"
								},
								{
									"begin": 9718,
									"end": 9721,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 9659,
									"end": 9726,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 9659,
									"end": 9726,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9659,
									"end": 9726,
									"name": "tag",
									"source": 12,
									"value": "181"
								},
								{
									"begin": 9659,
									"end": 9726,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9652,
									"end": 9726,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 9652,
									"end": 9726,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9735,
									"end": 9828,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "182"
								},
								{
									"begin": 9824,
									"end": 9827,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9735,
									"end": 9828,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 9735,
									"end": 9828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9735,
									"end": 9828,
									"name": "tag",
									"source": 12,
									"value": "182"
								},
								{
									"begin": 9735,
									"end": 9828,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9853,
									"end": 9855,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 9848,
									"end": 9851,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9844,
									"end": 9856,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9837,
									"end": 9856,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9837,
									"end": 9856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9496,
									"end": 9862,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 9496,
									"end": 9862,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9496,
									"end": 9862,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9496,
									"end": 9862,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9868,
									"end": 10287,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 9868,
									"end": 10287,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10034,
									"end": 10038,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10072,
									"end": 10074,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 10061,
									"end": 10070,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 10057,
									"end": 10075,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10049,
									"end": 10075,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 10049,
									"end": 10075,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10121,
									"end": 10130,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 10115,
									"end": 10119,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 10111,
									"end": 10131,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 10107,
									"end": 10108,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10096,
									"end": 10105,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 10092,
									"end": 10109,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10085,
									"end": 10132,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 10149,
									"end": 10280,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "184"
								},
								{
									"begin": 10275,
									"end": 10279,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 10149,
									"end": 10280,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 10149,
									"end": 10280,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10149,
									"end": 10280,
									"name": "tag",
									"source": 12,
									"value": "184"
								},
								{
									"begin": 10149,
									"end": 10280,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10141,
									"end": 10280,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 10141,
									"end": 10280,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9868,
									"end": 10287,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 9868,
									"end": 10287,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9868,
									"end": 10287,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9868,
									"end": 10287,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 291,
									"end": 1233,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 291,
									"end": 1233,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 291,
									"end": 1233,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 291,
									"end": 1233,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 291,
									"end": 1233,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 291,
									"end": 1233,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 291,
									"end": 1233,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 1233,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 291,
									"end": 1233,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 1233,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "1400"
								},
								{
									"begin": 291,
									"end": 1233,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 291,
									"end": 1233,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 1233,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d1ca6985cec12698f635d4d371d59afa31a28d77cc1090f7cdec8497581f94e464736f6c634300081c0033",
									".code": [
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "5C975ABB"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "D5391393"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "D547741F"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "DD62ED3E"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "E63AB1E9"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "5C975ABB"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "8456CB59"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "91D14854"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "95D89B41"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "248A9CA3"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "248A9CA3"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "2F2FF15D"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "313CE567"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "36568ABE"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "40C10F19"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "6FDDE03"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 1233,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1150,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 1060,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1060,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 1060,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 1060,
											"end": 1150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1060,
											"end": 1150,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 1060,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1060,
											"end": 1150,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1060,
											"end": 1150,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1060,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 1060,
											"end": 1150,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1060,
											"end": 1150,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1060,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 1060,
											"end": 1150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1060,
											"end": 1150,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 1060,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1060,
											"end": 1150,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1060,
											"end": 1150,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1060,
											"end": 1150,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1060,
											"end": 1150,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1060,
											"end": 1150,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1060,
											"end": 1150,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1060,
											"end": 1150,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 912,
											"end": 1054,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 912,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 912,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 912,
											"end": 1054,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 912,
											"end": 1054,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 912,
											"end": 1054,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 912,
											"end": 1054,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 912,
											"end": 1054,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 912,
											"end": 1054,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 912,
											"end": 1054,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 912,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 912,
											"end": 1054,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 912,
											"end": 1054,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 912,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 912,
											"end": 1054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 912,
											"end": 1054,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 912,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 912,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 912,
											"end": 1054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 912,
											"end": 1054,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 912,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 912,
											"end": 1054,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1156,
											"end": 1229,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 1156,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1156,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 1156,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1156,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1156,
											"end": 1229,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 1156,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1156,
											"end": 1229,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 367,
											"end": 429,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 367,
											"end": 429,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 367,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 367,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 367,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 367,
											"end": 429,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 367,
											"end": 429,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 367,
											"end": 429,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 367,
											"end": 429,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 367,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 367,
											"end": 429,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 367,
											"end": 429,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 367,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 367,
											"end": 429,
											"name": "tag",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 367,
											"end": 429,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 367,
											"end": 429,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 367,
											"end": 429,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 367,
											"end": 429,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 429,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 367,
											"end": 429,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 367,
											"end": 429,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 429,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 435,
											"end": 497,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 435,
											"end": 497,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 435,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 435,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 435,
											"end": 497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 435,
											"end": 497,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 435,
											"end": 497,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 435,
											"end": 497,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 435,
											"end": 497,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 435,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 435,
											"end": 497,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 435,
											"end": 497,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 435,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 435,
											"end": 497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 435,
											"end": 497,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 435,
											"end": 497,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 435,
											"end": 497,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 435,
											"end": 497,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 435,
											"end": 497,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 435,
											"end": 497,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 435,
											"end": 497,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 435,
											"end": 497,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 435,
											"end": 497,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1150,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 1060,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1115,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1134,
											"end": 1143,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1400"
										},
										{
											"begin": 1127,
											"end": 1143,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1143,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1060,
											"end": 1150,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1060,
											"end": 1150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 912,
											"end": 1054,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 912,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 405,
											"end": 429,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1047,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 1036,
											"end": 1038,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1046,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1030,
											"end": 1035,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 1030,
											"end": 1047,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1030,
											"end": 1047,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 1030,
											"end": 1047,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 912,
											"end": 1054,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 912,
											"end": 1054,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 912,
											"end": 1054,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 912,
											"end": 1054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1156,
											"end": 1229,
											"name": "tag",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1156,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 473,
											"end": 497,
											"name": "PUSH",
											"source": 11,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 1214,
											"end": 1220,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 1214,
											"end": 1222,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1214,
											"end": 1222,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 1214,
											"end": 1222,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1156,
											"end": 1229,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1156,
											"end": 1229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 367,
											"end": 429,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 367,
											"end": 429,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 405,
											"end": 429,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 367,
											"end": 429,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 367,
											"end": 429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 435,
											"end": 497,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 435,
											"end": 497,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 473,
											"end": 497,
											"name": "PUSH",
											"source": 11,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 435,
											"end": 497,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 435,
											"end": 497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 763,
											"end": 909,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 855,
											"end": 902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 855,
											"end": 902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 5,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 5,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 5,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 5,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2281,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2281,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 2274,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2186,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 5,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 5,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 5,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1837,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 1828,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2872,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2823,
											"end": 2828,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2873,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2929,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 2951,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2885,
											"end": 2981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 3078,
											"end": 3083,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 3060,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3053,
											"end": 3058,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3050,
											"end": 3085,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3099,
											"end": 3100,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3097,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3101,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2987,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3161,
											"end": 3166,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3205,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3186,
											"end": 3206,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 3242,
											"end": 3247,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 3215,
											"end": 3248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3297,
											"end": 3304,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3331,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3260,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 3434,
											"end": 3439,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 3416,
											"end": 3440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3409,
											"end": 3414,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3406,
											"end": 3441,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3455,
											"end": 3456,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3457,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3343,
											"end": 3465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3517,
											"end": 3522,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3561,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3542,
											"end": 3562,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 3598,
											"end": 3603,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 3571,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3698,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3743,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3738,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3716,
											"end": 3739,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3712,
											"end": 3744,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 3747,
											"end": 3826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3867,
											"end": 3868,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 3937,
											"end": 3944,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3928,
											"end": 3934,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3926,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3913,
											"end": 3935,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 3892,
											"end": 3945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3838,
											"end": 3955,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4056,
											"end": 4062,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4045,
											"end": 4054,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4041,
											"end": 4063,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 4020,
											"end": 4073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3965,
											"end": 4083,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 4201,
											"end": 4206,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 4183,
											"end": 4207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4178,
											"end": 4181,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4171,
											"end": 4208,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4096,
											"end": 4214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4353,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4340,
											"end": 4349,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4328,
											"end": 4354,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4328,
											"end": 4354,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 4432,
											"end": 4433,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4421,
											"end": 4430,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4417,
											"end": 4434,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4408,
											"end": 4414,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 4364,
											"end": 4435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4525,
											"end": 4531,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4533,
											"end": 4539,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4541,
											"end": 4547,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4590,
											"end": 4592,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4578,
											"end": 4587,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4569,
											"end": 4576,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4565,
											"end": 4588,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4561,
											"end": 4593,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 4596,
											"end": 4675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4716,
											"end": 4717,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 4786,
											"end": 4793,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4777,
											"end": 4783,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4766,
											"end": 4775,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4762,
											"end": 4784,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 4741,
											"end": 4794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 4794,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 4794,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4687,
											"end": 4804,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 4914,
											"end": 4921,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4905,
											"end": 4911,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4894,
											"end": 4903,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 4869,
											"end": 4922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4859,
											"end": 4922,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4859,
											"end": 4922,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4814,
											"end": 4932,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4971,
											"end": 4973,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 5042,
											"end": 5049,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5033,
											"end": 5039,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5022,
											"end": 5031,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5018,
											"end": 5040,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 4997,
											"end": 5050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5050,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5050,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4942,
											"end": 5060,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 5067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5110,
											"end": 5117,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5139,
											"end": 5144,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5128,
											"end": 5144,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5128,
											"end": 5144,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 5247,
											"end": 5252,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 5229,
											"end": 5253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5222,
											"end": 5227,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5219,
											"end": 5254,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5268,
											"end": 5269,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5265,
											"end": 5266,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5258,
											"end": 5270,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5330,
											"end": 5335,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5355,
											"end": 5375,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5346,
											"end": 5375,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5346,
											"end": 5375,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 5411,
											"end": 5416,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 5384,
											"end": 5417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5284,
											"end": 5423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5488,
											"end": 5494,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5539,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5525,
											"end": 5534,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5516,
											"end": 5523,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5512,
											"end": 5535,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5508,
											"end": 5540,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 5543,
											"end": 5622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5663,
											"end": 5664,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 5733,
											"end": 5740,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5724,
											"end": 5730,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5713,
											"end": 5722,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5709,
											"end": 5731,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 5688,
											"end": 5741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5678,
											"end": 5741,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5678,
											"end": 5741,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5634,
											"end": 5751,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 5869,
											"end": 5874,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 5851,
											"end": 5875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5846,
											"end": 5849,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5839,
											"end": 5876,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5764,
											"end": 5882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5981,
											"end": 5985,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6019,
											"end": 6021,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6008,
											"end": 6017,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6004,
											"end": 6022,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6022,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6022,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 6100,
											"end": 6101,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6089,
											"end": 6098,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6085,
											"end": 6102,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6076,
											"end": 6082,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 6032,
											"end": 6103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 6110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6184,
											"end": 6190,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6192,
											"end": 6198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6241,
											"end": 6243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6229,
											"end": 6238,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6220,
											"end": 6227,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6216,
											"end": 6239,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6212,
											"end": 6244,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 6247,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6368,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 6437,
											"end": 6444,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6428,
											"end": 6434,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6417,
											"end": 6426,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6413,
											"end": 6435,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 6392,
											"end": 6445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6382,
											"end": 6445,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6382,
											"end": 6445,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6338,
											"end": 6455,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6494,
											"end": 6496,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 6565,
											"end": 6572,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6556,
											"end": 6562,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6545,
											"end": 6554,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6541,
											"end": 6563,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 6520,
											"end": 6573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6510,
											"end": 6573,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6510,
											"end": 6573,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6465,
											"end": 6583,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6631,
											"end": 6638,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6675,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 6664,
											"end": 6669,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6660,
											"end": 6676,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6649,
											"end": 6676,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6649,
											"end": 6676,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6596,
											"end": 6682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 6787,
											"end": 6792,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 6771,
											"end": 6793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6766,
											"end": 6769,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6759,
											"end": 6794,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6688,
											"end": 6800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6895,
											"end": 6899,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6933,
											"end": 6935,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6922,
											"end": 6931,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6918,
											"end": 6936,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6910,
											"end": 6936,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6910,
											"end": 6936,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 7010,
											"end": 7011,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6999,
											"end": 7008,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6995,
											"end": 7012,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6986,
											"end": 6992,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 6946,
											"end": 7013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6806,
											"end": 7020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7085,
											"end": 7091,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7134,
											"end": 7136,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7122,
											"end": 7131,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7113,
											"end": 7120,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7109,
											"end": 7132,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7105,
											"end": 7137,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 7140,
											"end": 7219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7260,
											"end": 7261,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7285,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 7330,
											"end": 7337,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7327,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7310,
											"end": 7319,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7306,
											"end": 7328,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7285,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 7285,
											"end": 7338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7285,
											"end": 7338,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 7285,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7275,
											"end": 7338,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7275,
											"end": 7338,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7231,
											"end": 7348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7026,
											"end": 7355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "tag",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7429,
											"end": 7435,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7486,
											"end": 7488,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7474,
											"end": 7483,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7465,
											"end": 7472,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7461,
											"end": 7484,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7457,
											"end": 7489,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 7492,
											"end": 7571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7612,
											"end": 7613,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 7682,
											"end": 7689,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7673,
											"end": 7679,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7662,
											"end": 7671,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7658,
											"end": 7680,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 7637,
											"end": 7690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7627,
											"end": 7690,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7627,
											"end": 7690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7583,
											"end": 7700,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7739,
											"end": 7741,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 7810,
											"end": 7817,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7801,
											"end": 7807,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7790,
											"end": 7799,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7786,
											"end": 7808,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7765,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 7765,
											"end": 7818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7765,
											"end": 7818,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 7765,
											"end": 7818,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7755,
											"end": 7818,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7755,
											"end": 7818,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7710,
											"end": 7828,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7841,
											"end": 8021,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 7841,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7889,
											"end": 7966,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7886,
											"end": 7887,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7879,
											"end": 7967,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7986,
											"end": 7990,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 7983,
											"end": 7984,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7976,
											"end": 7991,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8010,
											"end": 8014,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8007,
											"end": 8008,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8000,
											"end": 8015,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "tag",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8071,
											"end": 8077,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8108,
											"end": 8109,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 8102,
											"end": 8106,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8098,
											"end": 8110,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 8088,
											"end": 8110,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8088,
											"end": 8110,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8155,
											"end": 8156,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 8149,
											"end": 8153,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8145,
											"end": 8157,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8176,
											"end": 8194,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8166,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 8166,
											"end": 8247,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8232,
											"end": 8236,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 8224,
											"end": 8230,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8220,
											"end": 8237,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8210,
											"end": 8237,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8210,
											"end": 8237,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8166,
											"end": 8247,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 8166,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8294,
											"end": 8296,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8286,
											"end": 8292,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8283,
											"end": 8297,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8263,
											"end": 8281,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8260,
											"end": 8298,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8257,
											"end": 8341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 8257,
											"end": 8341,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 8313,
											"end": 8331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8257,
											"end": 8341,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 8257,
											"end": 8341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8078,
											"end": 8347,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8027,
											"end": 8347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8353,
											"end": 8471,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 8353,
											"end": 8471,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8440,
											"end": 8464,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 8458,
											"end": 8463,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8440,
											"end": 8464,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 8440,
											"end": 8464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8440,
											"end": 8464,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 8440,
											"end": 8464,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8435,
											"end": 8438,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8428,
											"end": 8465,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8353,
											"end": 8471,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8353,
											"end": 8471,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8353,
											"end": 8471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "tag",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8626,
											"end": 8630,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8664,
											"end": 8666,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8653,
											"end": 8662,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8649,
											"end": 8667,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8641,
											"end": 8667,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8641,
											"end": 8667,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8677,
											"end": 8748,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 8745,
											"end": 8746,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8734,
											"end": 8743,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8730,
											"end": 8747,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8721,
											"end": 8727,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8677,
											"end": 8748,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 8677,
											"end": 8748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8677,
											"end": 8748,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 8677,
											"end": 8748,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8758,
											"end": 8830,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 8826,
											"end": 8828,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8815,
											"end": 8824,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8811,
											"end": 8829,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8802,
											"end": 8808,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8758,
											"end": 8830,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 8758,
											"end": 8830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8758,
											"end": 8830,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 8758,
											"end": 8830,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8840,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 8908,
											"end": 8910,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8897,
											"end": 8906,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8893,
											"end": 8911,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8884,
											"end": 8890,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8840,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 8840,
											"end": 8912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8840,
											"end": 8912,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 8840,
											"end": 8912,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8477,
											"end": 8919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8925,
											"end": 9147,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 8925,
											"end": 9147,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9018,
											"end": 9022,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9056,
											"end": 9058,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9045,
											"end": 9054,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9041,
											"end": 9059,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9033,
											"end": 9059,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9033,
											"end": 9059,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9069,
											"end": 9140,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 9137,
											"end": 9138,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9126,
											"end": 9135,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9122,
											"end": 9139,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9119,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9069,
											"end": 9140,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 9069,
											"end": 9140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9069,
											"end": 9140,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 9069,
											"end": 9140,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8925,
											"end": 9147,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8925,
											"end": 9147,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8925,
											"end": 9147,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8925,
											"end": 9147,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8925,
											"end": 9147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9153,
											"end": 9334,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 9153,
											"end": 9334,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9293,
											"end": 9326,
											"name": "PUSH",
											"source": 12,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 9289,
											"end": 9290,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9281,
											"end": 9287,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9277,
											"end": 9291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9270,
											"end": 9327,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9153,
											"end": 9334,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9153,
											"end": 9334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9340,
											"end": 9706,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 9340,
											"end": 9706,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9482,
											"end": 9485,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9503,
											"end": 9570,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 9567,
											"end": 9569,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 9562,
											"end": 9565,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9503,
											"end": 9570,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 9503,
											"end": 9570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9503,
											"end": 9570,
											"name": "tag",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 9503,
											"end": 9570,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9496,
											"end": 9570,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9496,
											"end": 9570,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9672,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 9668,
											"end": 9671,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9672,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 9579,
											"end": 9672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9672,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 9579,
											"end": 9672,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9697,
											"end": 9699,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9692,
											"end": 9695,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9688,
											"end": 9700,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9681,
											"end": 9700,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9681,
											"end": 9700,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9340,
											"end": 9706,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9340,
											"end": 9706,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9340,
											"end": 9706,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9340,
											"end": 9706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9712,
											"end": 10131,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 9712,
											"end": 10131,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9878,
											"end": 9882,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9916,
											"end": 9918,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9901,
											"end": 9919,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9893,
											"end": 9919,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9893,
											"end": 9919,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9965,
											"end": 9974,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9959,
											"end": 9963,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9955,
											"end": 9975,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9951,
											"end": 9952,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9936,
											"end": 9953,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9929,
											"end": 9976,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9993,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 10119,
											"end": 10123,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9993,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 9993,
											"end": 10124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9993,
											"end": 10124,
											"name": "tag",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 9993,
											"end": 10124,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9985,
											"end": 10124,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9985,
											"end": 10124,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9712,
											"end": 10131,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9712,
											"end": 10131,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9712,
											"end": 10131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9712,
											"end": 10131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10137,
											"end": 10317,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 10137,
											"end": 10317,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10185,
											"end": 10262,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10182,
											"end": 10183,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10175,
											"end": 10263,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10282,
											"end": 10286,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 10279,
											"end": 10280,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10272,
											"end": 10287,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10306,
											"end": 10310,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10303,
											"end": 10304,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10296,
											"end": 10311,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10323,
											"end": 10514,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 10323,
											"end": 10514,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10363,
											"end": 10366,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10382,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 10400,
											"end": 10401,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10382,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 10382,
											"end": 10402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10382,
											"end": 10402,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 10382,
											"end": 10402,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10377,
											"end": 10402,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10377,
											"end": 10402,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10416,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 10434,
											"end": 10435,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10416,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 10416,
											"end": 10436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10416,
											"end": 10436,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 10416,
											"end": 10436,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10411,
											"end": 10436,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10411,
											"end": 10436,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10459,
											"end": 10460,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10456,
											"end": 10457,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10452,
											"end": 10461,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10445,
											"end": 10461,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10445,
											"end": 10461,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10480,
											"end": 10483,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10477,
											"end": 10478,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10474,
											"end": 10484,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10471,
											"end": 10507,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10471,
											"end": 10507,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 10471,
											"end": 10507,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10487,
											"end": 10505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 10487,
											"end": 10505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 10487,
											"end": 10505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10487,
											"end": 10505,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 10487,
											"end": 10505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10471,
											"end": 10507,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 10471,
											"end": 10507,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10323,
											"end": 10514,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10323,
											"end": 10514,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10323,
											"end": 10514,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10323,
											"end": 10514,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10323,
											"end": 10514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10520,
											"end": 10852,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 10520,
											"end": 10852,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10641,
											"end": 10645,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10679,
											"end": 10681,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10677,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10664,
											"end": 10682,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10656,
											"end": 10682,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10656,
											"end": 10682,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10692,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 10760,
											"end": 10761,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10749,
											"end": 10758,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10745,
											"end": 10762,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10736,
											"end": 10742,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10692,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 10692,
											"end": 10763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10692,
											"end": 10763,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 10692,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10773,
											"end": 10845,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 10841,
											"end": 10843,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10830,
											"end": 10839,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10826,
											"end": 10844,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10817,
											"end": 10823,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10773,
											"end": 10845,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 10773,
											"end": 10845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10773,
											"end": 10845,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 10773,
											"end": 10845,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10520,
											"end": 10852,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10520,
											"end": 10852,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10520,
											"end": 10852,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10520,
											"end": 10852,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10520,
											"end": 10852,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10520,
											"end": 10852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10858,
											"end": 11024,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 10858,
											"end": 11024,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10998,
											"end": 11016,
											"name": "PUSH",
											"source": 12,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 10994,
											"end": 10995,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10986,
											"end": 10992,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10982,
											"end": 10996,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10975,
											"end": 11017,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10858,
											"end": 11024,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10858,
											"end": 11024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11030,
											"end": 11396,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 11030,
											"end": 11396,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11172,
											"end": 11175,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11193,
											"end": 11260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 11257,
											"end": 11259,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 11252,
											"end": 11255,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11193,
											"end": 11260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 11193,
											"end": 11260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11193,
											"end": 11260,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 11193,
											"end": 11260,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11186,
											"end": 11260,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11186,
											"end": 11260,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11269,
											"end": 11362,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 11358,
											"end": 11361,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11269,
											"end": 11362,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 11269,
											"end": 11362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11269,
											"end": 11362,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 11269,
											"end": 11362,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11387,
											"end": 11389,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11382,
											"end": 11385,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11378,
											"end": 11390,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11371,
											"end": 11390,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11371,
											"end": 11390,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11030,
											"end": 11396,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11030,
											"end": 11396,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11030,
											"end": 11396,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11030,
											"end": 11396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11402,
											"end": 11821,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 11402,
											"end": 11821,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11568,
											"end": 11572,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11606,
											"end": 11608,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11595,
											"end": 11604,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11591,
											"end": 11609,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11583,
											"end": 11609,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11583,
											"end": 11609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11655,
											"end": 11664,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11649,
											"end": 11653,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11645,
											"end": 11665,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11641,
											"end": 11642,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11630,
											"end": 11639,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11626,
											"end": 11643,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11619,
											"end": 11666,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11683,
											"end": 11814,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 11809,
											"end": 11813,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11683,
											"end": 11814,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 11683,
											"end": 11814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11683,
											"end": 11814,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 11683,
											"end": 11814,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11675,
											"end": 11814,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11675,
											"end": 11814,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11402,
											"end": 11821,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11402,
											"end": 11821,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11402,
											"end": 11821,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11402,
											"end": 11821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/token/Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MINTER_ROLE()": "d5391393",
							"PAUSER_ROLE()": "e63ab1e9",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/Token.sol\":\"TokenMint\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/token/Token.sol\":{\"keccak256\":\"0xda58ad16f1d93ed269f969cf31de33d851c67f7cc259c47d2016db1ac732b073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d884ec1927d7278ae741285efd0a35d482427d4501f93ba5919e0bf47544a7da\",\"dweb:/ipfs/Qmcf9mZsa6aeNZD5d6ZufU1vD58Ec5W2oyPsrpYqis5BVH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 711,
								"contract": "contracts/token/Token.sol:TokenMint",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 717,
								"contract": "contracts/token/Token.sol:TokenMint",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 719,
								"contract": "contracts/token/Token.sol:TokenMint",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 721,
								"contract": "contracts/token/Token.sol:TokenMint",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 723,
								"contract": "contracts/token/Token.sol:TokenMint",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 26,
								"contract": "contracts/token/Token.sol:TokenMint",
								"label": "_roles",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 634,
								"contract": "contracts/token/Token.sol:TokenMint",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 533,
								"contract": "contracts/token/Token.sol:TokenMint",
								"label": "_paused",
								"offset": 0,
								"slot": "7",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/token/Token.sol:TokenMint",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/token/Token.sol:TokenMint",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1337
						],
						"ERC165": [
							1361
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1338,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1337,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1362,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1361,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1337,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1361,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1361,
								1373,
								378,
								1337
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1360
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1360,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1319,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1319,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1319,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							515
						],
						"IERC20Errors": [
							420
						],
						"IERC721Errors": [
							468
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:2",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 420,
							"linearizedBaseContracts": [
								420
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 390,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "654:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "670:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "687:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:2"
									},
									"src": "623:80:2"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 395,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "891:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:2"
									},
									"src": "866:41:2"
								},
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 400,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1104:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:2"
									},
									"src": "1077:45:2"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 409,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1511:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1528:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1547:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:2"
									},
									"src": "1478:85:2"
								},
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 414,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "1775:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:2"
									},
									"src": "1748:45:2"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 419,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:2"
									},
									"src": "1999:43:2"
								}
							],
							"scope": 516,
							"src": "280:1764:2",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 421,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:2",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 426,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2469:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:2"
									},
									"src": "2444:40:2"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 431,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2656:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:2"
									},
									"src": "2627:46:2"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 440,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3000:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3016:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3033:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:2"
									},
									"src": "2973:75:2"
								},
								{
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 445,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3237:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:2"
									},
									"src": "3211:42:2"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 450,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3451:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:2"
									},
									"src": "3423:46:2"
								},
								{
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 457,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3760:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3778:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:2"
									},
									"src": "3727:68:2"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 462,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4008:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:2"
									},
									"src": "3980:46:2"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 467,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4262:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:2"
									},
									"src": "4234:46:2"
								}
							],
							"scope": 516,
							"src": "2190:2092:2",
							"usedErrors": [
								426,
								431,
								440,
								445,
								450,
								457,
								462,
								467
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 469,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:2",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 515,
							"linearizedBaseContracts": [
								515
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 480,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4860:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4876:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4893:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4909:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:2"
									},
									"src": "4827:99:2"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 485,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "5116:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:2"
									},
									"src": "5089:43:2"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 490,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "5331:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:2"
									},
									"src": "5302:47:2"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 497,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5651:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5669:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:2"
									},
									"src": "5616:68:2"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 502,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5898:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:2"
									},
									"src": "5869:47:2"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 507,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6153:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:2"
									},
									"src": "6124:47:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 514,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6494:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6513:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:2"
									},
									"src": "6462:73:2"
								}
							],
							"scope": 516,
							"src": "4430:2107:2",
							"usedErrors": [
								480,
								485,
								490,
								497,
								502,
								507,
								514
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1337
						],
						"Pausable": [
							623
						]
					},
					"id": 624,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 518,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 624,
							"sourceUnit": 1338,
							"src": "130:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 520,
										"name": "Context",
										"nameLocations": [
											"632:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1337,
										"src": "632:7:3"
									},
									"id": 521,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:3"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 519,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:3",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 623,
							"linearizedBaseContracts": [
								623,
								1337
							],
							"name": "Pausable",
							"nameLocation": "620:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:3",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 526,
									"name": "Paused",
									"nameLocation": "730:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "737:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:3"
									},
									"src": "724:30:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:3",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 531,
									"name": "Unpaused",
									"nameLocation": "841:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "850:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:3"
									},
									"src": "835:32:3"
								},
								{
									"constant": false,
									"id": 533,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 623,
									"src": "873:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 532,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "986:32:3",
										"statements": [
											{
												"expression": {
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 537,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "996:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "996:15:3"
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:3",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 542,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:3"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:3"
									},
									"scope": 623,
									"src": "972:46:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "1229:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 545,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "1239:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:3"
											},
											{
												"id": 548,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:3"
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:3",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 550,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:3"
									},
									"src": "1204:72:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "1476:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 553,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "1486:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:3"
											},
											{
												"id": 556,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:3"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:3",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 558,
									"name": "whenPaused",
									"nameLocation": "1463:10:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:3"
									},
									"src": "1454:66:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "1668:31:3",
										"statements": [
											{
												"expression": {
													"id": 564,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 533,
													"src": "1685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 563,
												"id": 565,
												"nodeType": "Return",
												"src": "1678:14:3"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:3",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:3"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1662:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:3"
									},
									"scope": 623,
									"src": "1615:84:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "1818:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:3",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 572,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "1837:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 571,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 577,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:3"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:3",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:3"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:3"
									},
									"scope": 623,
									"src": "1767:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "1993:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 584,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "2011:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 583,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:3"
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:3",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:3"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:3"
									},
									"scope": 623,
									"src": "1945:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "2235:66:3",
										"statements": [
											{
												"expression": {
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 596,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "2245:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 597,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 601,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1319,
																"src": "2281:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 600,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2274:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "2269:25:3"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:3",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 594,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 593,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "2221:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:3"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:3"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:3"
									},
									"scope": 623,
									"src": "2186:115:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "2481:69:3",
										"statements": [
											{
												"expression": {
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 612,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "2491:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 613,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 615,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 617,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1319,
																"src": "2530:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 616,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "2521:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "EmitStatement",
												"src": "2516:27:3"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:3",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 610,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 609,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 558,
												"src": "2470:10:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:3"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:3"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:3"
									},
									"scope": 623,
									"src": "2433:117:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 624,
							"src": "602:1950:3",
							"usedErrors": [],
							"usedEvents": [
								526,
								531
							]
						}
					],
					"src": "105:2448:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							688
						]
					},
					"id": 689,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 625,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 626,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 688,
							"linearizedBaseContracts": [
								688
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 629,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 688,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 627,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 628,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 632,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 688,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 630,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 631,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 634,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 688,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 633,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 637,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 638,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 642,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 688,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 645,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 648,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 649,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 653,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 657,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 658,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 656,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 663,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 664,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 688,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 671,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 672,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 688,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 682,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 683,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 681,
												"id": 685,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 679,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 688,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 689,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1337
						],
						"ERC20": [
							1203
						],
						"IERC20": [
							1281
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1307
						]
					},
					"id": 1204,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 690,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 692,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1204,
							"sourceUnit": 1282,
							"src": "131:36:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 691,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1281,
										"src": "139:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 694,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1204,
							"sourceUnit": 1308,
							"src": "168:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 693,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1307,
										"src": "176:14:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 696,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1204,
							"sourceUnit": 1338,
							"src": "232:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 695,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1337,
										"src": "240:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 698,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1204,
							"sourceUnit": 516,
							"src": "281:65:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 697,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 420,
										"src": "289:12:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 700,
										"name": "Context",
										"nameLocations": [
											"1133:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1337,
										"src": "1133:7:5"
									},
									"id": 701,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:5"
								},
								{
									"baseName": {
										"id": 702,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1281,
										"src": "1142:6:5"
									},
									"id": 703,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:5"
								},
								{
									"baseName": {
										"id": 704,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1307,
										"src": "1150:14:5"
									},
									"id": 705,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:5"
								},
								{
									"baseName": {
										"id": 706,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 420,
										"src": "1166:12:5"
									},
									"id": 707,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:5"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 699,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:5",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1203,
							"linearizedBaseContracts": [
								1203,
								420,
								1307,
								1281,
								1337
							],
							"name": "ERC20",
							"nameLocation": "1124:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 711,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1203,
									"src": "1185:53:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 710,
										"keyName": "account",
										"keyNameLocation": "1201:7:5",
										"keyType": {
											"id": 708,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 709,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 717,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1203,
									"src": "1245:83:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 716,
										"keyName": "account",
										"keyNameLocation": "1261:7:5",
										"keyType": {
											"id": 712,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 715,
											"keyName": "spender",
											"keyNameLocation": "1288:7:5",
											"keyType": {
												"id": 713,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 714,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 719,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1203,
									"src": "1335:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 718,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 721,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1203,
									"src": "1370:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 720,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 723,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1203,
									"src": "1396:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 722,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "1657:57:5",
										"statements": [
											{
												"expression": {
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 731,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "1667:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 732,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "1675:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:5"
											},
											{
												"expression": {
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 735,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "1690:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 736,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "1700:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:5"
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:5",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 740,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "1613:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 725,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "1634:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 727,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:5"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:5"
									},
									"scope": 1203,
									"src": "1601:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1294
									],
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "1839:29:5",
										"statements": [
											{
												"expression": {
													"id": 746,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 721,
													"src": "1856:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 745,
												"id": 747,
												"nodeType": "Return",
												"src": "1849:12:5"
											}
										]
									},
									"documentation": {
										"id": 741,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:5"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "1824:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 743,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:5"
									},
									"scope": 1203,
									"src": "1779:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1300
									],
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "2043:31:5",
										"statements": [
											{
												"expression": {
													"id": 755,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 723,
													"src": "2060:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 754,
												"id": 756,
												"nodeType": "Return",
												"src": "2053:14:5"
											}
										]
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:5",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:5"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "2028:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 752,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:5"
									},
									"scope": 1203,
									"src": "1981:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1306
									],
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "2763:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 763,
												"id": 765,
												"nodeType": "Return",
												"src": "2773:9:5"
											}
										]
									},
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:5",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:5"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2756:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 761,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:5"
									},
									"scope": 1203,
									"src": "2707:82:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1230
									],
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "2910:36:5",
										"statements": [
											{
												"expression": {
													"id": 773,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 719,
													"src": "2927:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 772,
												"id": 774,
												"nodeType": "Return",
												"src": "2920:19:5"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:5",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:5"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "2901:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:5"
									},
									"scope": 1203,
									"src": "2849:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1238
									],
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "3078:42:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 784,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "3095:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 786,
													"indexExpression": {
														"id": 785,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "3105:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 783,
												"id": 787,
												"nodeType": "Return",
												"src": "3088:25:5"
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:5",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "3023:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:5"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "3069:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:5"
									},
									"scope": 1203,
									"src": "3004:116:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1248
									],
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "3390:103:5",
										"statements": [
											{
												"assignments": [
													800
												],
												"declarations": [
													{
														"constant": false,
														"id": 800,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 812,
														"src": "3400:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 799,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 803,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 801,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "3416:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 805,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "3448:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 806,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "3455:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 807,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "3459:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 804,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "3438:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 798,
												"id": 811,
												"nodeType": "Return",
												"src": "3475:11:5"
											}
										]
									},
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:5",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "3333:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "3345:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:5"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "3384:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 796,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:5"
									},
									"scope": 1203,
									"src": "3315:178:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1258
									],
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "3640:51:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 823,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "3657:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 825,
														"indexExpression": {
															"id": 824,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "3669:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 827,
													"indexExpression": {
														"id": 826,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "3676:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 822,
												"id": 828,
												"nodeType": "Return",
												"src": "3650:34:5"
											}
										]
									},
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:5",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "3570:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "3585:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:5"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "3631:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:5"
									},
									"scope": 1203,
									"src": "3551:140:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1268
									],
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "4077:107:5",
										"statements": [
											{
												"assignments": [
													841
												],
												"declarations": [
													{
														"constant": false,
														"id": 841,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 853,
														"src": "4087:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 840,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 844,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 842,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "4103:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 846,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "4134:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 847,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "4141:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 848,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "4150:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 845,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1094,
															1154
														],
														"referencedDeclaration": 1094,
														"src": "4125:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 839,
												"id": 852,
												"nodeType": "Return",
												"src": "4166:11:5"
											}
										]
									},
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:5",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "4015:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "4032:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:5"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "4071:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 837,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:5"
									},
									"scope": 1203,
									"src": "3998:186:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1280
									],
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "4869:151:5",
										"statements": [
											{
												"assignments": [
													867
												],
												"declarations": [
													{
														"constant": false,
														"id": 867,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 885,
														"src": "4879:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 866,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 870,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 868,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "4897:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 872,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "4935:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 873,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "4941:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 874,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "4950:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 871,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "4919:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 878,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "4976:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 879,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "4982:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 880,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "4986:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 877,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "4966:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 865,
												"id": 884,
												"nodeType": "Return",
												"src": "5002:11:5"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:5",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "4798:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "4812:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "4824:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:5"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "4863:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 863,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:5"
									},
									"scope": 1203,
									"src": "4776:244:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 932,
										"nodeType": "Block",
										"src": "5462:231:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 896,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "5476:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 897,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 900,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 910,
												"nodeType": "IfStatement",
												"src": "5472:86:5",
												"trueBody": {
													"id": 909,
													"nodeType": "Block",
													"src": "5496:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 905,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 904,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 903,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 902,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "5517:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 908,
															"nodeType": "RevertStatement",
															"src": "5510:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 911,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "5571:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 912,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 925,
												"nodeType": "IfStatement",
												"src": "5567:86:5",
												"trueBody": {
													"id": 924,
													"nodeType": "Block",
													"src": "5589:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 920,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 919,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 918,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 917,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "5610:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 923,
															"nodeType": "RevertStatement",
															"src": "5603:39:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 927,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "5670:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 928,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "5676:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 929,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "5680:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 926,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "5662:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 931,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:5"
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "5412:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "5426:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "5438:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:5"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:5"
									},
									"scope": 1203,
									"src": "5393:300:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "6083:1032:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 943,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "6097:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 944,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 947,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 980,
													"nodeType": "Block",
													"src": "6271:362:5",
													"statements": [
														{
															"assignments": [
																955
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 955,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 980,
																	"src": "6285:19:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 954,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 959,
															"initialValue": {
																"baseExpression": {
																	"id": 956,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 711,
																	"src": "6307:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 958,
																"indexExpression": {
																	"id": 957,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "6317:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 960,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "6340:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 961,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "6354:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 970,
															"nodeType": "IfStatement",
															"src": "6336:115:5",
															"trueBody": {
																"id": 969,
																"nodeType": "Block",
																"src": "6361:90:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 964,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 936,
																					"src": "6411:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 965,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 955,
																					"src": "6417:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 966,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 940,
																					"src": "6430:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 963,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "6386:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 967,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 968,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:5"
																	}
																]
															}
														},
														{
															"id": 979,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:5",
															"statements": [
																{
																	"expression": {
																		"id": 977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 971,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 711,
																				"src": "6571:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 973,
																			"indexExpression": {
																				"id": 972,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 936,
																				"src": "6581:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 974,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 955,
																				"src": "6589:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 975,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 940,
																				"src": "6603:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 978,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:5"
																}
															]
														}
													]
												},
												"id": 981,
												"nodeType": "IfStatement",
												"src": "6093:540:5",
												"trueBody": {
													"id": 953,
													"nodeType": "Block",
													"src": "6117:148:5",
													"statements": [
														{
															"expression": {
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 949,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 719,
																	"src": "6233:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 950,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "6249:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 952,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 982,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "6647:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 983,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1001,
													"nodeType": "Block",
													"src": "6862:206:5",
													"statements": [
														{
															"id": 1000,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:5",
															"statements": [
																{
																	"expression": {
																		"id": 998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 994,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 711,
																				"src": "7021:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 996,
																			"indexExpression": {
																				"id": 995,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 938,
																				"src": "7031:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 997,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 940,
																			"src": "7038:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 999,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:5"
																}
															]
														}
													]
												},
												"id": 1002,
												"nodeType": "IfStatement",
												"src": "6643:425:5",
												"trueBody": {
													"id": 993,
													"nodeType": "Block",
													"src": "6665:191:5",
													"statements": [
														{
															"id": 992,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:5",
															"statements": [
																{
																	"expression": {
																		"id": 990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 988,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 719,
																			"src": "6810:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 989,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 940,
																			"src": "6826:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 991,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:5"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1004,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "7092:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1005,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "7098:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1006,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "7102:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1003,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "7083:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1008,
												"nodeType": "EmitStatement",
												"src": "7078:30:5"
											}
										]
									},
									"documentation": {
										"id": 934,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:5",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "6025:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "6039:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "6051:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:5"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:5"
									},
									"scope": 1203,
									"src": "6008:1107:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "7514:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1018,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "7528:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1019,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1032,
												"nodeType": "IfStatement",
												"src": "7524:91:5",
												"trueBody": {
													"id": 1031,
													"nodeType": "Block",
													"src": "7551:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1027,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1025,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1024,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "7572:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1030,
															"nodeType": "RevertStatement",
															"src": "7565:39:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1034,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1038,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "7644:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1039,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "7653:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1033,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "7624:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1041,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:5"
											}
										]
									},
									"documentation": {
										"id": 1011,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:5",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "7473:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "7490:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:5"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:5"
									},
									"scope": 1203,
									"src": "7458:208:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "8040:150:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1051,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "8054:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1052,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1065,
												"nodeType": "IfStatement",
												"src": "8050:89:5",
												"trueBody": {
													"id": 1064,
													"nodeType": "Block",
													"src": "8077:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1060,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1059,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1058,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1057,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "8098:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1063,
															"nodeType": "RevertStatement",
															"src": "8091:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1067,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "8156:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1068,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1072,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "8177:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1066,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "8148:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:5"
											}
										]
									},
									"documentation": {
										"id": 1044,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:5",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "7999:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "8016:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:5"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:5"
									},
									"scope": 1203,
									"src": "7984:206:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1093,
										"nodeType": "Block",
										"src": "8800:54:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1087,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "8819:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1088,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "8826:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1089,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "8835:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1086,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1094,
															1154
														],
														"referencedDeclaration": 1154,
														"src": "8810:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:5"
											}
										]
									},
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:5",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "8744:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "8759:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "8776:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:5"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:5"
									},
									"scope": 1203,
									"src": "8726:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1153,
										"nodeType": "Block",
										"src": "9799:334:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1106,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1097,
														"src": "9813:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1120,
												"nodeType": "IfStatement",
												"src": "9809:89:5",
												"trueBody": {
													"id": 1119,
													"nodeType": "Block",
													"src": "9834:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1112,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "9855:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1118,
															"nodeType": "RevertStatement",
															"src": "9848:39:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1121,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "9911:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1122,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1135,
												"nodeType": "IfStatement",
												"src": "9907:90:5",
												"trueBody": {
													"id": 1134,
													"nodeType": "Block",
													"src": "9934:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1130,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1128,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1127,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "9955:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1133,
															"nodeType": "RevertStatement",
															"src": "9948:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1136,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 717,
																"src": "10006:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1139,
															"indexExpression": {
																"id": 1137,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1097,
																"src": "10018:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1140,
														"indexExpression": {
															"id": 1138,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "10025:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1141,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1101,
														"src": "10036:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1143,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:5"
											},
											{
												"condition": {
													"id": 1144,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1103,
													"src": "10055:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1152,
												"nodeType": "IfStatement",
												"src": "10051:76:5",
												"trueBody": {
													"id": 1151,
													"nodeType": "Block",
													"src": "10066:61:5",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1146,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1097,
																		"src": "10094:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1147,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1099,
																		"src": "10101:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1148,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "10110:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1145,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1224,
																	"src": "10085:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1150,
															"nodeType": "EmitStatement",
															"src": "10080:36:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1095,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:5",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "9719:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "9734:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "9751:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "9766:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1102,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:5"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:5"
									},
									"scope": 1203,
									"src": "9701:432:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1201,
										"nodeType": "Block",
										"src": "10504:388:5",
										"statements": [
											{
												"assignments": [
													1165
												],
												"declarations": [
													{
														"constant": false,
														"id": 1165,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:5",
														"nodeType": "VariableDeclaration",
														"scope": 1201,
														"src": "10514:24:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1164,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1170,
												"initialValue": {
													"arguments": [
														{
															"id": 1167,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "10551:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1168,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "10558:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1166,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "10541:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1171,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "10580:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1173,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1172,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1200,
												"nodeType": "IfStatement",
												"src": "10576:310:5",
												"trueBody": {
													"id": 1199,
													"nodeType": "Block",
													"src": "10619:267:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1178,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "10637:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1179,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "10656:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1188,
															"nodeType": "IfStatement",
															"src": "10633:130:5",
															"trueBody": {
																"id": 1187,
																"nodeType": "Block",
																"src": "10663:100:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1182,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1159,
																					"src": "10715:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1183,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1165,
																					"src": "10724:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1184,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1161,
																					"src": "10742:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1181,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "10688:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1186,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:5"
																	}
																]
															}
														},
														{
															"id": 1198,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:5",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1190,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1157,
																				"src": "10813:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1191,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1159,
																				"src": "10820:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1194,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1192,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1165,
																					"src": "10829:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1193,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1161,
																					"src": "10848:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1189,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1094,
																				1154
																			],
																			"referencedDeclaration": 1154,
																			"src": "10804:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1197,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:5"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1155,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:5",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "10440:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "10455:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "10472:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:5"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:5"
									},
									"scope": 1203,
									"src": "10415:477:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1204,
							"src": "1106:9788:5",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								1215,
								1224
							]
						}
					],
					"src": "105:10790:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1281
						]
					},
					"id": 1282,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1205,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1206,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:6",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1281,
							"linearizedBaseContracts": [
								1281
							],
							"name": "IERC20",
							"nameLocation": "214:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1207,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1215,
									"name": "Transfer",
									"nameLocation": "396:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "405:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "427:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "447:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:6"
									},
									"src": "390:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1224,
									"name": "Approval",
									"nameLocation": "627:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "636:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "659:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:6"
									},
									"src": "621:78:6"
								},
								{
									"documentation": {
										"id": 1225,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1230,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:6"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "821:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:6"
									},
									"scope": 1281,
									"src": "775:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "931:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:6"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "971:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:6"
									},
									"scope": 1281,
									"src": "912:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1222:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1234:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:6"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1267:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:6"
									},
									"scope": 1281,
									"src": "1204:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "1567:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "1582:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:6"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "1622:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:6"
									},
									"scope": 1281,
									"src": "1548:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2326:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2343:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:6"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2376:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1265,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:6"
									},
									"scope": 1281,
									"src": "2309:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "2712:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "2726:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "2738:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:6"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "2771:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1277,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:6"
									},
									"scope": 1281,
									"src": "2690:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1282,
							"src": "204:2575:6",
							"usedErrors": [],
							"usedEvents": [
								1215,
								1224
							]
						}
					],
					"src": "106:2674:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1281
						],
						"IERC20Metadata": [
							1307
						]
					},
					"id": 1308,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1283,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1285,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1308,
							"sourceUnit": 1282,
							"src": "151:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1284,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1281,
										"src": "159:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1287,
										"name": "IERC20",
										"nameLocations": [
											"306:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1281,
										"src": "306:6:7"
									},
									"id": 1288,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:7"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1286,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:7",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1307,
							"linearizedBaseContracts": [
								1307,
								1281
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:7",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:7"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "417:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:7"
									},
									"scope": 1307,
									"src": "378:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:7",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1300,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:7"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "540:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1297,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:7"
									},
									"scope": 1307,
									"src": "499:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:7",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1306,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:7"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "674:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1303,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:7"
									},
									"scope": 1307,
									"src": "631:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1308,
							"src": "278:405:7",
							"usedErrors": [],
							"usedEvents": [
								1215,
								1224
							]
						}
					],
					"src": "125:559:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1337
						]
					},
					"id": 1338,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1309,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1310,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1337,
							"linearizedBaseContracts": [
								1337
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1315,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1314,
												"id": 1317,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1337,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1327,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1324,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1323,
												"id": 1326,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1321,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1337,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1335,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1332,
												"id": 1334,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1337,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1338,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1361
						],
						"IERC165": [
							1373
						]
					},
					"id": 1362,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1339,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1341,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1362,
							"sourceUnit": 1374,
							"src": "140:38:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1340,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1373,
										"src": "148:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1343,
										"name": "IERC165",
										"nameLocations": [
											"688:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1373,
										"src": "688:7:9"
									},
									"id": 1344,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1342,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1361,
							"linearizedBaseContracts": [
								1361,
								1373
							],
							"name": "ERC165",
							"nameLocation": "678:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1372
									],
									"body": {
										"id": 1359,
										"nodeType": "Block",
										"src": "845:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1352,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1347,
														"src": "862:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1354,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1373,
																	"src": "882:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1373_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1373_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1353,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1373",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1351,
												"id": 1358,
												"nodeType": "Return",
												"src": "855:47:9"
											}
										]
									},
									"documentation": {
										"id": 1345,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "790:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1346,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:9"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "839:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1349,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:9"
									},
									"scope": 1361,
									"src": "763:146:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1362,
							"src": "660:251:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1373
						]
					},
					"id": 1374,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1363,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1364,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1373,
							"linearizedBaseContracts": [
								1373
							],
							"name": "IERC165",
							"nameLocation": "432:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1365,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1372,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "818:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1366,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:10"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "861:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1369,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:10"
									},
									"scope": 1373,
									"src": "791:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1374,
							"src": "422:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:10"
				},
				"id": 10
			},
			"contracts/token/Token.sol": {
				"ast": {
					"absolutePath": "contracts/token/Token.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1337
						],
						"ERC165": [
							1361
						],
						"ERC20": [
							1203
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							1281
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1307
						],
						"Pausable": [
							623
						],
						"ReentrancyGuard": [
							688
						],
						"TokenMint": [
							1478
						]
					},
					"id": 1479,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1375,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1376,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1479,
							"sourceUnit": 1204,
							"src": "56:55:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1377,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1479,
							"sourceUnit": 296,
							"src": "112:58:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1378,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1479,
							"sourceUnit": 689,
							"src": "171:62:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1379,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1479,
							"sourceUnit": 624,
							"src": "234:55:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1380,
										"name": "ERC20",
										"nameLocations": [
											"313:5:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1203,
										"src": "313:5:11"
									},
									"id": 1381,
									"nodeType": "InheritanceSpecifier",
									"src": "313:5:11"
								},
								{
									"baseName": {
										"id": 1382,
										"name": "AccessControl",
										"nameLocations": [
											"320:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "320:13:11"
									},
									"id": 1383,
									"nodeType": "InheritanceSpecifier",
									"src": "320:13:11"
								},
								{
									"baseName": {
										"id": 1384,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"335:15:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 688,
										"src": "335:15:11"
									},
									"id": 1385,
									"nodeType": "InheritanceSpecifier",
									"src": "335:15:11"
								},
								{
									"baseName": {
										"id": 1386,
										"name": "Pausable",
										"nameLocations": [
											"352:8:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 623,
										"src": "352:8:11"
									},
									"id": 1387,
									"nodeType": "InheritanceSpecifier",
									"src": "352:8:11"
								}
							],
							"canonicalName": "TokenMint",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1478,
							"linearizedBaseContracts": [
								1478,
								623,
								688,
								295,
								1361,
								1373,
								378,
								1203,
								420,
								1307,
								1281,
								1337
							],
							"name": "TokenMint",
							"nameLocation": "300:9:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 1392,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nameLocation": "391:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1478,
									"src": "367:62:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1388,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "367:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e5445525f524f4c45",
												"id": 1390,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "415:13:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 1389,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "405:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1391,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "405:24:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e63ab1e9",
									"id": 1397,
									"mutability": "constant",
									"name": "PAUSER_ROLE",
									"nameLocation": "459:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1478,
									"src": "435:62:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1393,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "435:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5041555345525f524f4c45",
												"id": 1395,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "483:13:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												},
												"value": "PAUSER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												}
											],
											"id": 1394,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "473:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1396,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "473:24:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1400,
									"mutability": "immutable",
									"name": "_decimals",
									"nameLocation": "527:9:11",
									"nodeType": "VariableDeclaration",
									"scope": 1478,
									"src": "503:38:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1398,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "503:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 1399,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "539:2:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe",
									"id": 1406,
									"name": "Minted",
									"nameLocation": "553:6:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "576:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "560:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "592:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "584:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:41:11"
									},
									"src": "547:54:11"
								},
								{
									"body": {
										"id": 1439,
										"nodeType": "Block",
										"src": "742:164:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1420,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "760:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "777:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "769:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1421,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "769:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "769:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "760:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41646d696e2063616e6e6f74206265207a65726f2061646472657373",
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "781:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_10657174ead1fc3dc6d1d3f881b335facfc9095796fd15a08f7c17697cf4bb24",
																"typeString": "literal_string \"Admin cannot be zero address\""
															},
															"value": "Admin cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_10657174ead1fc3dc6d1d3f881b335facfc9095796fd15a08f7c17697cf4bb24",
																"typeString": "literal_string \"Admin cannot be zero address\""
															}
														],
														"id": 1419,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "752:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "752:60:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1428,
												"nodeType": "ExpressionStatement",
												"src": "752:60:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1430,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "833:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1431,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "853:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1429,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "822:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "822:37:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1433,
												"nodeType": "ExpressionStatement",
												"src": "822:37:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1435,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "880:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1436,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "893:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1434,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "869:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "869:30:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1438,
												"nodeType": "ExpressionStatement",
												"src": "869:30:11"
											}
										]
									},
									"id": 1440,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1415,
													"name": "name_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1408,
													"src": "722:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1416,
													"name": "symbol_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1410,
													"src": "729:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1417,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1414,
												"name": "ERC20",
												"nameLocations": [
													"716:5:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1203,
												"src": "716:5:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "716:21:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "642:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "628:19:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1407,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "628:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "671:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "657:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1409,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "657:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "696:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "688:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "688:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "618:89:11"
									},
									"returnParameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "742:0:11"
									},
									"scope": 1478,
									"src": "607:299:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1457,
										"nodeType": "Block",
										"src": "1020:34:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "1036:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1454,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "1040:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1452,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "1030:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1030:17:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1456,
												"nodeType": "ExpressionStatement",
												"src": "1030:17:11"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1458,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1447,
													"name": "MINTER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1392,
													"src": "994:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1448,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1446,
												"name": "onlyRole",
												"nameLocations": [
													"985:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "985:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "985:21:11"
										},
										{
											"id": 1450,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1449,
												"name": "nonReentrant",
												"nameLocations": [
													"1007:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 653,
												"src": "1007:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1007:12:11"
										}
									],
									"name": "mint",
									"nameLocation": "921:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "943:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "935:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "963:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "955:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:50:11"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1020:0:11"
									},
									"scope": 1478,
									"src": "912:142:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										767
									],
									"body": {
										"id": 1466,
										"nodeType": "Block",
										"src": "1117:33:11",
										"statements": [
											{
												"expression": {
													"id": 1464,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1400,
													"src": "1134:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1463,
												"id": 1465,
												"nodeType": "Return",
												"src": "1127:16:11"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1069:8:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1460,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1092:8:11"
									},
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1077:2:11"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "1110:5:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1461,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1110:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1109:7:11"
									},
									"scope": 1478,
									"src": "1060:90:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1476,
										"nodeType": "Block",
										"src": "1204:25:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1473,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "1214:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1214:8:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1475,
												"nodeType": "ExpressionStatement",
												"src": "1214:8:11"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1477,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1470,
													"name": "PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1397,
													"src": "1191:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1471,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1469,
												"name": "onlyRole",
												"nameLocations": [
													"1182:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1182:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1182:21:11"
										}
									],
									"name": "pause",
									"nameLocation": "1165:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1170:2:11"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1204:0:11"
									},
									"scope": 1478,
									"src": "1156:73:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1479,
							"src": "291:942:11",
							"usedErrors": [
								305,
								308,
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								317,
								326,
								335,
								526,
								531,
								1215,
								1224,
								1406
							]
						}
					],
					"src": "32:1201:11"
				},
				"id": 11
			}
		}
	}
}